J$.iids = {"8":[13,20,13,36],"9":[1,1,1,13],"10":[17,56,17,78],"16":[17,56,17,78],"17":[1,1,1,14],"25":[2,9,2,16],"33":[2,17,2,38],"41":[2,9,2,39],"49":[2,9,2,39],"57":[2,9,2,39],"65":[3,24,3,31],"73":[3,32,3,65],"81":[3,24,3,66],"89":[3,24,3,66],"97":[3,24,3,66],"105":[4,16,4,23],"113":[4,24,4,48],"121":[4,16,4,49],"129":[4,16,4,49],"137":[4,16,4,49],"145":[5,16,5,23],"153":[5,24,5,48],"161":[5,16,5,49],"169":[5,16,5,49],"177":[5,16,5,49],"185":[6,17,6,24],"193":[6,25,6,50],"201":[6,17,6,51],"209":[6,17,6,51],"217":[6,17,6,51],"225":[7,26,7,33],"233":[7,34,7,69],"241":[7,26,7,70],"249":[7,26,7,70],"257":[7,26,7,70],"265":[11,1,11,2],"273":[11,13,11,20],"281":[11,29,11,33],"289":[11,3,11,35],"297":[13,20,13,29],"305":[13,20,13,36],"313":[13,39,13,48],"321":[13,49,13,50],"329":[13,39,13,51],"337":[13,54,13,63],"345":[13,20,13,63],"353":[13,20,13,63],"361":[14,13,14,21],"369":[14,22,14,26],"377":[14,13,14,27],"385":[14,13,14,27],"393":[14,13,14,27],"401":[15,21,15,29],"409":[15,30,15,31],"417":[15,30,15,38],"425":[15,21,15,39],"433":[15,21,15,39],"441":[15,21,15,39],"449":[16,13,16,31],"457":[16,32,16,33],"465":[16,35,16,36],"473":[16,13,16,37],"481":[16,13,16,37],"489":[16,13,16,37],"497":[17,5,17,6],"505":[17,16,17,32],"513":[17,33,17,34],"521":[17,36,17,37],"529":[17,39,17,40],"537":[17,42,17,51],"545":[17,53,17,54],"553":[17,56,17,64],"561":[17,69,17,78],"569":[17,81,17,82],"577":[17,85,17,94],"585":[17,95,17,103],"593":[17,85,17,104],"601":[17,16,17,105],"609":[17,5,17,105],"617":[17,5,17,106],"625":[18,12,18,13],"633":[18,12,18,13],"641":[18,5,18,14],"649":[12,9,19,4],"657":[12,9,19,4],"665":[12,9,19,4],"673":[12,9,19,4],"681":[12,9,19,4],"689":[12,9,19,4],"697":[12,9,19,4],"705":[12,9,19,4],"713":[11,37,20,2],"721":[11,1,20,3],"729":[11,1,20,4],"737":[1,1,21,1],"745":[1,1,21,1],"753":[1,1,21,1],"761":[1,1,21,1],"769":[1,1,21,1],"777":[1,1,21,1],"785":[1,1,21,1],"793":[13,20,13,63],"801":[17,56,17,104],"809":[12,9,19,4],"817":[12,9,19,4],"825":[1,1,21,1],"833":[1,1,21,1],"nBranches":4,"originalCodeFileName":"/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/modules/es.array.flat.js","instrumentedCodeFileName":"/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/modules/es.array.flat_jalangi_.js","code":"'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flat` method\n// https://github.com/tc39/proposal-flatMap\n$({ target: 'Array', proto: true }, {\n  flat: function flat(/* depthArg = 1 */) {\n    var depthArg = arguments.length ? arguments[0] : undefined;\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));\n    return A;\n  }\n});\n"};
jalangiLabel356:
    while (true) {
        try {
            J$.Se(737, '/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/modules/es.array.flat_jalangi_.js', '/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/modules/es.array.flat.js');
            J$.N(745, '$', $, 0);
            J$.N(753, 'flattenIntoArray', flattenIntoArray, 0);
            J$.N(761, 'toObject', toObject, 0);
            J$.N(769, 'toLength', toLength, 0);
            J$.N(777, 'toInteger', toInteger, 0);
            J$.N(785, 'arraySpeciesCreate', arraySpeciesCreate, 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var $ = J$.X1(57, J$.W(49, '$', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../internals/export', 21, false)), $, 3));
            var flattenIntoArray = J$.X1(97, J$.W(89, 'flattenIntoArray', J$.F(81, J$.R(65, 'require', require, 2), 0)(J$.T(73, '../internals/flatten-into-array', 21, false)), flattenIntoArray, 3));
            var toObject = J$.X1(137, J$.W(129, 'toObject', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, '../internals/to-object', 21, false)), toObject, 3));
            var toLength = J$.X1(177, J$.W(169, 'toLength', J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, '../internals/to-length', 21, false)), toLength, 3));
            var toInteger = J$.X1(217, J$.W(209, 'toInteger', J$.F(201, J$.R(185, 'require', require, 2), 0)(J$.T(193, '../internals/to-integer', 21, false)), toInteger, 3));
            var arraySpeciesCreate = J$.X1(257, J$.W(249, 'arraySpeciesCreate', J$.F(241, J$.R(225, 'require', require, 2), 0)(J$.T(233, '../internals/array-species-create', 21, false)), arraySpeciesCreate, 3));
            J$.X1(729, J$.F(721, J$.R(265, '$', $, 1), 0)(J$.T(289, {
                target: J$.T(273, 'Array', 21, false),
                proto: J$.T(281, true, 23, false)
            }, 11, false), J$.T(713, {
                flat: J$.T(705, function flat() {
                    jalangiLabel355:
                        while (true) {
                            try {
                                J$.Fe(649, arguments.callee, this, arguments);
                                arguments = J$.N(657, 'arguments', arguments, 4);
                                flat = J$.N(665, 'flat', flat, 0);
                                J$.N(673, 'depthArg', depthArg, 0);
                                J$.N(681, 'O', O, 0);
                                J$.N(689, 'sourceLen', sourceLen, 0);
                                J$.N(697, 'A', A, 0);
                                var depthArg = J$.X1(353, J$.W(345, 'depthArg', J$.X1(793, J$.C(8, J$.G(305, J$.R(297, 'arguments', arguments, 2), 'length', 0))) ? J$.G(329, J$.R(313, 'arguments', arguments, 2), J$.T(321, 0, 22, false), 4) : J$.T(337, undefined, 24, false), depthArg, 1));
                                var O = J$.X1(393, J$.W(385, 'O', J$.F(377, J$.R(361, 'toObject', toObject, 1), 0)(J$.R(369, 'this', this, 0)), O, 1));
                                var sourceLen = J$.X1(441, J$.W(433, 'sourceLen', J$.F(425, J$.R(401, 'toLength', toLength, 1), 0)(J$.G(417, J$.R(409, 'O', O, 0), 'length', 0)), sourceLen, 1));
                                var A = J$.X1(489, J$.W(481, 'A', J$.F(473, J$.R(449, 'arraySpeciesCreate', arraySpeciesCreate, 1), 0)(J$.R(457, 'O', O, 0), J$.T(465, 0, 22, false)), A, 1));
                                J$.X1(617, J$.P(609, J$.R(497, 'A', A, 0), 'length', J$.F(601, J$.R(505, 'flattenIntoArray', flattenIntoArray, 1), 0)(J$.R(513, 'A', A, 0), J$.R(521, 'O', O, 0), J$.R(529, 'O', O, 0), J$.R(537, 'sourceLen', sourceLen, 0), J$.T(545, 0, 22, false), J$.X1(801, J$.C(16, J$.B(10, '===', J$.R(553, 'depthArg', depthArg, 0), J$.T(561, undefined, 24, false), 0))) ? J$.T(569, 1, 22, false) : J$.F(593, J$.R(577, 'toInteger', toInteger, 1), 0)(J$.R(585, 'depthArg', depthArg, 0))), 0));
                                return J$.X1(641, J$.Rt(633, J$.R(625, 'A', A, 0)));
                            } catch (J$e) {
                                J$.Ex(809, J$e);
                            } finally {
                                if (J$.Fr(817))
                                    continue jalangiLabel355;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 649)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(825, J$e);
        } finally {
            if (J$.Sr(833)) {
                J$.L();
                continue jalangiLabel356;
            } else {
                J$.L();
                break jalangiLabel356;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
