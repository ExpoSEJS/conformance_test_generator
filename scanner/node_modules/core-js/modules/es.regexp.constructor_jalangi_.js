J$.iids = {"8":[26,10,26,62],"9":[1,19,1,26],"10":[21,19,21,48],"16":[26,10,26,98],"17":[1,27,1,53],"18":[23,49,23,61],"24":[23,49,27,3],"25":[1,19,1,54],"26":[26,10,26,34],"32":[23,14,27,5],"33":[1,19,1,54],"34":[26,38,26,62],"40":[36,12,36,44],"41":[1,19,1,54],"42":[26,66,26,98],"48":[36,12,36,85],"49":[2,14,2,21],"50":[33,24,33,53],"56":[36,12,36,106],"57":[2,22,2,43],"58":[35,29,35,48],"64":[38,28,38,65],"65":[2,14,2,44],"66":[36,12,36,25],"72":[38,28,38,65],"73":[2,14,2,44],"74":[36,48,36,85],"80":[39,25,39,75],"81":[2,14,2,44],"82":[38,47,38,65],"88":[41,22,41,58],"89":[3,16,3,23],"90":[39,43,39,75],"96":[41,22,41,58],"97":[3,24,3,48],"98":[45,5,45,25],"104":[37,27,37,38],"105":[3,16,3,49],"106":[53,10,53,29],"112":[42,9,42,21],"113":[3,16,3,49],"114":[53,42,53,49],"120":[36,12,36,106],"121":[3,16,3,49],"128":[45,5,49,7],"129":[4,25,4,32],"130":[53,42,53,49],"136":[53,10,53,29],"137":[4,33,4,67],"144":[31,5,31,11],"145":[4,25,4,68],"153":[4,25,4,68],"161":[4,25,4,68],"169":[5,22,5,29],"177":[5,30,5,67],"185":[5,22,5,68],"193":[5,22,5,70],"201":[5,22,5,70],"209":[5,22,5,70],"217":[6,27,6,34],"225":[6,35,6,79],"233":[6,27,6,80],"241":[6,27,6,82],"249":[6,27,6,82],"257":[6,27,6,82],"265":[7,16,7,23],"273":[7,24,7,48],"281":[7,16,7,49],"289":[7,16,7,49],"297":[7,16,7,49],"305":[8,16,8,23],"313":[8,24,8,51],"321":[8,16,8,52],"329":[8,16,8,52],"337":[8,16,8,52],"345":[9,16,9,23],"353":[9,24,9,47],"361":[9,16,9,48],"369":[9,16,9,48],"377":[9,16,9,48],"385":[10,13,10,20],"393":[10,21,10,41],"401":[10,13,10,42],"409":[10,13,10,42],"417":[10,13,10,42],"425":[11,18,11,25],"433":[11,26,11,52],"441":[11,18,11,53],"449":[11,18,11,53],"457":[11,18,11,53],"465":[12,23,12,30],"473":[12,31,12,63],"481":[12,23,12,64],"489":[12,23,12,64],"497":[12,23,12,64],"505":[14,13,14,28],"513":[14,29,14,36],"521":[14,13,14,37],"529":[14,13,14,37],"537":[14,13,14,37],"545":[15,20,15,26],"553":[15,20,15,33],"561":[15,20,15,33],"569":[15,20,15,33],"577":[16,23,16,35],"585":[16,23,16,45],"593":[16,23,16,45],"601":[16,23,16,45],"609":[17,11,17,15],"617":[17,11,17,15],"625":[17,11,17,15],"633":[18,11,18,15],"641":[18,11,18,15],"649":[18,11,18,15],"657":[21,23,21,35],"665":[21,36,21,39],"673":[21,19,21,40],"681":[21,45,21,48],"689":[21,19,21,48],"697":[21,19,21,48],"705":[23,14,23,25],"713":[23,29,23,37],"721":[23,38,23,46],"729":[23,50,23,61],"737":[23,65,23,70],"745":[24,3,24,6],"753":[24,7,24,12],"761":[24,16,24,21],"769":[24,3,24,21],"777":[24,3,24,22],"785":[26,10,26,22],"793":[26,23,26,26],"801":[26,10,26,27],"809":[26,31,26,34],"817":[26,38,26,50],"825":[26,51,26,54],"833":[26,38,26,55],"841":[26,59,26,62],"849":[26,66,26,78],"857":[26,79,26,82],"865":[26,84,26,87],"873":[26,66,26,88],"881":[26,92,26,98],"889":[26,10,26,98],"897":[26,3,26,99],"905":[23,71,27,2],"913":[23,71,27,2],"921":[23,71,27,2],"929":[23,65,27,3],"937":[23,29,27,5],"945":[23,14,27,5],"953":[23,14,27,5],"961":[31,5,31,11],"969":[33,24,33,28],"977":[33,40,33,53],"985":[33,24,33,53],"993":[33,24,33,53],"1001":[34,27,34,35],"1009":[34,36,34,43],"1017":[34,27,34,44],"1025":[34,27,34,44],"1033":[34,27,34,44],"1041":[35,29,35,34],"1049":[35,39,35,48],"1057":[35,29,35,48],"1065":[35,29,35,48],"1073":[36,13,36,25],"1081":[36,29,36,44],"1089":[36,48,36,55],"1097":[36,48,36,67],"1105":[36,72,36,85],"1113":[36,89,36,106],"1121":[36,109,36,116],"1129":[37,9,37,26],"1137":[37,27,37,38],"1145":[38,15,38,27],"1153":[38,28,38,43],"1161":[38,48,38,65],"1169":[38,68,38,75],"1177":[38,68,38,82],"1185":[38,85,38,92],"1193":[38,94,38,99],"1201":[38,11,38,100],"1209":[39,11,39,23],"1217":[39,43,39,50],"1225":[39,62,39,75],"1233":[39,43,39,75],"1241":[40,13,40,20],"1249":[40,13,40,27],"1257":[41,13,41,20],"1265":[41,22,41,37],"1273":[41,41,41,58],"1281":[41,61,41,69],"1289":[41,75,41,82],"1297":[41,61,41,83],"1299":[41,61,41,74],"1305":[41,86,41,91],"1313":[39,11,41,92],"1321":[42,9,42,21],"1329":[42,24,42,28],"1337":[42,31,42,46],"1345":[42,48,42,61],"1353":[37,9,42,62],"1361":[36,12,42,62],"1369":[36,5,42,63],"1377":[32,23,43,4],"1385":[32,23,43,4],"1393":[32,23,43,4],"1401":[32,23,43,4],"1409":[32,23,43,4],"1417":[32,23,43,4],"1425":[32,23,43,4],"1433":[32,23,43,4],"1441":[32,23,43,4],"1449":[32,23,43,4],"1457":[32,23,43,4],"1465":[45,5,45,8],"1473":[45,12,45,25],"1481":[45,29,45,43],"1489":[45,44,45,57],"1497":[45,59,45,62],"1505":[46,21,46,25],"1513":[47,33,47,45],"1521":[47,46,47,49],"1529":[47,33,47,50],"1537":[47,33,47,50],"1545":[47,26,47,51],"1553":[47,12,47,53],"1561":[47,12,47,53],"1569":[47,12,47,53],"1577":[48,28,48,40],"1585":[48,41,48,44],"1593":[48,48,48,50],"1601":[48,28,48,50],"1609":[48,28,48,51],"1617":[48,12,48,53],"1625":[48,12,48,53],"1633":[48,12,48,53],"1641":[48,12,48,53],"1649":[45,64,49,6],"1657":[45,29,49,7],"1665":[45,5,49,8],"1673":[44,15,50,4],"1681":[44,15,50,4],"1689":[44,15,50,4],"1697":[44,15,50,4],"1705":[44,15,50,4],"1713":[44,15,50,4],"1721":[51,14,51,33],"1729":[51,34,51,46],"1737":[51,14,51,47],"1745":[51,14,51,47],"1753":[51,14,51,47],"1761":[52,15,52,16],"1769":[52,15,52,16],"1777":[52,15,52,16],"1785":[53,10,53,14],"1793":[53,10,53,21],"1801":[53,24,53,29],"1809":[53,31,53,36],"1817":[53,37,53,41],"1833":[53,42,53,47],"1841":[53,42,53,49],"1857":[53,37,53,50],"1865":[53,31,53,51],"1873":[53,31,53,52],"1881":[54,3,54,18],"1889":[54,33,54,46],"1897":[54,3,54,46],"1905":[54,3,54,47],"1913":[55,3,55,16],"1921":[55,29,55,44],"1929":[55,3,55,44],"1937":[55,3,55,45],"1945":[56,3,56,11],"1953":[56,12,56,18],"1961":[56,20,56,28],"1969":[56,30,56,43],"1977":[56,3,56,44],"1985":[56,3,56,45],"1993":[60,1,60,11],"2001":[60,12,60,20],"2009":[60,1,60,21],"2017":[60,1,60,22],"2025":[1,1,61,1],"2033":[1,1,61,1],"2041":[1,1,61,1],"2049":[1,1,61,1],"2057":[1,1,61,1],"2065":[1,1,61,1],"2073":[1,1,61,1],"2081":[1,1,61,1],"2089":[1,1,61,1],"2097":[1,1,61,1],"2105":[1,1,61,1],"2113":[1,1,61,1],"2121":[1,1,61,1],"2129":[1,1,61,1],"2137":[1,1,61,1],"2145":[1,1,61,1],"2153":[1,1,61,1],"2161":[1,1,61,1],"2169":[1,1,61,1],"2177":[1,1,61,1],"2185":[1,1,61,1],"2193":[1,1,61,1],"2201":[1,1,61,1],"2209":[1,1,61,1],"2217":[23,71,27,2],"2225":[23,71,27,2],"2233":[38,28,38,92],"2241":[39,24,41,20],"2249":[41,22,41,91],"2257":[37,27,41,92],"2265":[42,9,42,46],"2273":[36,12,42,62],"2281":[32,23,43,4],"2289":[32,23,43,4],"2297":[47,12,47,53],"2305":[47,12,47,53],"2313":[48,12,48,53],"2321":[48,12,48,53],"2329":[44,15,50,4],"2337":[44,15,50,4],"2345":[53,3,53,52],"2353":[31,1,57,2],"2361":[1,1,61,1],"2369":[1,1,61,1],"nBranches":36,"originalCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/es.regexp.constructor.js","instrumentedCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/es.regexp.constructor_jalangi_.js","code":"var DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar isRegExp = require('../internals/is-regexp');\nvar getFlags = require('../internals/regexp-flags');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar setSpecies = require('../internals/set-species');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\nvar NativeRegExp = global.RegExp;\nvar RegExpPrototype = NativeRegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n\n// \"new\" should create a new object, old webkit bug\nvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\n\nvar FORCED = DESCRIPTORS && isForced('RegExp', (!CORRECT_NEW || fails(function () {\n  re2[MATCH] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';\n})));\n\n// `RegExp` constructor\n// https://tc39.github.io/ecma262/#sec-regexp-constructor\nif (FORCED) {\n  var RegExpWrapper = function RegExp(pattern, flags) {\n    var thisIsRegExp = this instanceof RegExpWrapper;\n    var patternIsRegExp = isRegExp(pattern);\n    var flagsAreUndefined = flags === undefined;\n    return !thisIsRegExp && patternIsRegExp && pattern.constructor === RegExpWrapper && flagsAreUndefined ? pattern\n      : inheritIfRequired(CORRECT_NEW\n        ? new NativeRegExp(patternIsRegExp && !flagsAreUndefined ? pattern.source : pattern, flags)\n        : NativeRegExp((patternIsRegExp = pattern instanceof RegExpWrapper)\n          ? pattern.source\n          : pattern, patternIsRegExp && flagsAreUndefined ? getFlags.call(pattern) : flags)\n      , thisIsRegExp ? this : RegExpPrototype, RegExpWrapper);\n  };\n  var proxy = function (key) {\n    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {\n      configurable: true,\n      get: function () { return NativeRegExp[key]; },\n      set: function (it) { NativeRegExp[key] = it; }\n    });\n  };\n  var keys = getOwnPropertyNames(NativeRegExp);\n  var index = 0;\n  while (keys.length > index) proxy(keys[index++]);\n  RegExpPrototype.constructor = RegExpWrapper;\n  RegExpWrapper.prototype = RegExpPrototype;\n  redefine(global, 'RegExp', RegExpWrapper);\n}\n\n// https://tc39.github.io/ecma262/#sec-get-regexp-@@species\nsetSpecies('RegExp');\n"};
jalangiLabel556:
    while (true) {
        try {
            J$.Se(2025, '/home/blake/corejs_tests/node_modules/core-js/modules/es.regexp.constructor_jalangi_.js', '/home/blake/corejs_tests/node_modules/core-js/modules/es.regexp.constructor.js');
            J$.N(2033, 'DESCRIPTORS', DESCRIPTORS, 0);
            J$.N(2041, 'global', global, 0);
            J$.N(2049, 'isForced', isForced, 0);
            J$.N(2057, 'inheritIfRequired', inheritIfRequired, 0);
            J$.N(2065, 'defineProperty', defineProperty, 0);
            J$.N(2073, 'getOwnPropertyNames', getOwnPropertyNames, 0);
            J$.N(2081, 'isRegExp', isRegExp, 0);
            J$.N(2089, 'getFlags', getFlags, 0);
            J$.N(2097, 'redefine', redefine, 0);
            J$.N(2105, 'fails', fails, 0);
            J$.N(2113, 'setSpecies', setSpecies, 0);
            J$.N(2121, 'wellKnownSymbol', wellKnownSymbol, 0);
            J$.N(2129, 'MATCH', MATCH, 0);
            J$.N(2137, 'NativeRegExp', NativeRegExp, 0);
            J$.N(2145, 'RegExpPrototype', RegExpPrototype, 0);
            J$.N(2153, 're1', re1, 0);
            J$.N(2161, 're2', re2, 0);
            J$.N(2169, 'CORRECT_NEW', CORRECT_NEW, 0);
            J$.N(2177, 'FORCED', FORCED, 0);
            J$.N(2185, 'RegExpWrapper', RegExpWrapper, 0);
            J$.N(2193, 'proxy', proxy, 0);
            J$.N(2201, 'keys', keys, 0);
            J$.N(2209, 'index', index, 0);
            var DESCRIPTORS = J$.X1(41, J$.W(33, 'DESCRIPTORS', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../internals/descriptors', 21, false)), DESCRIPTORS, 3));
            var global = J$.X1(81, J$.W(73, 'global', J$.F(65, J$.R(49, 'require', require, 2), 0)(J$.T(57, '../internals/global', 21, false)), global, 3));
            var isForced = J$.X1(121, J$.W(113, 'isForced', J$.F(105, J$.R(89, 'require', require, 2), 0)(J$.T(97, '../internals/is-forced', 21, false)), isForced, 3));
            var inheritIfRequired = J$.X1(161, J$.W(153, 'inheritIfRequired', J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, '../internals/inherit-if-required', 21, false)), inheritIfRequired, 3));
            var defineProperty = J$.X1(209, J$.W(201, 'defineProperty', J$.G(193, J$.F(185, J$.R(169, 'require', require, 2), 0)(J$.T(177, '../internals/object-define-property', 21, false)), 'f', 0), defineProperty, 3));
            var getOwnPropertyNames = J$.X1(257, J$.W(249, 'getOwnPropertyNames', J$.G(241, J$.F(233, J$.R(217, 'require', require, 2), 0)(J$.T(225, '../internals/object-get-own-property-names', 21, false)), 'f', 0), getOwnPropertyNames, 3));
            var isRegExp = J$.X1(297, J$.W(289, 'isRegExp', J$.F(281, J$.R(265, 'require', require, 2), 0)(J$.T(273, '../internals/is-regexp', 21, false)), isRegExp, 3));
            var getFlags = J$.X1(337, J$.W(329, 'getFlags', J$.F(321, J$.R(305, 'require', require, 2), 0)(J$.T(313, '../internals/regexp-flags', 21, false)), getFlags, 3));
            var redefine = J$.X1(377, J$.W(369, 'redefine', J$.F(361, J$.R(345, 'require', require, 2), 0)(J$.T(353, '../internals/redefine', 21, false)), redefine, 3));
            var fails = J$.X1(417, J$.W(409, 'fails', J$.F(401, J$.R(385, 'require', require, 2), 0)(J$.T(393, '../internals/fails', 21, false)), fails, 3));
            var setSpecies = J$.X1(457, J$.W(449, 'setSpecies', J$.F(441, J$.R(425, 'require', require, 2), 0)(J$.T(433, '../internals/set-species', 21, false)), setSpecies, 3));
            var wellKnownSymbol = J$.X1(497, J$.W(489, 'wellKnownSymbol', J$.F(481, J$.R(465, 'require', require, 2), 0)(J$.T(473, '../internals/well-known-symbol', 21, false)), wellKnownSymbol, 3));
            var MATCH = J$.X1(537, J$.W(529, 'MATCH', J$.F(521, J$.R(505, 'wellKnownSymbol', wellKnownSymbol, 1), 0)(J$.T(513, 'match', 21, false)), MATCH, 3));
            var NativeRegExp = J$.X1(569, J$.W(561, 'NativeRegExp', J$.G(553, J$.R(545, 'global', global, 1), 'RegExp', 0), NativeRegExp, 3));
            var RegExpPrototype = J$.X1(601, J$.W(593, 'RegExpPrototype', J$.G(585, J$.R(577, 'NativeRegExp', NativeRegExp, 1), 'prototype', 0), RegExpPrototype, 3));
            var re1 = J$.X1(625, J$.W(617, 're1', J$.T(609, /a/g, 14, false), re1, 3));
            var re2 = J$.X1(649, J$.W(641, 're2', J$.T(633, /a/g, 14, false), re2, 3));
            var CORRECT_NEW = J$.X1(697, J$.W(689, 'CORRECT_NEW', J$.B(10, '!==', J$.F(673, J$.R(657, 'NativeRegExp', NativeRegExp, 1), 1)(J$.R(665, 're1', re1, 1)), J$.R(681, 're1', re1, 1), 0), CORRECT_NEW, 3));
            var FORCED = J$.X1(953, J$.W(945, 'FORCED', J$.C(32, J$.R(705, 'DESCRIPTORS', DESCRIPTORS, 1)) ? J$.F(937, J$.R(713, 'isForced', isForced, 1), 0)(J$.T(721, 'RegExp', 21, false), J$.C(24, J$.U(18, '!', J$.R(729, 'CORRECT_NEW', CORRECT_NEW, 1))) ? J$._() : J$.F(929, J$.R(737, 'fails', fails, 1), 0)(J$.T(921, function () {
                jalangiLabel551:
                    while (true) {
                        try {
                            J$.Fe(905, arguments.callee, this, arguments);
                            arguments = J$.N(913, 'arguments', arguments, 4);
                            J$.X1(777, J$.P(769, J$.R(745, 're2', re2, 1), J$.R(753, 'MATCH', MATCH, 1), J$.T(761, false, 23, false), 2));
                            return J$.X1(897, J$.Rt(889, J$.C(16, J$.C(8, J$.B(26, '!=', J$.F(801, J$.R(785, 'NativeRegExp', NativeRegExp, 1), 0)(J$.R(793, 're1', re1, 1)), J$.R(809, 're1', re1, 1), 0)) ? J$._() : J$.B(34, '==', J$.F(833, J$.R(817, 'NativeRegExp', NativeRegExp, 1), 0)(J$.R(825, 're2', re2, 1)), J$.R(841, 're2', re2, 1), 0)) ? J$._() : J$.B(42, '!=', J$.F(873, J$.R(849, 'NativeRegExp', NativeRegExp, 1), 0)(J$.R(857, 're1', re1, 1), J$.T(865, 'i', 21, false)), J$.T(881, '/a/i', 21, false), 0)));
                        } catch (J$e) {
                            J$.Ex(2217, J$e);
                        } finally {
                            if (J$.Fr(2225))
                                continue jalangiLabel551;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 905))) : J$._(), FORCED, 3));
            if (J$.X1(2353, J$.C(144, J$.R(961, 'FORCED', FORCED, 1)))) {
                var RegExpWrapper = J$.X1(1457, J$.W(1449, 'RegExpWrapper', J$.T(1441, function RegExp(pattern, flags) {
                    jalangiLabel552:
                        while (true) {
                            try {
                                J$.Fe(1377, arguments.callee, this, arguments);
                                arguments = J$.N(1385, 'arguments', arguments, 4);
                                RegExp = J$.N(1393, 'RegExp', RegExp, 0);
                                pattern = J$.N(1401, 'pattern', pattern, 4);
                                flags = J$.N(1409, 'flags', flags, 4);
                                J$.N(1417, 'thisIsRegExp', thisIsRegExp, 0);
                                J$.N(1425, 'patternIsRegExp', patternIsRegExp, 0);
                                J$.N(1433, 'flagsAreUndefined', flagsAreUndefined, 0);
                                var thisIsRegExp = J$.X1(993, J$.W(985, 'thisIsRegExp', J$.B(50, 'instanceof', J$.R(969, 'this', this, 0), J$.R(977, 'RegExpWrapper', RegExpWrapper, 1), 0), thisIsRegExp, 1));
                                var patternIsRegExp = J$.X1(1033, J$.W(1025, 'patternIsRegExp', J$.F(1017, J$.R(1001, 'isRegExp', isRegExp, 1), 0)(J$.R(1009, 'pattern', pattern, 0)), patternIsRegExp, 1));
                                var flagsAreUndefined = J$.X1(1065, J$.W(1057, 'flagsAreUndefined', J$.B(58, '===', J$.R(1041, 'flags', flags, 0), J$.T(1049, undefined, 24, false), 0), flagsAreUndefined, 1));
                                return J$.X1(1369, J$.Rt(1361, J$.X1(2273, J$.C(120, J$.C(56, J$.C(48, J$.C(40, J$.U(66, '!', J$.R(1073, 'thisIsRegExp', thisIsRegExp, 0))) ? J$.R(1081, 'patternIsRegExp', patternIsRegExp, 0) : J$._()) ? J$.B(74, '===', J$.G(1097, J$.R(1089, 'pattern', pattern, 0), 'constructor', 0), J$.R(1105, 'RegExpWrapper', RegExpWrapper, 1), 0) : J$._()) ? J$.R(1113, 'flagsAreUndefined', flagsAreUndefined, 0) : J$._())) ? J$.R(1121, 'pattern', pattern, 0) : J$.F(1353, J$.R(1129, 'inheritIfRequired', inheritIfRequired, 1), 0)(J$.X1(2257, J$.C(104, J$.R(1137, 'CORRECT_NEW', CORRECT_NEW, 1))) ? J$.F(1201, J$.R(1145, 'NativeRegExp', NativeRegExp, 1), 1)(J$.X1(2233, J$.C(72, J$.C(64, J$.R(1153, 'patternIsRegExp', patternIsRegExp, 0)) ? J$.U(82, '!', J$.R(1161, 'flagsAreUndefined', flagsAreUndefined, 0)) : J$._())) ? J$.G(1177, J$.R(1169, 'pattern', pattern, 0), 'source', 0) : J$.R(1185, 'pattern', pattern, 0), J$.R(1193, 'flags', flags, 0)) : J$.F(1313, J$.R(1209, 'NativeRegExp', NativeRegExp, 1), 0)(J$.X1(2241, J$.C(80, patternIsRegExp = J$.W(1233, 'patternIsRegExp', J$.B(90, 'instanceof', J$.R(1217, 'pattern', pattern, 0), J$.R(1225, 'RegExpWrapper', RegExpWrapper, 1), 0), patternIsRegExp, 0))) ? J$.G(1249, J$.R(1241, 'pattern', pattern, 0), 'source', 0) : J$.R(1257, 'pattern', pattern, 0), J$.X1(2249, J$.C(96, J$.C(88, J$.R(1265, 'patternIsRegExp', patternIsRegExp, 0)) ? J$.R(1273, 'flagsAreUndefined', flagsAreUndefined, 0) : J$._())) ? J$.M(1297, J$.R(1281, 'getFlags', getFlags, 1), 'call', 0)(J$.R(1289, 'pattern', pattern, 0)) : J$.R(1305, 'flags', flags, 0)), J$.X1(2265, J$.C(112, J$.R(1321, 'thisIsRegExp', thisIsRegExp, 0))) ? J$.R(1329, 'this', this, 0) : J$.R(1337, 'RegExpPrototype', RegExpPrototype, 1), J$.R(1345, 'RegExpWrapper', RegExpWrapper, 1))));
                            } catch (J$e) {
                                J$.Ex(2281, J$e);
                            } finally {
                                if (J$.Fr(2289))
                                    continue jalangiLabel552;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 1377), RegExpWrapper, 3));
                var proxy = J$.X1(1713, J$.W(1705, 'proxy', J$.T(1697, function (key) {
                    jalangiLabel555:
                        while (true) {
                            try {
                                J$.Fe(1673, arguments.callee, this, arguments);
                                arguments = J$.N(1681, 'arguments', arguments, 4);
                                key = J$.N(1689, 'key', key, 4);
                                J$.X1(1665, J$.C(128, J$.B(98, 'in', J$.R(1465, 'key', key, 0), J$.R(1473, 'RegExpWrapper', RegExpWrapper, 1), 0)) ? J$._() : J$.F(1657, J$.R(1481, 'defineProperty', defineProperty, 1), 0)(J$.R(1489, 'RegExpWrapper', RegExpWrapper, 1), J$.R(1497, 'key', key, 0), J$.T(1649, {
                                    configurable: J$.T(1505, true, 23, false),
                                    get: J$.T(1569, function () {
                                        jalangiLabel553:
                                            while (true) {
                                                try {
                                                    J$.Fe(1553, arguments.callee, this, arguments);
                                                    arguments = J$.N(1561, 'arguments', arguments, 4);
                                                    return J$.X1(1545, J$.Rt(1537, J$.G(1529, J$.R(1513, 'NativeRegExp', NativeRegExp, 1), J$.R(1521, 'key', key, 0), 4)));
                                                } catch (J$e) {
                                                    J$.Ex(2297, J$e);
                                                } finally {
                                                    if (J$.Fr(2305))
                                                        continue jalangiLabel553;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 1553),
                                    set: J$.T(1641, function (it) {
                                        jalangiLabel554:
                                            while (true) {
                                                try {
                                                    J$.Fe(1617, arguments.callee, this, arguments);
                                                    arguments = J$.N(1625, 'arguments', arguments, 4);
                                                    it = J$.N(1633, 'it', it, 4);
                                                    J$.X1(1609, J$.P(1601, J$.R(1577, 'NativeRegExp', NativeRegExp, 1), J$.R(1585, 'key', key, 0), J$.R(1593, 'it', it, 0), 2));
                                                } catch (J$e) {
                                                    J$.Ex(2313, J$e);
                                                } finally {
                                                    if (J$.Fr(2321))
                                                        continue jalangiLabel554;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 1617)
                                }, 11, false)));
                            } catch (J$e) {
                                J$.Ex(2329, J$e);
                            } finally {
                                if (J$.Fr(2337))
                                    continue jalangiLabel555;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 1673), proxy, 3));
                var keys = J$.X1(1753, J$.W(1745, 'keys', J$.F(1737, J$.R(1721, 'getOwnPropertyNames', getOwnPropertyNames, 1), 0)(J$.R(1729, 'NativeRegExp', NativeRegExp, 1)), keys, 3));
                var index = J$.X1(1777, J$.W(1769, 'index', J$.T(1761, 0, 22, false), index, 3));
                while (J$.X1(2345, J$.C(136, J$.B(106, '>', J$.G(1793, J$.R(1785, 'keys', keys, 1), 'length', 0), J$.R(1801, 'index', index, 1), 0))))
                    J$.X1(1873, J$.F(1865, J$.R(1809, 'proxy', proxy, 1), 0)(J$.G(1857, J$.R(1817, 'keys', keys, 1), J$.B(130, '-', index = J$.W(1841, 'index', J$.B(122, '+', J$.U(114, '+', J$.R(1833, 'index', index, 1)), J$.T(1825, 1, 22, false), 0), index, 2), J$.T(1849, 1, 22, false), 0), 4)));
                J$.X1(1905, J$.P(1897, J$.R(1881, 'RegExpPrototype', RegExpPrototype, 1), 'constructor', J$.R(1889, 'RegExpWrapper', RegExpWrapper, 1), 0));
                J$.X1(1937, J$.P(1929, J$.R(1913, 'RegExpWrapper', RegExpWrapper, 1), 'prototype', J$.R(1921, 'RegExpPrototype', RegExpPrototype, 1), 0));
                J$.X1(1985, J$.F(1977, J$.R(1945, 'redefine', redefine, 1), 0)(J$.R(1953, 'global', global, 1), J$.T(1961, 'RegExp', 21, false), J$.R(1969, 'RegExpWrapper', RegExpWrapper, 1)));
            }
            J$.X1(2017, J$.F(2009, J$.R(1993, 'setSpecies', setSpecies, 1), 0)(J$.T(2001, 'RegExp', 21, false)));
        } catch (J$e) {
            J$.Ex(2361, J$e);
        } finally {
            if (J$.Sr(2369)) {
                J$.L();
                continue jalangiLabel556;
            } else {
                J$.L();
                break jalangiLabel556;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
