J$.iids = {"8":[30,9,30,30],"9":[1,9,1,16],"10":[8,31,8,59],"17":[1,17,1,38],"18":[16,11,16,28],"25":[1,9,1,39],"26":[20,28,20,51],"33":[1,9,1,39],"34":[20,28,20,59],"41":[1,9,1,39],"42":[20,27,20,73],"49":[2,16,2,23],"50":[21,20,21,37],"57":[2,24,2,48],"58":[21,19,21,51],"65":[2,16,2,49],"66":[30,9,30,30],"73":[2,16,2,49],"81":[2,16,2,49],"89":[3,22,3,29],"97":[3,30,3,61],"105":[3,22,3,62],"113":[3,22,3,62],"121":[3,22,3,62],"129":[4,33,4,40],"137":[4,41,4,83],"145":[4,33,4,84],"153":[4,33,4,84],"161":[4,33,4,84],"169":[5,27,5,34],"177":[5,35,5,64],"185":[5,27,5,65],"193":[5,27,5,65],"201":[5,27,5,65],"209":[7,21,7,36],"217":[7,21,7,36],"225":[7,21,7,36],"233":[8,31,8,44],"241":[8,47,8,59],"249":[8,31,8,59],"257":[8,31,8,59],"265":[9,24,9,43],"273":[9,24,9,47],"281":[9,24,9,47],"289":[9,24,9,47],"297":[10,24,10,43],"305":[10,54,10,77],"313":[10,24,10,78],"315":[10,24,10,53],"321":[10,24,10,78],"329":[10,24,10,78],"337":[11,23,11,99],"345":[11,23,11,99],"353":[11,23,11,99],"361":[13,30,13,55],"369":[14,3,14,19],"377":[14,20,14,24],"385":[15,11,15,34],"393":[16,11,16,15],"401":[16,18,16,28],"409":[14,26,17,4],"417":[14,3,17,5],"425":[14,3,17,6],"433":[13,56,18,2],"441":[13,56,18,2],"449":[13,56,18,2],"457":[13,56,18,2],"465":[13,56,18,2],"473":[18,4,18,17],"481":[19,15,19,31],"489":[19,32,19,36],"497":[19,15,19,37],"505":[19,15,19,37],"513":[19,15,19,37],"521":[20,14,20,19],"529":[20,28,20,33],"537":[20,28,20,38],"545":[20,41,20,51],"553":[20,54,20,59],"561":[20,63,20,73],"569":[20,14,20,73],"577":[20,14,20,73],"585":[20,14,20,73],"593":[21,20,21,24],"601":[21,27,21,37],"609":[21,41,21,51],"617":[21,59,21,64],"625":[21,10,21,66],"633":[21,10,21,66],"641":[21,3,21,67],"649":[18,19,22,2],"657":[18,19,22,2],"665":[18,19,22,2],"673":[18,19,22,2],"681":[18,19,22,2],"689":[18,19,22,2],"697":[13,30,22,3],"705":[13,30,22,3],"713":[13,30,22,3],"721":[27,1,27,2],"729":[27,13,27,19],"737":[27,27,27,31],"745":[27,41,27,45],"753":[27,3,27,47],"761":[29,16,29,24],"769":[29,25,29,27],"777":[29,16,29,28],"785":[29,16,29,33],"793":[29,16,29,33],"801":[29,16,29,33],"809":[30,10,30,24],"817":[30,25,30,29],"825":[30,10,30,30],"833":[30,38,30,47],"841":[30,48,30,63],"849":[30,38,30,64],"857":[30,38,30,64],"865":[30,32,30,65],"873":[31,16,31,38],"881":[31,39,31,43],"889":[31,12,31,44],"897":[31,12,31,44],"905":[31,5,31,45],"913":[28,15,32,4],"921":[28,15,32,4],"929":[28,15,32,4],"937":[28,15,32,4],"945":[28,15,32,4],"953":[28,15,32,4],"961":[27,49,33,2],"969":[27,1,33,3],"977":[27,1,33,4],"985":[1,1,34,1],"993":[1,1,34,1],"1001":[1,1,34,1],"1009":[1,1,34,1],"1017":[1,1,34,1],"1025":[1,1,34,1],"1033":[1,1,34,1],"1041":[1,1,34,1],"1049":[1,1,34,1],"1057":[1,1,34,1],"1065":[1,1,34,1],"1073":[1,1,34,1],"1081":[13,56,18,2],"1089":[13,56,18,2],"1097":[18,19,22,2],"1105":[18,19,22,2],"1113":[30,5,30,65],"1121":[28,15,32,4],"1129":[28,15,32,4],"1137":[1,1,34,1],"1145":[1,1,34,1],"nBranches":2,"originalCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/esnext.math.seeded-prng.js","instrumentedCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/esnext.math.seeded-prng_jalangi_.js","code":"var $ = require('../internals/export');\nvar anObject = require('../internals/an-object');\nvar numberIsFinite = require('../internals/number-is-finite');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar SEEDED_RANDOM = 'Seeded Random';\nvar SEEDED_RANDOM_GENERATOR = SEEDED_RANDOM + ' Generator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SEEDED_RANDOM_GENERATOR);\nvar SEED_TYPE_ERROR = 'Math.seededPRNG() argument should have a \"seed\" field with a finite value.';\n\nvar $SeededRandomGenerator = createIteratorConstructor(function SeededRandomGenerator(seed) {\n  setInternalState(this, {\n    type: SEEDED_RANDOM_GENERATOR,\n    seed: seed % 2147483647\n  });\n}, SEEDED_RANDOM, function next() {\n  var state = getInternalState(this);\n  var seed = state.seed = (state.seed * 1103515245 + 12345) % 2147483647;\n  return { value: (seed & 1073741823) / 1073741823, done: false };\n});\n\n// `Math.seededPRNG` method\n// https://github.com/tc39/proposal-seeded-random\n// based on https://github.com/tc39/proposal-seeded-random/blob/78b8258835b57fc2100d076151ab506bc3202ae6/demo.html\n$({ target: 'Math', stat: true, forced: true }, {\n  seededPRNG: function seededPRNG(it) {\n    var seed = anObject(it).seed;\n    if (!numberIsFinite(seed)) throw TypeError(SEED_TYPE_ERROR);\n    return new $SeededRandomGenerator(seed);\n  }\n});\n"};
jalangiLabel1303:
    while (true) {
        try {
            J$.Se(985, '/home/blake/corejs_tests/node_modules/core-js/modules/esnext.math.seeded-prng_jalangi_.js', '/home/blake/corejs_tests/node_modules/core-js/modules/esnext.math.seeded-prng.js');
            J$.N(993, '$', $, 0);
            J$.N(1001, 'anObject', anObject, 0);
            J$.N(1009, 'numberIsFinite', numberIsFinite, 0);
            J$.N(1017, 'createIteratorConstructor', createIteratorConstructor, 0);
            J$.N(1025, 'InternalStateModule', InternalStateModule, 0);
            J$.N(1033, 'SEEDED_RANDOM', SEEDED_RANDOM, 0);
            J$.N(1041, 'SEEDED_RANDOM_GENERATOR', SEEDED_RANDOM_GENERATOR, 0);
            J$.N(1049, 'setInternalState', setInternalState, 0);
            J$.N(1057, 'getInternalState', getInternalState, 0);
            J$.N(1065, 'SEED_TYPE_ERROR', SEED_TYPE_ERROR, 0);
            J$.N(1073, '$SeededRandomGenerator', $SeededRandomGenerator, 0);
            var $ = J$.X1(41, J$.W(33, '$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../internals/export', 21, false)), $, 3));
            var anObject = J$.X1(81, J$.W(73, 'anObject', J$.F(65, J$.R(49, 'require', require, 2), 0)(J$.T(57, '../internals/an-object', 21, false)), anObject, 3));
            var numberIsFinite = J$.X1(121, J$.W(113, 'numberIsFinite', J$.F(105, J$.R(89, 'require', require, 2), 0)(J$.T(97, '../internals/number-is-finite', 21, false)), numberIsFinite, 3));
            var createIteratorConstructor = J$.X1(161, J$.W(153, 'createIteratorConstructor', J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, '../internals/create-iterator-constructor', 21, false)), createIteratorConstructor, 3));
            var InternalStateModule = J$.X1(201, J$.W(193, 'InternalStateModule', J$.F(185, J$.R(169, 'require', require, 2), 0)(J$.T(177, '../internals/internal-state', 21, false)), InternalStateModule, 3));
            var SEEDED_RANDOM = J$.X1(225, J$.W(217, 'SEEDED_RANDOM', J$.T(209, 'Seeded Random', 21, false), SEEDED_RANDOM, 3));
            var SEEDED_RANDOM_GENERATOR = J$.X1(257, J$.W(249, 'SEEDED_RANDOM_GENERATOR', J$.B(10, '+', J$.R(233, 'SEEDED_RANDOM', SEEDED_RANDOM, 1), J$.T(241, ' Generator', 21, false), 0), SEEDED_RANDOM_GENERATOR, 3));
            var setInternalState = J$.X1(289, J$.W(281, 'setInternalState', J$.G(273, J$.R(265, 'InternalStateModule', InternalStateModule, 1), 'set', 0), setInternalState, 3));
            var getInternalState = J$.X1(329, J$.W(321, 'getInternalState', J$.M(313, J$.R(297, 'InternalStateModule', InternalStateModule, 1), 'getterFor', 0)(J$.R(305, 'SEEDED_RANDOM_GENERATOR', SEEDED_RANDOM_GENERATOR, 1)), getInternalState, 3));
            var SEED_TYPE_ERROR = J$.X1(353, J$.W(345, 'SEED_TYPE_ERROR', J$.T(337, 'Math.seededPRNG() argument should have a "seed" field with a finite value.', 21, false), SEED_TYPE_ERROR, 3));
            var $SeededRandomGenerator = J$.X1(713, J$.W(705, '$SeededRandomGenerator', J$.F(697, J$.R(361, 'createIteratorConstructor', createIteratorConstructor, 1), 0)(J$.T(465, function SeededRandomGenerator(seed) {
                jalangiLabel1300:
                    while (true) {
                        try {
                            J$.Fe(433, arguments.callee, this, arguments);
                            arguments = J$.N(441, 'arguments', arguments, 4);
                            SeededRandomGenerator = J$.N(449, 'SeededRandomGenerator', SeededRandomGenerator, 0);
                            seed = J$.N(457, 'seed', seed, 4);
                            J$.X1(425, J$.F(417, J$.R(369, 'setInternalState', setInternalState, 1), 0)(J$.R(377, 'this', this, 0), J$.T(409, {
                                type: J$.R(385, 'SEEDED_RANDOM_GENERATOR', SEEDED_RANDOM_GENERATOR, 1),
                                seed: J$.B(18, '%', J$.R(393, 'seed', seed, 0), J$.T(401, 2147483647, 22, false), 0)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1081, J$e);
                        } finally {
                            if (J$.Fr(1089))
                                continue jalangiLabel1300;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 433), J$.R(473, 'SEEDED_RANDOM', SEEDED_RANDOM, 1), J$.T(689, function next() {
                jalangiLabel1301:
                    while (true) {
                        try {
                            J$.Fe(649, arguments.callee, this, arguments);
                            arguments = J$.N(657, 'arguments', arguments, 4);
                            next = J$.N(665, 'next', next, 0);
                            J$.N(673, 'state', state, 0);
                            J$.N(681, 'seed', seed, 0);
                            var state = J$.X1(513, J$.W(505, 'state', J$.F(497, J$.R(481, 'getInternalState', getInternalState, 1), 0)(J$.R(489, 'this', this, 0)), state, 1));
                            var seed = J$.X1(585, J$.W(577, 'seed', J$.P(569, J$.R(521, 'state', state, 0), 'seed', J$.B(42, '%', J$.B(34, '+', J$.B(26, '*', J$.G(537, J$.R(529, 'state', state, 0), 'seed', 0), J$.T(545, 1103515245, 22, false), 0), J$.T(553, 12345, 22, false), 0), J$.T(561, 2147483647, 22, false), 0), 0), seed, 1));
                            return J$.X1(641, J$.Rt(633, J$.T(625, {
                                value: J$.B(58, '/', J$.B(50, '&', J$.R(593, 'seed', seed, 0), J$.T(601, 1073741823, 22, false), 0), J$.T(609, 1073741823, 22, false), 0),
                                done: J$.T(617, false, 23, false)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1097, J$e);
                        } finally {
                            if (J$.Fr(1105))
                                continue jalangiLabel1301;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 649)), $SeededRandomGenerator, 3));
            J$.X1(977, J$.F(969, J$.R(721, '$', $, 1), 0)(J$.T(753, {
                target: J$.T(729, 'Math', 21, false),
                stat: J$.T(737, true, 23, false),
                forced: J$.T(745, true, 23, false)
            }, 11, false), J$.T(961, {
                seededPRNG: J$.T(953, function seededPRNG(it) {
                    jalangiLabel1302:
                        while (true) {
                            try {
                                J$.Fe(913, arguments.callee, this, arguments);
                                arguments = J$.N(921, 'arguments', arguments, 4);
                                seededPRNG = J$.N(929, 'seededPRNG', seededPRNG, 0);
                                it = J$.N(937, 'it', it, 4);
                                J$.N(945, 'seed', seed, 0);
                                var seed = J$.X1(801, J$.W(793, 'seed', J$.G(785, J$.F(777, J$.R(761, 'anObject', anObject, 1), 0)(J$.R(769, 'it', it, 0)), 'seed', 0), seed, 1));
                                if (J$.X1(1113, J$.C(8, J$.U(66, '!', J$.F(825, J$.R(809, 'numberIsFinite', numberIsFinite, 1), 0)(J$.R(817, 'seed', seed, 0))))))
                                    throw J$.X1(865, J$.Th(857, J$.F(849, J$.R(833, 'TypeError', TypeError, 2), 0)(J$.R(841, 'SEED_TYPE_ERROR', SEED_TYPE_ERROR, 1))));
                                return J$.X1(905, J$.Rt(897, J$.F(889, J$.R(873, '$SeededRandomGenerator', $SeededRandomGenerator, 1), 1)(J$.R(881, 'seed', seed, 0))));
                            } catch (J$e) {
                                J$.Ex(1121, J$e);
                            } finally {
                                if (J$.Fr(1129))
                                    continue jalangiLabel1302;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 913)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(1137, J$e);
        } finally {
            if (J$.Sr(1145)) {
                J$.L();
                continue jalangiLabel1303;
            } else {
                J$.L();
                break jalangiLabel1303;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
