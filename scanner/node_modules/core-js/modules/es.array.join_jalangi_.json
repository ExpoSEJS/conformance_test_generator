{"8":[14,43,14,71],"9":[1,1,1,13],"10":[9,19,9,42],"16":[16,51,16,74],"17":[1,1,1,14],"18":[16,51,16,74],"25":[2,9,2,16],"33":[2,17,2,38],"41":[2,9,2,39],"49":[2,9,2,39],"57":[2,9,2,39],"65":[3,21,3,28],"73":[3,29,3,58],"81":[3,21,3,59],"89":[3,21,3,59],"97":[3,21,3,59],"105":[4,23,4,30],"113":[4,31,4,63],"121":[4,23,4,64],"129":[4,23,4,64],"137":[4,23,4,64],"145":[5,25,5,32],"153":[5,33,5,67],"161":[5,25,5,68],"169":[5,25,5,68],"177":[5,25,5,68],"185":[7,18,7,20],"193":[7,18,7,25],"201":[7,18,7,25],"209":[7,18,7,25],"217":[9,19,9,32],"225":[9,36,9,42],"233":[9,19,9,42],"241":[9,19,9,42],"249":[10,21,10,38],"257":[10,39,10,45],"265":[10,47,10,50],"273":[10,21,10,51],"281":[10,21,10,51],"289":[10,21,10,51],"297":[14,1,14,2],"305":[14,13,14,20],"313":[14,29,14,33],"321":[14,43,14,54],"329":[14,58,14,71],"337":[14,3,14,73],"345":[16,12,16,22],"353":[16,28,16,43],"361":[16,44,16,48],"369":[16,28,16,49],"377":[16,51,16,60],"385":[16,65,16,74],"393":[16,77,16,80],"401":[16,83,16,92],"409":[16,12,16,93],"411":[16,12,16,27],"417":[16,12,16,93],"425":[16,5,16,94],"433":[15,9,17,4],"441":[15,9,17,4],"449":[15,9,17,4],"457":[15,9,17,4],"465":[15,9,17,4],"473":[14,75,18,2],"481":[14,1,18,3],"489":[14,1,18,4],"497":[1,1,19,1],"505":[1,1,19,1],"513":[1,1,19,1],"521":[1,1,19,1],"529":[1,1,19,1],"537":[1,1,19,1],"545":[1,1,19,1],"553":[1,1,19,1],"561":[16,51,16,92],"569":[15,9,17,4],"577":[15,9,17,4],"585":[1,1,19,1],"593":[1,1,19,1],"nBranches":4,"originalCodeFileName":"/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/modules/es.array.join.js","instrumentedCodeFileName":"/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/modules/es.array.join_jalangi_.js","code":"'use strict';\nvar $ = require('../internals/export');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar sloppyArrayMethod = require('../internals/sloppy-array-method');\n\nvar nativeJoin = [].join;\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar SLOPPY_METHOD = sloppyArrayMethod('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || SLOPPY_METHOD }, {\n  join: function join(separator) {\n    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n"}