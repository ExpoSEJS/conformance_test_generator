J$.iids = {"8":[10,39,10,59],"9":[1,1,1,13],"10":[10,39,10,59],"17":[1,1,1,14],"25":[2,9,2,16],"33":[2,17,2,38],"41":[2,9,2,39],"49":[2,9,2,39],"57":[2,9,2,39],"65":[3,17,3,24],"73":[3,25,3,50],"81":[3,17,3,51],"89":[3,17,3,57],"97":[3,17,3,57],"105":[3,17,3,57],"113":[4,18,4,25],"121":[4,26,4,62],"129":[4,18,4,63],"137":[4,18,4,63],"145":[4,18,4,63],"153":[8,1,8,2],"161":[8,13,8,21],"169":[8,30,8,34],"177":[8,44,8,54],"185":[8,3,8,56],"193":[10,12,10,21],"201":[10,22,10,26],"209":[10,28,10,37],"217":[10,39,10,48],"225":[10,39,10,55],"233":[10,58,10,59],"241":[10,62,10,71],"249":[10,72,10,73],"257":[10,62,10,74],"265":[10,77,10,86],"273":[10,12,10,87],"281":[10,12,10,87],"289":[10,5,10,88],"297":[9,13,11,4],"305":[9,13,11,4],"313":[9,13,11,4],"321":[9,13,11,4],"329":[9,13,11,4],"337":[8,58,12,2],"345":[8,1,12,3],"353":[8,1,12,4],"361":[1,1,13,1],"369":[1,1,13,1],"377":[1,1,13,1],"385":[1,1,13,1],"393":[10,39,10,86],"401":[9,13,11,4],"409":[9,13,11,4],"417":[1,1,13,1],"425":[1,1,13,1],"nBranches":2,"originalCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/es.string.pad-start.js","instrumentedCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/es.string.pad-start_jalangi_.js","code":"'use strict';\nvar $ = require('../internals/export');\nvar $padStart = require('../internals/string-pad').start;\nvar WEBKIT_BUG = require('../internals/webkit-string-pad-bug');\n\n// `String.prototype.padStart` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.padstart\n$({ target: 'String', proto: true, forced: WEBKIT_BUG }, {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return $padStart(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"};
jalangiLabel482:
    while (true) {
        try {
            J$.Se(361, '/home/blake/corejs_tests/node_modules/core-js/modules/es.string.pad-start_jalangi_.js', '/home/blake/corejs_tests/node_modules/core-js/modules/es.string.pad-start.js');
            J$.N(369, '$', $, 0);
            J$.N(377, '$padStart', $padStart, 0);
            J$.N(385, 'WEBKIT_BUG', WEBKIT_BUG, 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var $ = J$.X1(57, J$.W(49, '$', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../internals/export', 21, false)), $, 3));
            var $padStart = J$.X1(105, J$.W(97, '$padStart', J$.G(89, J$.F(81, J$.R(65, 'require', require, 2), 0)(J$.T(73, '../internals/string-pad', 21, false)), 'start', 0), $padStart, 3));
            var WEBKIT_BUG = J$.X1(145, J$.W(137, 'WEBKIT_BUG', J$.F(129, J$.R(113, 'require', require, 2), 0)(J$.T(121, '../internals/webkit-string-pad-bug', 21, false)), WEBKIT_BUG, 3));
            J$.X1(353, J$.F(345, J$.R(153, '$', $, 1), 0)(J$.T(185, {
                target: J$.T(161, 'String', 21, false),
                proto: J$.T(169, true, 23, false),
                forced: J$.R(177, 'WEBKIT_BUG', WEBKIT_BUG, 1)
            }, 11, false), J$.T(337, {
                padStart: J$.T(329, function padStart(maxLength) {
                    jalangiLabel481:
                        while (true) {
                            try {
                                J$.Fe(297, arguments.callee, this, arguments);
                                arguments = J$.N(305, 'arguments', arguments, 4);
                                padStart = J$.N(313, 'padStart', padStart, 0);
                                maxLength = J$.N(321, 'maxLength', maxLength, 4);
                                return J$.X1(289, J$.Rt(281, J$.F(273, J$.R(193, '$padStart', $padStart, 1), 0)(J$.R(201, 'this', this, 0), J$.R(209, 'maxLength', maxLength, 0), J$.X1(393, J$.C(8, J$.B(10, '>', J$.G(225, J$.R(217, 'arguments', arguments, 2), 'length', 0), J$.T(233, 1, 22, false), 0))) ? J$.G(257, J$.R(241, 'arguments', arguments, 2), J$.T(249, 1, 22, false), 4) : J$.T(265, undefined, 24, false))));
                            } catch (J$e) {
                                J$.Ex(401, J$e);
                            } finally {
                                if (J$.Fr(409))
                                    continue jalangiLabel481;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 297)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(417, J$e);
        } finally {
            if (J$.Sr(425)) {
                J$.L();
                continue jalangiLabel482;
            } else {
                J$.L();
                break jalangiLabel482;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
