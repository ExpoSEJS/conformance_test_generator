J$.iids = {"8":[28,16,28,37],"9":[1,1,1,13],"10":[19,43,19,82],"16":[26,9,26,30],"17":[1,1,1,14],"18":[26,9,26,30],"24":[35,9,35,65],"25":[2,9,2,16],"26":[28,16,28,37],"32":[41,11,41,20],"33":[2,17,2,38],"34":[30,27,30,44],"40":[39,17,39,38],"41":[2,9,2,39],"42":[32,21,32,40],"48":[48,13,48,22],"49":[2,9,2,39],"50":[33,63,33,80],"56":[45,29,45,56],"57":[2,9,2,39],"58":[35,9,35,26],"64":[51,21,51,62],"65":[3,23,3,30],"66":[35,9,35,46],"72":[56,13,56,22],"73":[3,31,3,63],"74":[35,9,35,65],"80":[53,41,53,56],"81":[3,23,3,64],"82":[39,17,39,38],"88":[52,16,52,47],"89":[3,23,3,64],"90":[39,40,39,43],"96":[44,9,44,40],"97":[3,23,3,64],"104":[60,17,60,32],"105":[4,17,4,24],"106":[39,40,39,43],"113":[4,25,4,50],"114":[40,14,40,29],"121":[4,17,4,51],"122":[41,11,41,20],"129":[4,17,4,51],"130":[44,9,44,40],"137":[4,17,4,51],"138":[45,33,45,56],"145":[5,16,5,23],"146":[45,29,45,56],"153":[5,24,5,48],"154":[45,58,45,61],"161":[5,16,5,49],"169":[5,16,5,49],"170":[45,58,45,61],"177":[5,16,5,49],"178":[46,16,46,37],"185":[6,16,6,23],"186":[47,14,47,29],"193":[6,24,6,48],"194":[48,13,48,22],"201":[6,16,6,49],"202":[49,14,49,26],"209":[6,16,6,49],"210":[51,25,51,48],"217":[6,16,6,49],"218":[51,25,51,62],"225":[7,26,7,33],"226":[51,21,51,62],"233":[7,34,7,69],"234":[51,64,51,67],"241":[7,26,7,70],"249":[7,26,7,70],"250":[51,64,51,67],"257":[7,26,7,70],"258":[51,78,51,83],"265":[8,22,8,29],"266":[51,69,51,84],"273":[8,30,8,60],"274":[52,16,52,47],"281":[8,22,8,61],"282":[53,16,53,39],"289":[8,22,8,61],"290":[53,41,53,56],"297":[8,22,8,61],"298":[53,58,53,61],"305":[9,36,9,43],"313":[9,44,9,91],"314":[53,58,53,61],"321":[9,36,9,92],"322":[54,16,54,37],"329":[9,36,9,92],"330":[54,16,54,41],"337":[9,36,9,92],"338":[55,14,55,29],"345":[11,11,11,15],"346":[55,14,55,33],"353":[11,11,11,19],"354":[56,13,56,22],"361":[11,11,11,19],"362":[57,14,57,26],"369":[11,11,11,19],"370":[60,17,60,32],"377":[12,11,12,15],"378":[60,34,60,37],"385":[12,11,12,19],"393":[12,11,12,19],"394":[60,34,60,37],"401":[12,11,12,19],"402":[61,9,61,24],"409":[13,24,13,40],"410":[61,38,61,43],"417":[13,24,13,40],"418":[63,16,63,39],"425":[13,24,13,40],"426":[63,16,63,53],"433":[14,39,14,72],"441":[14,39,14,72],"449":[14,39,14,72],"457":[19,1,19,2],"465":[19,13,19,20],"473":[19,29,19,33],"481":[19,44,19,72],"489":[19,73,19,81],"497":[19,44,19,82],"505":[19,3,19,84],"513":[21,13,21,21],"521":[21,22,21,26],"529":[21,13,21,27],"537":[21,13,21,27],"545":[21,13,21,27],"553":[22,15,22,23],"561":[22,24,22,25],"569":[22,24,22,32],"577":[22,15,22,33],"585":[22,15,22,33],"593":[22,15,22,33],"601":[23,23,23,38],"609":[23,39,23,44],"617":[23,46,23,49],"625":[23,23,23,50],"633":[23,23,23,50],"641":[23,23,23,50],"649":[24,27,24,36],"657":[24,27,24,43],"665":[24,27,24,43],"673":[24,27,24,43],"681":[26,9,26,24],"689":[26,29,26,30],"697":[27,41,27,42],"705":[27,41,27,42],"713":[27,21,27,42],"721":[27,7,27,43],"729":[28,16,28,31],"737":[28,36,28,37],"745":[29,21,29,22],"753":[29,21,29,22],"761":[29,7,29,23],"769":[30,27,30,30],"777":[30,33,30,44],"785":[30,27,30,44],"793":[30,7,30,45],"801":[32,21,32,36],"809":[32,39,32,40],"817":[32,21,32,40],"825":[32,7,32,41],"833":[33,27,33,30],"841":[33,31,33,34],"849":[33,35,33,44],"857":[33,45,33,56],"865":[33,35,33,57],"873":[33,59,33,60],"881":[33,31,33,61],"889":[33,63,33,66],"897":[33,69,33,80],"905":[33,27,33,81],"913":[33,27,33,81],"921":[33,7,33,82],"929":[35,9,35,12],"937":[35,15,35,26],"945":[35,29,35,46],"953":[35,49,35,65],"961":[36,13,36,22],"969":[36,23,36,54],"977":[36,13,36,55],"985":[36,13,36,55],"993":[36,7,36,56],"1001":[38,9,38,27],"1009":[38,28,38,29],"1017":[38,31,38,48],"1025":[38,9,38,49],"1033":[38,9,38,49],"1041":[38,5,38,50],"1049":[39,14,39,15],"1057":[39,14,39,15],"1065":[39,17,39,18],"1073":[39,21,39,38],"1089":[39,40,39,41],"1097":[39,40,39,43],"1113":[40,14,40,25],"1121":[40,28,40,29],"1129":[40,14,40,29],"1137":[40,7,40,30],"1145":[41,11,41,15],"1153":[41,19,41,20],"1161":[41,22,41,36],"1169":[41,37,41,38],"1177":[41,40,41,41],"1185":[41,43,41,44],"1193":[41,45,41,49],"1201":[41,43,41,50],"1209":[41,22,41,51],"1217":[41,22,41,52],"1225":[43,5,43,6],"1233":[43,16,43,33],"1241":[43,5,43,33],"1249":[43,5,43,34],"1257":[44,9,44,20],"1265":[44,23,44,40],"1273":[45,16,45,27],"1281":[45,16,45,27],"1289":[45,29,45,30],"1297":[45,33,45,36],"1305":[45,39,45,56],"1321":[45,58,45,59],"1329":[45,58,45,61],"1345":[46,16,46,17],"1353":[46,20,46,37],"1361":[46,16,46,37],"1369":[46,9,46,38],"1377":[47,14,47,15],"1385":[47,18,47,29],"1393":[47,14,47,29],"1401":[47,9,47,30],"1409":[48,13,48,17],"1417":[48,21,48,22],"1425":[48,24,48,25],"1433":[48,26,48,28],"1441":[48,32,48,33],"1449":[48,34,48,38],"1457":[48,32,48,39],"1465":[48,24,48,39],"1473":[48,24,48,40],"1481":[49,21,49,22],"1489":[49,23,49,25],"1497":[49,14,49,27],"1505":[51,16,51,19],"1513":[51,16,51,19],"1521":[51,21,51,22],"1529":[51,25,51,28],"1537":[51,31,51,48],"1545":[51,51,51,62],"1561":[51,64,51,65],"1569":[51,64,51,67],"1585":[51,76,51,77],"1593":[51,78,51,79],"1601":[51,82,51,83],"1609":[51,69,51,85],"1617":[52,16,52,27],"1625":[52,30,52,47],"1633":[53,16,53,19],"1641":[53,22,53,39],"1649":[53,16,53,39],"1657":[53,41,53,42],"1665":[53,45,53,56],"1681":[53,58,53,59],"1689":[53,58,53,61],"1705":[54,16,54,17],"1713":[54,20,54,37],"1721":[54,40,54,41],"1729":[54,16,54,41],"1737":[54,9,54,42],"1745":[55,14,55,15],"1753":[55,18,55,29],"1761":[55,32,55,33],"1769":[55,14,55,33],"1777":[55,9,55,34],"1785":[56,13,56,17],"1793":[56,21,56,22],"1801":[56,24,56,25],"1809":[56,26,56,28],"1817":[56,32,56,33],"1825":[56,34,56,38],"1833":[56,32,56,39],"1841":[56,24,56,39],"1849":[56,24,56,40],"1857":[57,21,57,22],"1865":[57,23,57,25],"1873":[57,14,57,27],"1881":[60,14,60,15],"1889":[60,14,60,15],"1897":[60,17,60,18],"1905":[60,21,60,32],"1921":[60,34,60,35],"1929":[60,34,60,37],"1945":[61,7,61,8],"1953":[61,9,61,10],"1961":[61,13,61,24],"1969":[61,28,61,37],"1977":[61,38,61,39],"1985":[61,42,61,43],"1993":[61,28,61,44],"2001":[61,7,61,44],"2009":[61,7,61,45],"2017":[63,5,63,6],"2025":[63,16,63,19],"2033":[63,22,63,39],"2041":[63,42,63,53],"2049":[63,5,63,53],"2057":[63,5,63,54],"2065":[64,12,64,13],"2073":[64,12,64,13],"2081":[64,5,64,14],"2089":[20,11,65,4],"2097":[20,11,65,4],"2105":[20,11,65,4],"2113":[20,11,65,4],"2121":[20,11,65,4],"2129":[20,11,65,4],"2137":[20,11,65,4],"2145":[20,11,65,4],"2153":[20,11,65,4],"2161":[20,11,65,4],"2169":[20,11,65,4],"2177":[20,11,65,4],"2185":[20,11,65,4],"2193":[20,11,65,4],"2201":[20,11,65,4],"2209":[20,11,65,4],"2217":[19,86,66,2],"2225":[19,1,66,3],"2233":[19,1,66,4],"2241":[1,1,67,1],"2249":[1,1,67,1],"2257":[1,1,67,1],"2265":[1,1,67,1],"2273":[1,1,67,1],"2281":[1,1,67,1],"2289":[1,1,67,1],"2297":[1,1,67,1],"2305":[1,1,67,1],"2313":[1,1,67,1],"2321":[1,1,67,1],"2329":[1,1,67,1],"2337":[1,1,67,1],"2345":[28,12,34,6],"2353":[26,5,34,6],"2361":[35,5,37,6],"2369":[41,7,41,52],"2377":[39,5,42,6],"2385":[39,5,42,6],"2393":[39,5,42,6],"2401":[48,9,49,27],"2409":[45,7,50,8],"2417":[45,7,50,8],"2425":[45,7,50,8],"2433":[51,7,51,85],"2441":[51,7,51,85],"2449":[51,7,51,85],"2457":[56,9,57,27],"2465":[53,7,58,8],"2473":[53,7,58,8],"2481":[53,7,58,8],"2489":[52,12,59,6],"2497":[44,5,59,6],"2505":[60,5,62,6],"2513":[60,5,62,6],"2521":[60,5,62,6],"2529":[20,11,65,4],"2537":[20,11,65,4],"2545":[1,1,67,1],"2553":[1,1,67,1],"nBranches":26,"originalCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/es.array.splice.js","instrumentedCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/es.array.splice_jalangi_.js","code":"'use strict';\nvar $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !arrayMethodHasSpeciesSupport('splice') }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = toLength(O.length);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n"};
jalangiLabel393:
    while (true) {
        try {
            J$.Se(2241, '/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/es.array.splice_jalangi_.js', '/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/es.array.splice.js');
            J$.N(2249, '$', $, 0);
            J$.N(2257, 'toAbsoluteIndex', toAbsoluteIndex, 0);
            J$.N(2265, 'toInteger', toInteger, 0);
            J$.N(2273, 'toLength', toLength, 0);
            J$.N(2281, 'toObject', toObject, 0);
            J$.N(2289, 'arraySpeciesCreate', arraySpeciesCreate, 0);
            J$.N(2297, 'createProperty', createProperty, 0);
            J$.N(2305, 'arrayMethodHasSpeciesSupport', arrayMethodHasSpeciesSupport, 0);
            J$.N(2313, 'max', max, 0);
            J$.N(2321, 'min', min, 0);
            J$.N(2329, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, 0);
            J$.N(2337, 'MAXIMUM_ALLOWED_LENGTH_EXCEEDED', MAXIMUM_ALLOWED_LENGTH_EXCEEDED, 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var $ = J$.X1(57, J$.W(49, '$', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../internals/export', 21, false)), $, 3));
            var toAbsoluteIndex = J$.X1(97, J$.W(89, 'toAbsoluteIndex', J$.F(81, J$.R(65, 'require', require, 2), 0)(J$.T(73, '../internals/to-absolute-index', 21, false)), toAbsoluteIndex, 3));
            var toInteger = J$.X1(137, J$.W(129, 'toInteger', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, '../internals/to-integer', 21, false)), toInteger, 3));
            var toLength = J$.X1(177, J$.W(169, 'toLength', J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, '../internals/to-length', 21, false)), toLength, 3));
            var toObject = J$.X1(217, J$.W(209, 'toObject', J$.F(201, J$.R(185, 'require', require, 2), 0)(J$.T(193, '../internals/to-object', 21, false)), toObject, 3));
            var arraySpeciesCreate = J$.X1(257, J$.W(249, 'arraySpeciesCreate', J$.F(241, J$.R(225, 'require', require, 2), 0)(J$.T(233, '../internals/array-species-create', 21, false)), arraySpeciesCreate, 3));
            var createProperty = J$.X1(297, J$.W(289, 'createProperty', J$.F(281, J$.R(265, 'require', require, 2), 0)(J$.T(273, '../internals/create-property', 21, false)), createProperty, 3));
            var arrayMethodHasSpeciesSupport = J$.X1(337, J$.W(329, 'arrayMethodHasSpeciesSupport', J$.F(321, J$.R(305, 'require', require, 2), 0)(J$.T(313, '../internals/array-method-has-species-support', 21, false)), arrayMethodHasSpeciesSupport, 3));
            var max = J$.X1(369, J$.W(361, 'max', J$.G(353, J$.R(345, 'Math', Math, 2), 'max', 0), max, 3));
            var min = J$.X1(401, J$.W(393, 'min', J$.G(385, J$.R(377, 'Math', Math, 2), 'min', 0), min, 3));
            var MAX_SAFE_INTEGER = J$.X1(425, J$.W(417, 'MAX_SAFE_INTEGER', J$.T(409, 0x1FFFFFFFFFFFFF, 22, false), MAX_SAFE_INTEGER, 3));
            var MAXIMUM_ALLOWED_LENGTH_EXCEEDED = J$.X1(449, J$.W(441, 'MAXIMUM_ALLOWED_LENGTH_EXCEEDED', J$.T(433, 'Maximum allowed length exceeded', 21, false), MAXIMUM_ALLOWED_LENGTH_EXCEEDED, 3));
            J$.X1(2233, J$.F(2225, J$.R(457, '$', $, 1), 0)(J$.T(505, {
                target: J$.T(465, 'Array', 21, false),
                proto: J$.T(473, true, 23, false),
                forced: J$.U(10, '!', J$.F(497, J$.R(481, 'arrayMethodHasSpeciesSupport', arrayMethodHasSpeciesSupport, 1), 0)(J$.T(489, 'splice', 21, false)))
            }, 11, false), J$.T(2217, {
                splice: J$.T(2209, function splice(start, deleteCount) {
                    jalangiLabel392:
                        while (true) {
                            try {
                                J$.Fe(2089, arguments.callee, this, arguments);
                                arguments = J$.N(2097, 'arguments', arguments, 4);
                                splice = J$.N(2105, 'splice', splice, 0);
                                start = J$.N(2113, 'start', start, 4);
                                deleteCount = J$.N(2121, 'deleteCount', deleteCount, 4);
                                J$.N(2129, 'O', O, 0);
                                J$.N(2137, 'len', len, 0);
                                J$.N(2145, 'actualStart', actualStart, 0);
                                J$.N(2153, 'argumentsLength', argumentsLength, 0);
                                J$.N(2161, 'insertCount', insertCount, 0);
                                J$.N(2169, 'actualDeleteCount', actualDeleteCount, 0);
                                J$.N(2177, 'A', A, 0);
                                J$.N(2185, 'k', k, 0);
                                J$.N(2193, 'from', from, 0);
                                J$.N(2201, 'to', to, 0);
                                var O = J$.X1(545, J$.W(537, 'O', J$.F(529, J$.R(513, 'toObject', toObject, 1), 0)(J$.R(521, 'this', this, 0)), O, 1));
                                var len = J$.X1(593, J$.W(585, 'len', J$.F(577, J$.R(553, 'toLength', toLength, 1), 0)(J$.G(569, J$.R(561, 'O', O, 0), 'length', 0)), len, 1));
                                var actualStart = J$.X1(641, J$.W(633, 'actualStart', J$.F(625, J$.R(601, 'toAbsoluteIndex', toAbsoluteIndex, 1), 0)(J$.R(609, 'start', start, 0), J$.R(617, 'len', len, 0)), actualStart, 1));
                                var argumentsLength = J$.X1(673, J$.W(665, 'argumentsLength', J$.G(657, J$.R(649, 'arguments', arguments, 2), 'length', 0), argumentsLength, 1));
                                var insertCount, actualDeleteCount, A, k, from, to;
                                if (J$.X1(2353, J$.C(16, J$.B(18, '===', J$.R(681, 'argumentsLength', argumentsLength, 0), J$.T(689, 0, 22, false), 0)))) {
                                    J$.X1(721, insertCount = J$.W(713, 'insertCount', actualDeleteCount = J$.W(705, 'actualDeleteCount', J$.T(697, 0, 22, false), actualDeleteCount, 0), insertCount, 0));
                                } else if (J$.X1(2345, J$.C(8, J$.B(26, '===', J$.R(729, 'argumentsLength', argumentsLength, 0), J$.T(737, 1, 22, false), 0)))) {
                                    J$.X1(761, insertCount = J$.W(753, 'insertCount', J$.T(745, 0, 22, false), insertCount, 0));
                                    J$.X1(793, actualDeleteCount = J$.W(785, 'actualDeleteCount', J$.B(34, '-', J$.R(769, 'len', len, 0), J$.R(777, 'actualStart', actualStart, 0), 0), actualDeleteCount, 0));
                                } else {
                                    J$.X1(825, insertCount = J$.W(817, 'insertCount', J$.B(42, '-', J$.R(801, 'argumentsLength', argumentsLength, 0), J$.T(809, 2, 22, false), 0), insertCount, 0));
                                    J$.X1(921, actualDeleteCount = J$.W(913, 'actualDeleteCount', J$.F(905, J$.R(833, 'min', min, 1), 0)(J$.F(881, J$.R(841, 'max', max, 1), 0)(J$.F(865, J$.R(849, 'toInteger', toInteger, 1), 0)(J$.R(857, 'deleteCount', deleteCount, 0)), J$.T(873, 0, 22, false)), J$.B(50, '-', J$.R(889, 'len', len, 0), J$.R(897, 'actualStart', actualStart, 0), 0)), actualDeleteCount, 0));
                                }
                                if (J$.X1(2361, J$.C(24, J$.B(74, '>', J$.B(66, '-', J$.B(58, '+', J$.R(929, 'len', len, 0), J$.R(937, 'insertCount', insertCount, 0), 0), J$.R(945, 'actualDeleteCount', actualDeleteCount, 0), 0), J$.R(953, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER, 1), 0)))) {
                                    throw J$.X1(993, J$.Th(985, J$.F(977, J$.R(961, 'TypeError', TypeError, 2), 0)(J$.R(969, 'MAXIMUM_ALLOWED_LENGTH_EXCEEDED', MAXIMUM_ALLOWED_LENGTH_EXCEEDED, 1))));
                                }
                                J$.X1(1041, A = J$.W(1033, 'A', J$.F(1025, J$.R(1001, 'arraySpeciesCreate', arraySpeciesCreate, 1), 0)(J$.R(1009, 'O', O, 0), J$.R(1017, 'actualDeleteCount', actualDeleteCount, 0)), A, 0));
                                for (J$.X1(2385, k = J$.W(1057, 'k', J$.T(1049, 0, 22, false), k, 0)); J$.X1(2377, J$.C(40, J$.B(82, '<', J$.R(1065, 'k', k, 0), J$.R(1073, 'actualDeleteCount', actualDeleteCount, 0), 0))); J$.X1(2393, J$.B(106, '-', k = J$.W(1097, 'k', J$.B(98, '+', J$.U(90, '+', J$.R(1089, 'k', k, 0)), J$.T(1081, 1, 22, false), 0), k, 0), J$.T(1105, 1, 22, false), 0))) {
                                    J$.X1(1137, from = J$.W(1129, 'from', J$.B(114, '+', J$.R(1113, 'actualStart', actualStart, 0), J$.R(1121, 'k', k, 0), 0), from, 0));
                                    if (J$.X1(2369, J$.C(32, J$.B(122, 'in', J$.R(1145, 'from', from, 0), J$.R(1153, 'O', O, 0), 0))))
                                        J$.X1(1217, J$.F(1209, J$.R(1161, 'createProperty', createProperty, 1), 0)(J$.R(1169, 'A', A, 0), J$.R(1177, 'k', k, 0), J$.G(1201, J$.R(1185, 'O', O, 0), J$.R(1193, 'from', from, 0), 4)));
                                }
                                J$.X1(1249, J$.P(1241, J$.R(1225, 'A', A, 0), 'length', J$.R(1233, 'actualDeleteCount', actualDeleteCount, 0), 0));
                                if (J$.X1(2497, J$.C(96, J$.B(130, '<', J$.R(1257, 'insertCount', insertCount, 0), J$.R(1265, 'actualDeleteCount', actualDeleteCount, 0), 0)))) {
                                    for (J$.X1(2417, k = J$.W(1281, 'k', J$.R(1273, 'actualStart', actualStart, 0), k, 0)); J$.X1(2409, J$.C(56, J$.B(146, '<', J$.R(1289, 'k', k, 0), J$.B(138, '-', J$.R(1297, 'len', len, 0), J$.R(1305, 'actualDeleteCount', actualDeleteCount, 0), 0), 0))); J$.X1(2425, J$.B(170, '-', k = J$.W(1329, 'k', J$.B(162, '+', J$.U(154, '+', J$.R(1321, 'k', k, 0)), J$.T(1313, 1, 22, false), 0), k, 0), J$.T(1337, 1, 22, false), 0))) {
                                        J$.X1(1369, from = J$.W(1361, 'from', J$.B(178, '+', J$.R(1345, 'k', k, 0), J$.R(1353, 'actualDeleteCount', actualDeleteCount, 0), 0), from, 0));
                                        J$.X1(1401, to = J$.W(1393, 'to', J$.B(186, '+', J$.R(1377, 'k', k, 0), J$.R(1385, 'insertCount', insertCount, 0), 0), to, 0));
                                        if (J$.X1(2401, J$.C(48, J$.B(194, 'in', J$.R(1409, 'from', from, 0), J$.R(1417, 'O', O, 0), 0))))
                                            J$.X1(1473, J$.P(1465, J$.R(1425, 'O', O, 0), J$.R(1433, 'to', to, 0), J$.G(1457, J$.R(1441, 'O', O, 0), J$.R(1449, 'from', from, 0), 4), 2));
                                        else
                                            J$.X1(1497, J$.B(202, 'delete', J$.R(1481, 'O', O, 0), J$.R(1489, 'to', to, 0), 4));
                                    }
                                    for (J$.X1(2441, k = J$.W(1513, 'k', J$.R(1505, 'len', len, 0), k, 0)); J$.X1(2433, J$.C(64, J$.B(226, '>', J$.R(1521, 'k', k, 0), J$.B(218, '+', J$.B(210, '-', J$.R(1529, 'len', len, 0), J$.R(1537, 'actualDeleteCount', actualDeleteCount, 0), 0), J$.R(1545, 'insertCount', insertCount, 0), 0), 0))); J$.X1(2449, J$.B(250, '+', k = J$.W(1569, 'k', J$.B(242, '-', J$.U(234, '+', J$.R(1561, 'k', k, 0)), J$.T(1553, 1, 22, false), 0), k, 0), J$.T(1577, 1, 22, false), 0)))
                                        J$.X1(1609, J$.B(266, 'delete', J$.R(1585, 'O', O, 0), J$.B(258, '-', J$.R(1593, 'k', k, 0), J$.T(1601, 1, 22, false), 0), 4));
                                } else if (J$.X1(2489, J$.C(88, J$.B(274, '>', J$.R(1617, 'insertCount', insertCount, 0), J$.R(1625, 'actualDeleteCount', actualDeleteCount, 0), 0)))) {
                                    for (J$.X1(2473, k = J$.W(1649, 'k', J$.B(282, '-', J$.R(1633, 'len', len, 0), J$.R(1641, 'actualDeleteCount', actualDeleteCount, 0), 0), k, 0)); J$.X1(2465, J$.C(80, J$.B(290, '>', J$.R(1657, 'k', k, 0), J$.R(1665, 'actualStart', actualStart, 0), 0))); J$.X1(2481, J$.B(314, '+', k = J$.W(1689, 'k', J$.B(306, '-', J$.U(298, '+', J$.R(1681, 'k', k, 0)), J$.T(1673, 1, 22, false), 0), k, 0), J$.T(1697, 1, 22, false), 0))) {
                                        J$.X1(1737, from = J$.W(1729, 'from', J$.B(330, '-', J$.B(322, '+', J$.R(1705, 'k', k, 0), J$.R(1713, 'actualDeleteCount', actualDeleteCount, 0), 0), J$.T(1721, 1, 22, false), 0), from, 0));
                                        J$.X1(1777, to = J$.W(1769, 'to', J$.B(346, '-', J$.B(338, '+', J$.R(1745, 'k', k, 0), J$.R(1753, 'insertCount', insertCount, 0), 0), J$.T(1761, 1, 22, false), 0), to, 0));
                                        if (J$.X1(2457, J$.C(72, J$.B(354, 'in', J$.R(1785, 'from', from, 0), J$.R(1793, 'O', O, 0), 0))))
                                            J$.X1(1849, J$.P(1841, J$.R(1801, 'O', O, 0), J$.R(1809, 'to', to, 0), J$.G(1833, J$.R(1817, 'O', O, 0), J$.R(1825, 'from', from, 0), 4), 2));
                                        else
                                            J$.X1(1873, J$.B(362, 'delete', J$.R(1857, 'O', O, 0), J$.R(1865, 'to', to, 0), 4));
                                    }
                                }
                                for (J$.X1(2513, k = J$.W(1889, 'k', J$.T(1881, 0, 22, false), k, 0)); J$.X1(2505, J$.C(104, J$.B(370, '<', J$.R(1897, 'k', k, 0), J$.R(1905, 'insertCount', insertCount, 0), 0))); J$.X1(2521, J$.B(394, '-', k = J$.W(1929, 'k', J$.B(386, '+', J$.U(378, '+', J$.R(1921, 'k', k, 0)), J$.T(1913, 1, 22, false), 0), k, 0), J$.T(1937, 1, 22, false), 0))) {
                                    J$.X1(2009, J$.P(2001, J$.R(1945, 'O', O, 0), J$.B(402, '+', J$.R(1953, 'k', k, 0), J$.R(1961, 'actualStart', actualStart, 0), 0), J$.G(1993, J$.R(1969, 'arguments', arguments, 2), J$.B(410, '+', J$.R(1977, 'k', k, 0), J$.T(1985, 2, 22, false), 0), 4), 2));
                                }
                                J$.X1(2057, J$.P(2049, J$.R(2017, 'O', O, 0), 'length', J$.B(426, '+', J$.B(418, '-', J$.R(2025, 'len', len, 0), J$.R(2033, 'actualDeleteCount', actualDeleteCount, 0), 0), J$.R(2041, 'insertCount', insertCount, 0), 0), 0));
                                return J$.X1(2081, J$.Rt(2073, J$.R(2065, 'A', A, 0)));
                            } catch (J$e) {
                                J$.Ex(2529, J$e);
                            } finally {
                                if (J$.Fr(2537))
                                    continue jalangiLabel392;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 2089)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(2545, J$e);
        } finally {
            if (J$.Sr(2553)) {
                J$.L();
                continue jalangiLabel393;
            } else {
                J$.L();
                break jalangiLabel393;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
