{"8":[10,46,10,66],"9":[1,1,1,13],"10":[10,46,10,66],"17":[1,1,1,14],"25":[2,27,2,34],"33":[2,35,2,72],"41":[2,27,2,73],"49":[2,27,2,73],"57":[2,27,2,73],"65":[3,13,3,20],"73":[3,21,3,51],"81":[3,13,3,52],"89":[3,13,3,57],"97":[3,13,3,57],"105":[3,13,3,57],"113":[5,19,5,38],"121":[5,19,5,50],"129":[5,19,5,50],"137":[5,19,5,50],"145":[9,1,9,20],"153":[9,33,9,39],"161":[10,10,10,15],"169":[10,16,10,27],"177":[10,28,10,32],"185":[10,16,10,33],"193":[10,35,10,44],"201":[10,46,10,55],"209":[10,46,10,62],"217":[10,65,10,66],"225":[10,69,10,78],"233":[10,79,10,80],"241":[10,69,10,81],"249":[10,84,10,93],"257":[10,10,10,94],"265":[10,10,10,94],"273":[10,3,10,95],"281":[9,41,11,2],"289":[9,41,11,2],"297":[9,41,11,2],"305":[9,41,11,2],"313":[9,41,11,2],"321":[9,1,11,3],"323":[9,1,9,32],"329":[9,1,11,4],"337":[1,1,12,1],"345":[1,1,12,1],"353":[1,1,12,1],"361":[1,1,12,1],"369":[10,46,10,93],"377":[9,41,11,2],"385":[9,41,11,2],"393":[1,1,12,1],"401":[1,1,12,1],"nBranches":2,"originalCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/es.typed-array.find.js","instrumentedCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/es.typed-array.find_jalangi_.js","code":"'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $find = require('../internals/array-iteration').find;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\n\n// `%TypedArray%.prototype.find` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.find\nArrayBufferViewCore.exportProto('find', function find(predicate /* , thisArg */) {\n  return $find(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n});\n"}