J$.iids = {"8":[10,12,10,64],"9":[1,9,1,16],"10":[10,33,10,64],"17":[1,17,1,38],"25":[1,9,1,39],"33":[1,9,1,39],"41":[1,9,1,39],"49":[2,17,2,24],"57":[2,25,2,50],"65":[2,17,2,51],"73":[2,17,2,51],"81":[2,17,2,51],"89":[4,11,4,15],"97":[4,11,4,19],"105":[4,11,4,19],"113":[4,11,4,19],"121":[8,1,8,2],"129":[8,13,8,21],"137":[8,29,8,33],"145":[8,3,8,35],"153":[10,12,10,21],"161":[10,22,10,28],"169":[10,12,10,29],"177":[10,33,10,36],"185":[10,37,10,43],"193":[10,33,10,44],"201":[10,48,10,64],"209":[10,12,10,64],"217":[10,5,10,65],"225":[9,18,11,4],"233":[9,18,11,4],"241":[9,18,11,4],"249":[9,18,11,4],"257":[9,18,11,4],"265":[8,37,12,2],"273":[8,1,12,3],"281":[8,1,12,4],"289":[1,1,13,1],"297":[1,1,13,1],"305":[1,1,13,1],"313":[1,1,13,1],"321":[9,18,11,4],"329":[9,18,11,4],"337":[1,1,13,1],"345":[1,1,13,1],"nBranches":2,"originalCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/es.number.is-safe-integer.js","instrumentedCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/es.number.is-safe-integer_jalangi_.js","code":"var $ = require('../internals/export');\nvar isInteger = require('../internals/is-integer');\n\nvar abs = Math.abs;\n\n// `Number.isSafeInteger` method\n// https://tc39.github.io/ecma262/#sec-number.issafeinteger\n$({ target: 'Number', stat: true }, {\n  isSafeInteger: function isSafeInteger(number) {\n    return isInteger(number) && abs(number) <= 0x1FFFFFFFFFFFFF;\n  }\n});\n"};
jalangiLabel584:
    while (true) {
        try {
            J$.Se(289, '/home/blake/corejs_tests/node_modules/core-js/modules/es.number.is-safe-integer_jalangi_.js', '/home/blake/corejs_tests/node_modules/core-js/modules/es.number.is-safe-integer.js');
            J$.N(297, '$', $, 0);
            J$.N(305, 'isInteger', isInteger, 0);
            J$.N(313, 'abs', abs, 0);
            var $ = J$.X1(41, J$.W(33, '$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../internals/export', 21, false)), $, 3));
            var isInteger = J$.X1(81, J$.W(73, 'isInteger', J$.F(65, J$.R(49, 'require', require, 2), 0)(J$.T(57, '../internals/is-integer', 21, false)), isInteger, 3));
            var abs = J$.X1(113, J$.W(105, 'abs', J$.G(97, J$.R(89, 'Math', Math, 2), 'abs', 0), abs, 3));
            J$.X1(281, J$.F(273, J$.R(121, '$', $, 1), 0)(J$.T(145, {
                target: J$.T(129, 'Number', 21, false),
                stat: J$.T(137, true, 23, false)
            }, 11, false), J$.T(265, {
                isSafeInteger: J$.T(257, function isSafeInteger(number) {
                    jalangiLabel583:
                        while (true) {
                            try {
                                J$.Fe(225, arguments.callee, this, arguments);
                                arguments = J$.N(233, 'arguments', arguments, 4);
                                isSafeInteger = J$.N(241, 'isSafeInteger', isSafeInteger, 0);
                                number = J$.N(249, 'number', number, 4);
                                return J$.X1(217, J$.Rt(209, J$.C(8, J$.F(169, J$.R(153, 'isInteger', isInteger, 1), 0)(J$.R(161, 'number', number, 0))) ? J$.B(10, '<=', J$.F(193, J$.R(177, 'abs', abs, 1), 0)(J$.R(185, 'number', number, 0)), J$.T(201, 0x1FFFFFFFFFFFFF, 22, false), 0) : J$._()));
                            } catch (J$e) {
                                J$.Ex(321, J$e);
                            } finally {
                                if (J$.Fr(329))
                                    continue jalangiLabel583;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 225)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(337, J$e);
        } finally {
            if (J$.Sr(345)) {
                J$.L();
                continue jalangiLabel584;
            } else {
                J$.L();
                break jalangiLabel584;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
