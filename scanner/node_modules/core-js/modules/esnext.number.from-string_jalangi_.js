J$.iids = {"8":[16,9,16,34],"9":[1,1,1,13],"10":[16,9,16,22],"16":[17,9,17,23],"17":[1,1,1,14],"18":[16,9,16,34],"24":[21,11,21,25],"25":[2,9,2,16],"26":[17,9,17,23],"32":[18,9,18,32],"33":[2,17,2,38],"34":[18,9,18,32],"40":[23,9,23,28],"41":[2,9,2,39],"42":[19,14,19,16],"48":[24,9,24,24],"49":[2,9,2,39],"50":[21,11,21,25],"56":[24,9,24,24],"57":[2,9,2,39],"58":[23,9,23,28],"64":[25,9,25,86],"65":[3,17,3,24],"66":[24,9,24,14],"72":[25,9,25,86],"73":[3,25,3,50],"74":[24,18,24,24],"81":[3,17,3,51],"82":[25,9,25,28],"89":[3,17,3,51],"90":[25,32,25,86],"97":[3,17,3,51],"98":[28,12,28,26],"105":[4,16,4,23],"113":[4,24,4,48],"121":[4,16,4,49],"129":[4,16,4,49],"137":[4,16,4,49],"145":[6,37,6,68],"153":[6,37,6,68],"161":[6,37,6,68],"169":[7,21,7,36],"177":[7,21,7,36],"185":[7,21,7,36],"193":[8,13,8,25],"201":[8,13,8,25],"209":[8,13,8,25],"217":[12,1,12,2],"225":[12,13,12,21],"233":[12,29,12,33],"241":[12,3,12,35],"249":[14,16,14,17],"257":[14,16,14,17],"265":[14,16,14,17],"273":[16,16,16,22],"281":[16,26,16,34],"289":[16,42,16,51],"297":[16,52,16,81],"305":[16,42,16,82],"313":[16,42,16,82],"321":[16,36,16,83],"329":[17,10,17,16],"337":[17,10,17,23],"345":[17,31,17,42],"353":[17,43,17,72],"361":[17,31,17,73],"369":[17,31,17,73],"377":[17,25,17,74],"385":[18,9,18,15],"393":[18,23,18,24],"401":[18,9,18,25],"403":[18,9,18,22],"409":[18,29,18,32],"417":[19,15,19,16],"425":[19,14,19,16],"433":[19,7,19,17],"441":[20,16,20,22],"449":[20,29,20,30],"457":[20,16,20,31],"459":[20,16,20,28],"465":[20,16,20,31],"473":[20,7,20,32],"481":[21,12,21,18],"489":[21,12,21,25],"497":[21,33,21,44],"505":[21,45,21,74],"513":[21,33,21,75],"521":[21,33,21,75],"529":[21,27,21,76],"537":[23,9,23,14],"545":[23,19,23,28],"553":[23,31,23,33],"561":[23,36,23,45],"569":[23,46,23,51],"577":[23,36,23,52],"585":[23,9,23,52],"593":[23,5,23,53],"601":[24,9,24,10],"609":[24,13,24,14],"617":[24,18,24,19],"625":[24,22,24,24],"633":[24,32,24,42],"641":[24,43,24,56],"649":[24,32,24,57],"657":[24,32,24,57],"665":[24,26,24,58],"673":[25,10,25,15],"681":[25,21,25,27],"689":[25,10,25,28],"691":[25,10,25,20],"697":[25,43,25,51],"705":[25,52,25,58],"713":[25,60,25,61],"721":[25,43,25,62],"729":[25,43,25,62],"737":[25,73,25,74],"745":[25,32,25,75],"747":[25,32,25,72],"753":[25,80,25,86],"761":[26,13,26,24],"769":[26,25,26,54],"777":[26,13,26,55],"785":[26,13,26,55],"793":[26,7,26,56],"801":[28,12,28,16],"809":[28,19,28,26],"817":[28,12,28,26],"825":[28,5,28,27],"833":[13,15,29,4],"841":[13,15,29,4],"849":[13,15,29,4],"857":[13,15,29,4],"865":[13,15,29,4],"873":[13,15,29,4],"881":[13,15,29,4],"889":[13,15,29,4],"897":[13,15,29,4],"905":[12,37,30,2],"913":[12,1,30,3],"921":[12,1,30,4],"929":[1,1,31,1],"937":[1,1,31,1],"945":[1,1,31,1],"953":[1,1,31,1],"961":[1,1,31,1],"969":[1,1,31,1],"977":[1,1,31,1],"985":[16,5,16,83],"993":[17,5,17,74],"1001":[21,7,21,76],"1009":[18,5,22,6],"1017":[23,9,23,52],"1025":[24,5,24,58],"1033":[25,5,27,6],"1041":[13,15,29,4],"1049":[13,15,29,4],"1057":[1,1,31,1],"1065":[1,1,31,1],"nBranches":18,"originalCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/esnext.number.from-string.js","instrumentedCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/esnext.number.from-string_jalangi_.js","code":"'use strict';\nvar $ = require('../internals/export');\nvar toInteger = require('../internals/to-integer');\nvar parseInt = require('../internals/parse-int');\n\nvar INVALID_NUMBER_REPRESENTATION = 'Invalid number representation';\nvar INVALID_RADIX = 'Invalid radix';\nvar valid = /^[\\da-z]+$/;\n\n// `Number.fromString` method\n// https://github.com/tc39/proposal-number-fromstring\n$({ target: 'Number', stat: true }, {\n  fromString: function fromString(string, radix) {\n    var sign = 1;\n    var R, mathNum;\n    if (typeof string != 'string') throw TypeError(INVALID_NUMBER_REPRESENTATION);\n    if (!string.length) throw SyntaxError(INVALID_NUMBER_REPRESENTATION);\n    if (string.charAt(0) == '-') {\n      sign = -1;\n      string = string.slice(1);\n      if (!string.length) throw SyntaxError(INVALID_NUMBER_REPRESENTATION);\n    }\n    R = radix === undefined ? 10 : toInteger(radix);\n    if (R < 2 || R > 36) throw RangeError(INVALID_RADIX);\n    if (!valid.test(string) || (mathNum = parseInt(string, R)).toString(R) !== string) {\n      throw SyntaxError(INVALID_NUMBER_REPRESENTATION);\n    }\n    return sign * mathNum;\n  }\n});\n"};
jalangiLabel1257:
    while (true) {
        try {
            J$.Se(929, '/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/esnext.number.from-string_jalangi_.js', '/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/esnext.number.from-string.js');
            J$.N(937, '$', $, 0);
            J$.N(945, 'toInteger', toInteger, 0);
            J$.N(953, 'parseInt', parseInt, 0);
            J$.N(961, 'INVALID_NUMBER_REPRESENTATION', INVALID_NUMBER_REPRESENTATION, 0);
            J$.N(969, 'INVALID_RADIX', INVALID_RADIX, 0);
            J$.N(977, 'valid', valid, 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var $ = J$.X1(57, J$.W(49, '$', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../internals/export', 21, false)), $, 3));
            var toInteger = J$.X1(97, J$.W(89, 'toInteger', J$.F(81, J$.R(65, 'require', require, 2), 0)(J$.T(73, '../internals/to-integer', 21, false)), toInteger, 3));
            var parseInt = J$.X1(137, J$.W(129, 'parseInt', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, '../internals/parse-int', 21, false)), parseInt, 3));
            var INVALID_NUMBER_REPRESENTATION = J$.X1(161, J$.W(153, 'INVALID_NUMBER_REPRESENTATION', J$.T(145, 'Invalid number representation', 21, false), INVALID_NUMBER_REPRESENTATION, 3));
            var INVALID_RADIX = J$.X1(185, J$.W(177, 'INVALID_RADIX', J$.T(169, 'Invalid radix', 21, false), INVALID_RADIX, 3));
            var valid = J$.X1(209, J$.W(201, 'valid', J$.T(193, /^[\da-z]+$/, 14, false), valid, 3));
            J$.X1(921, J$.F(913, J$.R(217, '$', $, 1), 0)(J$.T(241, {
                target: J$.T(225, 'Number', 21, false),
                stat: J$.T(233, true, 23, false)
            }, 11, false), J$.T(905, {
                fromString: J$.T(897, function fromString(string, radix) {
                    jalangiLabel1256:
                        while (true) {
                            try {
                                J$.Fe(833, arguments.callee, this, arguments);
                                arguments = J$.N(841, 'arguments', arguments, 4);
                                fromString = J$.N(849, 'fromString', fromString, 0);
                                string = J$.N(857, 'string', string, 4);
                                radix = J$.N(865, 'radix', radix, 4);
                                J$.N(873, 'sign', sign, 0);
                                J$.N(881, 'R', R, 0);
                                J$.N(889, 'mathNum', mathNum, 0);
                                var sign = J$.X1(265, J$.W(257, 'sign', J$.T(249, 1, 22, false), sign, 1));
                                var R, mathNum;
                                if (J$.X1(985, J$.C(8, J$.B(18, '!=', J$.U(10, 'typeof', J$.R(273, 'string', string, 0)), J$.T(281, 'string', 21, false), 0))))
                                    throw J$.X1(321, J$.Th(313, J$.F(305, J$.R(289, 'TypeError', TypeError, 2), 0)(J$.R(297, 'INVALID_NUMBER_REPRESENTATION', INVALID_NUMBER_REPRESENTATION, 1))));
                                if (J$.X1(993, J$.C(16, J$.U(26, '!', J$.G(337, J$.R(329, 'string', string, 0), 'length', 0)))))
                                    throw J$.X1(377, J$.Th(369, J$.F(361, J$.R(345, 'SyntaxError', SyntaxError, 2), 0)(J$.R(353, 'INVALID_NUMBER_REPRESENTATION', INVALID_NUMBER_REPRESENTATION, 1))));
                                if (J$.X1(1009, J$.C(32, J$.B(34, '==', J$.M(401, J$.R(385, 'string', string, 0), 'charAt', 0)(J$.T(393, 0, 22, false)), J$.T(409, '-', 21, false), 0)))) {
                                    J$.X1(433, sign = J$.W(425, 'sign', J$.U(42, '-', J$.T(417, 1, 22, false)), sign, 0));
                                    J$.X1(473, string = J$.W(465, 'string', J$.M(457, J$.R(441, 'string', string, 0), 'slice', 0)(J$.T(449, 1, 22, false)), string, 0));
                                    if (J$.X1(1001, J$.C(24, J$.U(50, '!', J$.G(489, J$.R(481, 'string', string, 0), 'length', 0)))))
                                        throw J$.X1(529, J$.Th(521, J$.F(513, J$.R(497, 'SyntaxError', SyntaxError, 2), 0)(J$.R(505, 'INVALID_NUMBER_REPRESENTATION', INVALID_NUMBER_REPRESENTATION, 1))));
                                }
                                J$.X1(593, R = J$.W(585, 'R', J$.X1(1017, J$.C(40, J$.B(58, '===', J$.R(537, 'radix', radix, 0), J$.T(545, undefined, 24, false), 0))) ? J$.T(553, 10, 22, false) : J$.F(577, J$.R(561, 'toInteger', toInteger, 1), 0)(J$.R(569, 'radix', radix, 0)), R, 0));
                                if (J$.X1(1025, J$.C(56, J$.C(48, J$.B(66, '<', J$.R(601, 'R', R, 0), J$.T(609, 2, 22, false), 0)) ? J$._() : J$.B(74, '>', J$.R(617, 'R', R, 0), J$.T(625, 36, 22, false), 0))))
                                    throw J$.X1(665, J$.Th(657, J$.F(649, J$.R(633, 'RangeError', RangeError, 2), 0)(J$.R(641, 'INVALID_RADIX', INVALID_RADIX, 1))));
                                if (J$.X1(1033, J$.C(72, J$.C(64, J$.U(82, '!', J$.M(689, J$.R(673, 'valid', valid, 1), 'test', 0)(J$.R(681, 'string', string, 0)))) ? J$._() : J$.B(90, '!==', J$.M(745, mathNum = J$.W(729, 'mathNum', J$.F(721, J$.R(697, 'parseInt', parseInt, 1), 0)(J$.R(705, 'string', string, 0), J$.R(713, 'R', R, 0)), mathNum, 0), 'toString', 0)(J$.R(737, 'R', R, 0)), J$.R(753, 'string', string, 0), 0)))) {
                                    throw J$.X1(793, J$.Th(785, J$.F(777, J$.R(761, 'SyntaxError', SyntaxError, 2), 0)(J$.R(769, 'INVALID_NUMBER_REPRESENTATION', INVALID_NUMBER_REPRESENTATION, 1))));
                                }
                                return J$.X1(825, J$.Rt(817, J$.B(98, '*', J$.R(801, 'sign', sign, 0), J$.R(809, 'mathNum', mathNum, 0), 0)));
                            } catch (J$e) {
                                J$.Ex(1041, J$e);
                            } finally {
                                if (J$.Fr(1049))
                                    continue jalangiLabel1256;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 833)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(1057, J$e);
        } finally {
            if (J$.Sr(1065)) {
                J$.L();
                continue jalangiLabel1257;
            } else {
                J$.L();
                break jalangiLabel1257;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
