J$.iids = {"9":[1,1,1,13],"17":[1,1,1,14],"25":[2,9,2,16],"33":[2,17,2,38],"41":[2,9,2,39],"49":[2,9,2,39],"57":[2,9,2,39],"65":[3,13,3,20],"73":[3,21,3,47],"81":[3,13,3,48],"89":[3,13,3,53],"97":[3,13,3,53],"105":[3,13,3,53],"113":[4,30,4,37],"121":[4,38,4,78],"129":[4,30,4,79],"137":[4,30,4,79],"145":[4,30,4,79],"153":[8,1,8,2],"161":[8,13,8,21],"169":[8,30,8,34],"177":[8,44,8,66],"185":[8,67,8,73],"193":[8,44,8,74],"201":[8,3,8,76],"209":[10,12,10,17],"217":[10,18,10,22],"225":[10,12,10,23],"233":[10,12,10,23],"241":[10,5,10,24],"249":[9,9,11,4],"257":[9,9,11,4],"265":[9,9,11,4],"273":[9,9,11,4],"281":[8,78,12,2],"289":[8,1,12,3],"297":[8,1,12,4],"305":[1,1,13,1],"313":[1,1,13,1],"321":[1,1,13,1],"329":[1,1,13,1],"337":[9,9,11,4],"345":[9,9,11,4],"353":[1,1,13,1],"361":[1,1,13,1],"nBranches":0,"originalCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/es.string.trim.js","instrumentedCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/es.string.trim_jalangi_.js","code":"'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/forced-string-trim-method');\n\n// `String.prototype.trim` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n"};
jalangiLabel505:
    while (true) {
        try {
            J$.Se(305, '/home/blake/corejs_tests/node_modules/core-js/modules/es.string.trim_jalangi_.js', '/home/blake/corejs_tests/node_modules/core-js/modules/es.string.trim.js');
            J$.N(313, '$', $, 0);
            J$.N(321, '$trim', $trim, 0);
            J$.N(329, 'forcedStringTrimMethod', forcedStringTrimMethod, 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var $ = J$.X1(57, J$.W(49, '$', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../internals/export', 21, false)), $, 3));
            var $trim = J$.X1(105, J$.W(97, '$trim', J$.G(89, J$.F(81, J$.R(65, 'require', require, 2), 0)(J$.T(73, '../internals/string-trim', 21, false)), 'trim', 0), $trim, 3));
            var forcedStringTrimMethod = J$.X1(145, J$.W(137, 'forcedStringTrimMethod', J$.F(129, J$.R(113, 'require', require, 2), 0)(J$.T(121, '../internals/forced-string-trim-method', 21, false)), forcedStringTrimMethod, 3));
            J$.X1(297, J$.F(289, J$.R(153, '$', $, 1), 0)(J$.T(201, {
                target: J$.T(161, 'String', 21, false),
                proto: J$.T(169, true, 23, false),
                forced: J$.F(193, J$.R(177, 'forcedStringTrimMethod', forcedStringTrimMethod, 1), 0)(J$.T(185, 'trim', 21, false))
            }, 11, false), J$.T(281, {
                trim: J$.T(273, function trim() {
                    jalangiLabel504:
                        while (true) {
                            try {
                                J$.Fe(249, arguments.callee, this, arguments);
                                arguments = J$.N(257, 'arguments', arguments, 4);
                                trim = J$.N(265, 'trim', trim, 0);
                                return J$.X1(241, J$.Rt(233, J$.F(225, J$.R(209, '$trim', $trim, 1), 0)(J$.R(217, 'this', this, 0))));
                            } catch (J$e) {
                                J$.Ex(337, J$e);
                            } finally {
                                if (J$.Fr(345))
                                    continue jalangiLabel504;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 249)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(353, J$e);
        } finally {
            if (J$.Sr(361)) {
                J$.L();
                continue jalangiLabel505;
            } else {
                J$.L();
                break jalangiLabel505;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
