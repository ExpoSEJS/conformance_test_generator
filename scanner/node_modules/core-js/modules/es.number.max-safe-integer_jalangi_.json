{"9":[1,9,1,16],"17":[1,17,1,38],"25":[1,9,1,39],"33":[1,9,1,39],"41":[1,9,1,39],"49":[5,1,5,2],"57":[5,13,5,21],"65":[5,29,5,33],"73":[5,3,5,35],"81":[6,21,6,37],"89":[5,37,7,2],"97":[5,1,7,3],"105":[5,1,7,4],"113":[1,1,8,1],"121":[1,1,8,1],"129":[1,1,8,1],"137":[1,1,8,1],"nBranches":0,"originalCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/es.number.max-safe-integer.js","instrumentedCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/es.number.max-safe-integer_jalangi_.js","code":"var $ = require('../internals/export');\n\n// `Number.MAX_SAFE_INTEGER` constant\n// https://tc39.github.io/ecma262/#sec-number.max_safe_integer\n$({ target: 'Number', stat: true }, {\n  MAX_SAFE_INTEGER: 0x1FFFFFFFFFFFFF\n});\n"}