J$.iids = {"8":[15,9,15,38],"9":[1,1,1,13],"10":[15,9,15,24],"16":[15,9,15,38],"17":[1,1,1,14],"18":[15,28,15,38],"24":[18,59,18,69],"25":[2,9,2,16],"26":[18,59,18,69],"32":[18,17,18,31],"33":[2,17,2,38],"41":[2,9,2,39],"49":[2,9,2,39],"57":[2,9,2,39],"65":[3,15,3,22],"73":[3,23,3,45],"81":[3,15,3,46],"89":[3,15,3,46],"97":[3,15,3,46],"105":[4,16,4,23],"113":[4,24,4,48],"121":[4,16,4,49],"129":[4,16,4,49],"137":[4,16,4,49],"145":[5,17,5,24],"153":[5,25,5,50],"161":[5,17,5,51],"169":[5,17,5,51],"177":[5,17,5,51],"185":[9,1,9,2],"193":[9,13,9,18],"201":[9,27,9,31],"209":[9,39,9,43],"217":[9,53,9,60],"225":[9,3,9,62],"233":[11,15,11,23],"241":[11,24,11,28],"249":[11,15,11,29],"257":[11,15,11,29],"265":[11,15,11,29],"273":[12,18,12,27],"281":[12,18,12,34],"289":[12,18,12,34],"297":[12,18,12,34],"305":[13,5,13,14],"313":[13,15,13,23],"321":[13,5,13,24],"329":[13,5,13,25],"337":[14,26,14,29],"345":[14,34,14,37],"353":[14,26,14,38],"355":[14,26,14,33],"361":[14,26,14,38],"369":[14,26,14,38],"377":[15,10,15,24],"385":[15,28,15,34],"393":[15,37,15,38],"401":[16,13,16,22],"409":[16,23,16,46],"417":[16,13,16,47],"425":[16,13,16,47],"433":[16,7,16,48],"441":[18,17,18,31],"449":[18,34,18,37],"457":[18,42,18,45],"465":[18,34,18,46],"467":[18,34,18,41],"473":[18,49,18,58],"481":[18,59,18,65],"489":[18,68,18,69],"497":[18,72,18,81],"505":[18,82,18,83],"513":[18,72,18,84],"521":[18,87,18,96],"529":[18,49,18,97],"537":[18,98,18,101],"545":[18,103,18,106],"553":[18,49,18,107],"561":[18,17,18,107],"569":[18,17,18,107],"577":[19,5,19,8],"585":[19,13,19,16],"593":[19,18,19,26],"601":[19,27,19,32],"609":[19,34,19,37],"617":[19,39,19,42],"625":[19,18,19,43],"633":[19,5,19,44],"635":[19,5,19,12],"641":[19,5,19,45],"649":[20,12,20,15],"657":[20,12,20,15],"665":[20,5,20,16],"673":[10,11,21,4],"681":[10,11,21,4],"689":[10,11,21,4],"697":[10,11,21,4],"705":[10,11,21,4],"713":[10,11,21,4],"721":[10,11,21,4],"729":[10,11,21,4],"737":[10,11,21,4],"745":[10,11,21,4],"753":[9,64,22,2],"761":[9,1,22,3],"769":[9,1,22,4],"777":[1,1,23,1],"785":[1,1,23,1],"793":[1,1,23,1],"801":[1,1,23,1],"809":[1,1,23,1],"817":[15,5,17,6],"825":[18,59,18,96],"833":[18,17,18,107],"841":[10,11,21,4],"849":[10,11,21,4],"857":[1,1,23,1],"865":[1,1,23,1],"nBranches":8,"originalCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/esnext.map.update.js","instrumentedCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/esnext.map.update_jalangi_.js","code":"'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\n\n// `Set.prototype.update` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  update: function update(key, callback /* , thunk */) {\n    var map = anObject(this);\n    var length = arguments.length;\n    aFunction(callback);\n    var isPresentInMap = map.has(key);\n    if (!isPresentInMap && length < 3) {\n      throw TypeError('Updating absent value');\n    }\n    var value = isPresentInMap ? map.get(key) : aFunction(length > 2 ? arguments[2] : undefined)(key, map);\n    map.set(key, callback(value, key, map));\n    return map;\n  }\n});\n"};
jalangiLabel1189:
    while (true) {
        try {
            J$.Se(777, '/home/blake/corejs_tests/node_modules/core-js/modules/esnext.map.update_jalangi_.js', '/home/blake/corejs_tests/node_modules/core-js/modules/esnext.map.update.js');
            J$.N(785, '$', $, 0);
            J$.N(793, 'IS_PURE', IS_PURE, 0);
            J$.N(801, 'anObject', anObject, 0);
            J$.N(809, 'aFunction', aFunction, 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var $ = J$.X1(57, J$.W(49, '$', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../internals/export', 21, false)), $, 3));
            var IS_PURE = J$.X1(97, J$.W(89, 'IS_PURE', J$.F(81, J$.R(65, 'require', require, 2), 0)(J$.T(73, '../internals/is-pure', 21, false)), IS_PURE, 3));
            var anObject = J$.X1(137, J$.W(129, 'anObject', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, '../internals/an-object', 21, false)), anObject, 3));
            var aFunction = J$.X1(177, J$.W(169, 'aFunction', J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, '../internals/a-function', 21, false)), aFunction, 3));
            J$.X1(769, J$.F(761, J$.R(185, '$', $, 1), 0)(J$.T(225, {
                target: J$.T(193, 'Map', 21, false),
                proto: J$.T(201, true, 23, false),
                real: J$.T(209, true, 23, false),
                forced: J$.R(217, 'IS_PURE', IS_PURE, 1)
            }, 11, false), J$.T(753, {
                update: J$.T(745, function update(key, callback) {
                    jalangiLabel1188:
                        while (true) {
                            try {
                                J$.Fe(673, arguments.callee, this, arguments);
                                arguments = J$.N(681, 'arguments', arguments, 4);
                                update = J$.N(689, 'update', update, 0);
                                key = J$.N(697, 'key', key, 4);
                                callback = J$.N(705, 'callback', callback, 4);
                                J$.N(713, 'map', map, 0);
                                J$.N(721, 'length', length, 0);
                                J$.N(729, 'isPresentInMap', isPresentInMap, 0);
                                J$.N(737, 'value', value, 0);
                                var map = J$.X1(265, J$.W(257, 'map', J$.F(249, J$.R(233, 'anObject', anObject, 1), 0)(J$.R(241, 'this', this, 0)), map, 1));
                                var length = J$.X1(297, J$.W(289, 'length', J$.G(281, J$.R(273, 'arguments', arguments, 2), 'length', 0), length, 1));
                                J$.X1(329, J$.F(321, J$.R(305, 'aFunction', aFunction, 1), 0)(J$.R(313, 'callback', callback, 0)));
                                var isPresentInMap = J$.X1(369, J$.W(361, 'isPresentInMap', J$.M(353, J$.R(337, 'map', map, 0), 'has', 0)(J$.R(345, 'key', key, 0)), isPresentInMap, 1));
                                if (J$.X1(817, J$.C(16, J$.C(8, J$.U(10, '!', J$.R(377, 'isPresentInMap', isPresentInMap, 0))) ? J$.B(18, '<', J$.R(385, 'length', length, 0), J$.T(393, 3, 22, false), 0) : J$._()))) {
                                    throw J$.X1(433, J$.Th(425, J$.F(417, J$.R(401, 'TypeError', TypeError, 2), 0)(J$.T(409, 'Updating absent value', 21, false))));
                                }
                                var value = J$.X1(569, J$.W(561, 'value', J$.X1(833, J$.C(32, J$.R(441, 'isPresentInMap', isPresentInMap, 0))) ? J$.M(465, J$.R(449, 'map', map, 0), 'get', 0)(J$.R(457, 'key', key, 0)) : J$.F(553, J$.F(529, J$.R(473, 'aFunction', aFunction, 1), 0)(J$.X1(825, J$.C(24, J$.B(26, '>', J$.R(481, 'length', length, 0), J$.T(489, 2, 22, false), 0))) ? J$.G(513, J$.R(497, 'arguments', arguments, 2), J$.T(505, 2, 22, false), 4) : J$.T(521, undefined, 24, false)), 0)(J$.R(537, 'key', key, 0), J$.R(545, 'map', map, 0)), value, 1));
                                J$.X1(641, J$.M(633, J$.R(577, 'map', map, 0), 'set', 0)(J$.R(585, 'key', key, 0), J$.F(625, J$.R(593, 'callback', callback, 0), 0)(J$.R(601, 'value', value, 0), J$.R(609, 'key', key, 0), J$.R(617, 'map', map, 0))));
                                return J$.X1(665, J$.Rt(657, J$.R(649, 'map', map, 0)));
                            } catch (J$e) {
                                J$.Ex(841, J$e);
                            } finally {
                                if (J$.Fr(849))
                                    continue jalangiLabel1188;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 673)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(857, J$e);
        } finally {
            if (J$.Sr(865)) {
                J$.L();
                continue jalangiLabel1189;
            } else {
                J$.L();
                break jalangiLabel1189;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
