J$.iids = {"8":[17,22,17,48],"9":[1,1,1,13],"10":[17,22,17,48],"16":[18,7,18,27],"17":[1,1,1,14],"18":[18,8,18,27],"24":[34,18,34,50],"25":[2,9,2,16],"26":[18,7,18,27],"32":[34,18,34,50],"33":[2,17,2,38],"34":[19,58,19,69],"40":[32,11,32,33],"41":[2,9,2,39],"42":[30,9,30,28],"48":[30,9,30,28],"49":[2,9,2,39],"50":[32,11,32,33],"56":[41,9,41,43],"57":[2,9,2,39],"58":[41,9,41,28],"64":[45,21,45,44],"65":[3,12,3,19],"66":[41,9,41,43],"72":[53,1,53,42],"73":[3,20,3,39],"74":[45,21,45,44],"80":[53,1,53,93],"81":[3,12,3,40],"82":[45,46,45,53],"89":[3,12,3,40],"97":[3,12,3,40],"98":[45,46,45,53],"105":[4,30,4,37],"106":[46,51,46,60],"113":[4,38,4,77],"114":[46,17,46,70],"121":[4,30,4,78],"122":[47,17,47,32],"129":[4,30,4,78],"130":[53,12,53,42],"137":[4,30,4,78],"145":[5,16,5,23],"153":[5,24,5,48],"161":[5,16,5,49],"169":[5,16,5,49],"177":[5,16,5,49],"185":[6,16,6,23],"193":[6,24,6,48],"201":[6,16,6,49],"209":[6,16,6,49],"217":[6,16,6,49],"225":[7,22,7,29],"233":[7,30,7,57],"241":[7,22,7,58],"249":[7,22,7,58],"257":[7,22,7,58],"265":[8,26,8,33],"273":[8,34,8,68],"281":[8,26,8,69],"289":[8,26,8,69],"297":[8,26,8,69],"305":[9,23,9,30],"313":[9,31,9,63],"321":[9,23,9,64],"329":[9,23,9,64],"337":[9,23,9,64],"345":[10,15,10,22],"353":[10,23,10,45],"361":[10,15,10,46],"369":[10,15,10,46],"377":[10,15,10,46],"385":[12,19,12,34],"393":[12,35,12,47],"401":[12,19,12,48],"409":[12,19,12,48],"417":[12,19,12,48],"425":[13,23,13,29],"433":[13,23,13,39],"441":[13,23,13,39],"449":[13,23,13,39],"457":[16,12,16,20],"465":[16,21,16,25],"473":[16,12,16,26],"481":[16,12,16,26],"489":[16,12,16,26],"497":[17,15,17,21],"505":[17,22,17,29],"513":[17,33,17,48],"521":[17,51,17,53],"529":[17,51,17,59],"537":[17,62,17,76],"545":[17,82,17,84],"553":[17,62,17,85],"555":[17,62,17,81],"561":[17,15,17,86],"569":[17,15,17,86],"577":[17,15,17,86],"585":[18,9,18,14],"593":[18,23,18,26],"601":[18,9,18,27],"603":[18,9,18,22],"609":[19,15,19,33],"617":[19,34,19,36],"625":[19,38,19,44],"633":[19,15,19,45],"641":[19,47,19,49],"649":[19,47,19,56],"657":[19,58,19,63],"665":[19,66,19,69],"673":[19,10,19,70],"681":[19,10,19,70],"689":[19,5,19,71],"697":[21,10,21,16],"705":[21,17,21,23],"713":[21,10,21,24],"721":[21,33,21,35],"729":[21,37,21,49],"737":[21,10,21,50],"739":[21,10,21,32],"745":[21,10,21,50],"753":[21,3,21,51],"761":[15,19,22,2],"769":[15,19,22,2],"777":[15,19,22,2],"785":[15,19,22,2],"793":[15,19,22,2],"801":[15,19,22,2],"809":[15,19,22,2],"817":[15,19,22,2],"825":[15,19,22,2],"833":[26,1,26,2],"841":[26,13,26,21],"849":[26,30,26,34],"857":[26,3,26,36],"865":[28,13,28,35],"873":[28,36,28,40],"881":[28,13,28,41],"889":[28,13,28,41],"897":[28,13,28,41],"905":[30,9,30,20],"913":[30,24,30,28],"921":[31,18,31,29],"929":[31,30,31,41],"937":[31,18,31,42],"945":[31,18,31,42],"953":[31,7,31,43],"961":[32,11,32,19],"969":[32,24,32,33],"977":[33,16,33,24],"985":[33,30,33,41],"993":[33,43,33,44],"1001":[33,46,33,58],"1009":[33,16,33,59],"1011":[33,16,33,29],"1017":[33,16,33,59],"1025":[33,9,33,60],"1033":[34,18,34,25],"1041":[34,29,34,37],"1049":[34,38,34,49],"1057":[34,29,34,50],"1065":[35,16,35,27],"1073":[35,33,35,44],"1081":[35,46,35,47],"1089":[35,49,35,61],"1097":[35,16,35,62],"1099":[35,16,35,32],"1105":[35,16,35,62],"1113":[35,9,35,63],"1121":[38,14,38,20],"1129":[38,21,38,22],"1137":[38,14,38,23],"1145":[38,14,38,23],"1153":[38,5,38,24],"1161":[39,20,39,26],"1169":[39,27,39,38],"1177":[39,20,39,39],"1185":[39,20,39,39],"1193":[39,5,39,40],"1201":[40,16,40,22],"1209":[40,29,40,41],"1217":[40,16,40,42],"1219":[40,16,40,28],"1225":[40,16,40,42],"1233":[40,5,40,43],"1241":[41,16,41,28],"1249":[41,33,41,43],"1257":[42,14,42,22],"1265":[42,28,42,34],"1273":[42,35,42,47],"1281":[42,28,42,48],"1289":[42,14,42,49],"1291":[42,14,42,27],"1297":[42,14,42,49],"1305":[42,7,42,50],"1313":[44,14,44,22],"1321":[44,23,44,24],"1329":[44,14,44,25],"1337":[44,14,44,25],"1345":[44,5,44,26],"1353":[45,18,45,19],"1361":[45,18,45,19],"1369":[45,21,45,26],"1377":[45,29,45,37],"1385":[45,29,45,44],"1401":[45,46,45,51],"1409":[45,46,45,53],"1425":[46,17,46,23],"1433":[46,24,46,36],"1441":[46,37,46,49],"1449":[46,51,46,56],"1457":[46,59,46,60],"1465":[46,62,46,68],"1473":[46,24,46,69],"1481":[46,17,46,70],"1489":[46,7,46,13],"1497":[46,7,46,70],"1505":[46,7,46,71],"1513":[47,17,47,25],"1521":[47,26,47,31],"1529":[47,17,47,32],"1537":[47,7,47,13],"1545":[47,7,47,32],"1553":[47,7,47,33],"1561":[49,12,49,18],"1569":[49,12,49,18],"1577":[49,5,49,19],"1585":[27,15,50,4],"1593":[27,15,50,4],"1601":[27,15,50,4],"1609":[27,15,50,4],"1617":[27,15,50,4],"1625":[27,15,50,4],"1633":[27,15,50,4],"1641":[27,15,50,4],"1649":[27,15,50,4],"1657":[27,15,50,4],"1665":[27,15,50,4],"1673":[27,15,50,4],"1681":[27,15,50,4],"1689":[26,38,51,2],"1697":[26,1,51,3],"1705":[26,1,51,4],"1713":[53,1,53,8],"1721":[53,12,53,23],"1729":[53,27,53,42],"1737":[53,46,53,50],"1745":[53,51,53,66],"1753":[53,68,53,79],"1761":[53,81,53,92],"1769":[53,46,53,93],"1777":[53,1,53,94],"1785":[1,1,54,1],"1793":[1,1,54,1],"1801":[1,1,54,1],"1809":[1,1,54,1],"1817":[1,1,54,1],"1825":[1,1,54,1],"1833":[1,1,54,1],"1841":[1,1,54,1],"1849":[1,1,54,1],"1857":[1,1,54,1],"1865":[1,1,54,1],"1873":[1,1,54,1],"1881":[1,1,54,1],"1889":[17,22,17,85],"1897":[18,3,20,4],"1905":[15,19,22,2],"1913":[15,19,22,2],"1921":[34,14,36,8],"1929":[32,7,36,8],"1937":[30,5,37,6],"1945":[41,5,43,6],"1953":[45,5,48,6],"1961":[45,5,48,6],"1969":[45,5,48,6],"1977":[27,15,50,4],"1985":[27,15,50,4],"1993":[1,1,54,1],"2001":[1,1,54,1],"nBranches":20,"originalCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/esnext.string.replace-all.js","instrumentedCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/esnext.string.replace-all_jalangi_.js","code":"'use strict';\nvar $ = require('../internals/export');\nvar hide = require('../internals/hide');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar anObject = require('../internals/an-object');\nvar isRegExp = require('../internals/is-regexp');\nvar getRegExpFlags = require('../internals/regexp-flags');\nvar speciesConstructor = require('../internals/species-constructor');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar REPLACE_ALL = wellKnownSymbol('replaceAll');\nvar RegExpPrototype = RegExp.prototype;\n\nvar $replaceAll = function (string, replaceValue) {\n  var rx = anObject(this);\n  var flags = String('flags' in RegExpPrototype ? rx.flags : getRegExpFlags.call(rx));\n  if (!~flags.indexOf('g')) {\n    rx = new (speciesConstructor(rx, RegExp))(rx.source, flags + 'g');\n  }\n  return String(string).replace(rx, replaceValue);\n};\n\n// `String.prototype.replaceAll` method\n// https://github.com/tc39/proposal-string-replace-all\n$({ target: 'String', proto: true }, {\n  replaceAll: function replaceAll(searchValue, replaceValue) {\n    var O = requireObjectCoercible(this);\n    var replacer, string, searchString, template, result, index;\n    if (searchValue != null) {\n      replacer = searchValue[REPLACE_ALL];\n      if (replacer !== undefined) {\n        return replacer.call(searchValue, O, replaceValue);\n      } else if (IS_PURE && isRegExp(searchValue)) {\n        return $replaceAll.call(searchValue, O, replaceValue);\n      }\n    }\n    string = String(O);\n    searchString = String(searchValue);\n    template = string.split(searchString);\n    if (typeof replaceValue !== 'function') {\n      return template.join(String(replaceValue));\n    }\n    result = template[0];\n    for (index = 1; index < template.length; index++) {\n      result += String(replaceValue(searchString, index - 1, string));\n      result += template[index];\n    }\n    return result;\n  }\n});\n\nIS_PURE || REPLACE_ALL in RegExpPrototype || hide(RegExpPrototype, REPLACE_ALL, $replaceAll);\n"};
jalangiLabel1345:
    while (true) {
        try {
            J$.Se(1785, '/home/blake/corejs_tests/node_modules/core-js/modules/esnext.string.replace-all_jalangi_.js', '/home/blake/corejs_tests/node_modules/core-js/modules/esnext.string.replace-all.js');
            J$.N(1793, '$', $, 0);
            J$.N(1801, 'hide', hide, 0);
            J$.N(1809, 'requireObjectCoercible', requireObjectCoercible, 0);
            J$.N(1817, 'anObject', anObject, 0);
            J$.N(1825, 'isRegExp', isRegExp, 0);
            J$.N(1833, 'getRegExpFlags', getRegExpFlags, 0);
            J$.N(1841, 'speciesConstructor', speciesConstructor, 0);
            J$.N(1849, 'wellKnownSymbol', wellKnownSymbol, 0);
            J$.N(1857, 'IS_PURE', IS_PURE, 0);
            J$.N(1865, 'REPLACE_ALL', REPLACE_ALL, 0);
            J$.N(1873, 'RegExpPrototype', RegExpPrototype, 0);
            J$.N(1881, '$replaceAll', $replaceAll, 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var $ = J$.X1(57, J$.W(49, '$', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../internals/export', 21, false)), $, 3));
            var hide = J$.X1(97, J$.W(89, 'hide', J$.F(81, J$.R(65, 'require', require, 2), 0)(J$.T(73, '../internals/hide', 21, false)), hide, 3));
            var requireObjectCoercible = J$.X1(137, J$.W(129, 'requireObjectCoercible', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, '../internals/require-object-coercible', 21, false)), requireObjectCoercible, 3));
            var anObject = J$.X1(177, J$.W(169, 'anObject', J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, '../internals/an-object', 21, false)), anObject, 3));
            var isRegExp = J$.X1(217, J$.W(209, 'isRegExp', J$.F(201, J$.R(185, 'require', require, 2), 0)(J$.T(193, '../internals/is-regexp', 21, false)), isRegExp, 3));
            var getRegExpFlags = J$.X1(257, J$.W(249, 'getRegExpFlags', J$.F(241, J$.R(225, 'require', require, 2), 0)(J$.T(233, '../internals/regexp-flags', 21, false)), getRegExpFlags, 3));
            var speciesConstructor = J$.X1(297, J$.W(289, 'speciesConstructor', J$.F(281, J$.R(265, 'require', require, 2), 0)(J$.T(273, '../internals/species-constructor', 21, false)), speciesConstructor, 3));
            var wellKnownSymbol = J$.X1(337, J$.W(329, 'wellKnownSymbol', J$.F(321, J$.R(305, 'require', require, 2), 0)(J$.T(313, '../internals/well-known-symbol', 21, false)), wellKnownSymbol, 3));
            var IS_PURE = J$.X1(377, J$.W(369, 'IS_PURE', J$.F(361, J$.R(345, 'require', require, 2), 0)(J$.T(353, '../internals/is-pure', 21, false)), IS_PURE, 3));
            var REPLACE_ALL = J$.X1(417, J$.W(409, 'REPLACE_ALL', J$.F(401, J$.R(385, 'wellKnownSymbol', wellKnownSymbol, 1), 0)(J$.T(393, 'replaceAll', 21, false)), REPLACE_ALL, 3));
            var RegExpPrototype = J$.X1(449, J$.W(441, 'RegExpPrototype', J$.G(433, J$.R(425, 'RegExp', RegExp, 2), 'prototype', 0), RegExpPrototype, 3));
            var $replaceAll = J$.X1(825, J$.W(817, '$replaceAll', J$.T(809, function (string, replaceValue) {
                jalangiLabel1343:
                    while (true) {
                        try {
                            J$.Fe(761, arguments.callee, this, arguments);
                            arguments = J$.N(769, 'arguments', arguments, 4);
                            string = J$.N(777, 'string', string, 4);
                            replaceValue = J$.N(785, 'replaceValue', replaceValue, 4);
                            J$.N(793, 'rx', rx, 0);
                            J$.N(801, 'flags', flags, 0);
                            var rx = J$.X1(489, J$.W(481, 'rx', J$.F(473, J$.R(457, 'anObject', anObject, 1), 0)(J$.R(465, 'this', this, 0)), rx, 1));
                            var flags = J$.X1(577, J$.W(569, 'flags', J$.F(561, J$.R(497, 'String', String, 2), 0)(J$.X1(1889, J$.C(8, J$.B(10, 'in', J$.T(505, 'flags', 21, false), J$.R(513, 'RegExpPrototype', RegExpPrototype, 1), 0))) ? J$.G(529, J$.R(521, 'rx', rx, 0), 'flags', 0) : J$.M(553, J$.R(537, 'getRegExpFlags', getRegExpFlags, 1), 'call', 0)(J$.R(545, 'rx', rx, 0))), flags, 1));
                            if (J$.X1(1897, J$.C(16, J$.U(26, '!', J$.U(18, '~', J$.M(601, J$.R(585, 'flags', flags, 0), 'indexOf', 0)(J$.T(593, 'g', 21, false))))))) {
                                J$.X1(689, rx = J$.W(681, 'rx', J$.F(673, J$.F(633, J$.R(609, 'speciesConstructor', speciesConstructor, 1), 0)(J$.R(617, 'rx', rx, 0), J$.R(625, 'RegExp', RegExp, 2)), 1)(J$.G(649, J$.R(641, 'rx', rx, 0), 'source', 0), J$.B(34, '+', J$.R(657, 'flags', flags, 0), J$.T(665, 'g', 21, false), 0)), rx, 0));
                            }
                            return J$.X1(753, J$.Rt(745, J$.M(737, J$.F(713, J$.R(697, 'String', String, 2), 0)(J$.R(705, 'string', string, 0)), 'replace', 0)(J$.R(721, 'rx', rx, 0), J$.R(729, 'replaceValue', replaceValue, 0))));
                        } catch (J$e) {
                            J$.Ex(1905, J$e);
                        } finally {
                            if (J$.Fr(1913))
                                continue jalangiLabel1343;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 761), $replaceAll, 3));
            J$.X1(1705, J$.F(1697, J$.R(833, '$', $, 1), 0)(J$.T(857, {
                target: J$.T(841, 'String', 21, false),
                proto: J$.T(849, true, 23, false)
            }, 11, false), J$.T(1689, {
                replaceAll: J$.T(1681, function replaceAll(searchValue, replaceValue) {
                    jalangiLabel1344:
                        while (true) {
                            try {
                                J$.Fe(1585, arguments.callee, this, arguments);
                                arguments = J$.N(1593, 'arguments', arguments, 4);
                                replaceAll = J$.N(1601, 'replaceAll', replaceAll, 0);
                                searchValue = J$.N(1609, 'searchValue', searchValue, 4);
                                replaceValue = J$.N(1617, 'replaceValue', replaceValue, 4);
                                J$.N(1625, 'O', O, 0);
                                J$.N(1633, 'replacer', replacer, 0);
                                J$.N(1641, 'string', string, 0);
                                J$.N(1649, 'searchString', searchString, 0);
                                J$.N(1657, 'template', template, 0);
                                J$.N(1665, 'result', result, 0);
                                J$.N(1673, 'index', index, 0);
                                var O = J$.X1(897, J$.W(889, 'O', J$.F(881, J$.R(865, 'requireObjectCoercible', requireObjectCoercible, 1), 0)(J$.R(873, 'this', this, 0)), O, 1));
                                var replacer, string, searchString, template, result, index;
                                if (J$.X1(1937, J$.C(48, J$.B(42, '!=', J$.R(905, 'searchValue', searchValue, 0), J$.T(913, null, 25, false), 0)))) {
                                    J$.X1(953, replacer = J$.W(945, 'replacer', J$.G(937, J$.R(921, 'searchValue', searchValue, 0), J$.R(929, 'REPLACE_ALL', REPLACE_ALL, 1), 4), replacer, 0));
                                    if (J$.X1(1929, J$.C(40, J$.B(50, '!==', J$.R(961, 'replacer', replacer, 0), J$.T(969, undefined, 24, false), 0)))) {
                                        return J$.X1(1025, J$.Rt(1017, J$.M(1009, J$.R(977, 'replacer', replacer, 0), 'call', 0)(J$.R(985, 'searchValue', searchValue, 0), J$.R(993, 'O', O, 0), J$.R(1001, 'replaceValue', replaceValue, 0))));
                                    } else if (J$.X1(1921, J$.C(32, J$.C(24, J$.R(1033, 'IS_PURE', IS_PURE, 1)) ? J$.F(1057, J$.R(1041, 'isRegExp', isRegExp, 1), 0)(J$.R(1049, 'searchValue', searchValue, 0)) : J$._()))) {
                                        return J$.X1(1113, J$.Rt(1105, J$.M(1097, J$.R(1065, '$replaceAll', $replaceAll, 1), 'call', 0)(J$.R(1073, 'searchValue', searchValue, 0), J$.R(1081, 'O', O, 0), J$.R(1089, 'replaceValue', replaceValue, 0))));
                                    }
                                }
                                J$.X1(1153, string = J$.W(1145, 'string', J$.F(1137, J$.R(1121, 'String', String, 2), 0)(J$.R(1129, 'O', O, 0)), string, 0));
                                J$.X1(1193, searchString = J$.W(1185, 'searchString', J$.F(1177, J$.R(1161, 'String', String, 2), 0)(J$.R(1169, 'searchValue', searchValue, 0)), searchString, 0));
                                J$.X1(1233, template = J$.W(1225, 'template', J$.M(1217, J$.R(1201, 'string', string, 0), 'split', 0)(J$.R(1209, 'searchString', searchString, 0)), template, 0));
                                if (J$.X1(1945, J$.C(56, J$.B(66, '!==', J$.U(58, 'typeof', J$.R(1241, 'replaceValue', replaceValue, 0)), J$.T(1249, 'function', 21, false), 0)))) {
                                    return J$.X1(1305, J$.Rt(1297, J$.M(1289, J$.R(1257, 'template', template, 0), 'join', 0)(J$.F(1281, J$.R(1265, 'String', String, 2), 0)(J$.R(1273, 'replaceValue', replaceValue, 0)))));
                                }
                                J$.X1(1345, result = J$.W(1337, 'result', J$.G(1329, J$.R(1313, 'template', template, 0), J$.T(1321, 0, 22, false), 4), result, 0));
                                for (J$.X1(1961, index = J$.W(1361, 'index', J$.T(1353, 1, 22, false), index, 0)); J$.X1(1953, J$.C(64, J$.B(74, '<', J$.R(1369, 'index', index, 0), J$.G(1385, J$.R(1377, 'template', template, 0), 'length', 0), 0))); J$.X1(1969, J$.B(98, '-', index = J$.W(1409, 'index', J$.B(90, '+', J$.U(82, '+', J$.R(1401, 'index', index, 0)), J$.T(1393, 1, 22, false), 0), index, 0), J$.T(1417, 1, 22, false), 0))) {
                                    J$.X1(1505, result = J$.W(1497, 'result', J$.B(114, '+', J$.R(1489, 'result', result, 0), J$.F(1481, J$.R(1425, 'String', String, 2), 0)(J$.F(1473, J$.R(1433, 'replaceValue', replaceValue, 0), 0)(J$.R(1441, 'searchString', searchString, 0), J$.B(106, '-', J$.R(1449, 'index', index, 0), J$.T(1457, 1, 22, false), 0), J$.R(1465, 'string', string, 0))), 0), result, 0));
                                    J$.X1(1553, result = J$.W(1545, 'result', J$.B(122, '+', J$.R(1537, 'result', result, 0), J$.G(1529, J$.R(1513, 'template', template, 0), J$.R(1521, 'index', index, 0), 4), 0), result, 0));
                                }
                                return J$.X1(1577, J$.Rt(1569, J$.R(1561, 'result', result, 0)));
                            } catch (J$e) {
                                J$.Ex(1977, J$e);
                            } finally {
                                if (J$.Fr(1985))
                                    continue jalangiLabel1344;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 1585)
            }, 11, false)));
            J$.X1(1777, J$.C(80, J$.C(72, J$.R(1713, 'IS_PURE', IS_PURE, 1)) ? J$._() : J$.B(130, 'in', J$.R(1721, 'REPLACE_ALL', REPLACE_ALL, 1), J$.R(1729, 'RegExpPrototype', RegExpPrototype, 1), 0)) ? J$._() : J$.F(1769, J$.R(1737, 'hide', hide, 1), 0)(J$.R(1745, 'RegExpPrototype', RegExpPrototype, 1), J$.R(1753, 'REPLACE_ALL', REPLACE_ALL, 1), J$.R(1761, '$replaceAll', $replaceAll, 1)));
        } catch (J$e) {
            J$.Ex(1993, J$e);
        } finally {
            if (J$.Sr(2001)) {
                J$.L();
                continue jalangiLabel1345;
            } else {
                J$.L();
                break jalangiLabel1345;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
