J$.iids = {"8":[17,9,17,38],"9":[1,1,1,13],"10":[17,9,17,24],"16":[22,11,22,51],"17":[1,1,1,14],"18":[17,9,17,38],"25":[2,9,2,16],"26":[22,11,22,51],"33":[2,17,2,38],"34":[21,12,23,39],"41":[2,9,2,39],"49":[2,9,2,39],"57":[2,9,2,39],"65":[3,15,3,22],"73":[3,23,3,45],"81":[3,15,3,46],"89":[3,15,3,46],"97":[3,15,3,46],"105":[4,18,4,25],"113":[4,26,4,53],"121":[4,18,4,54],"129":[4,18,4,54],"137":[4,18,4,54],"145":[5,16,5,23],"153":[5,24,5,48],"161":[5,16,5,49],"169":[5,16,5,49],"177":[5,16,5,49],"185":[6,17,6,24],"193":[6,25,6,50],"201":[6,17,6,51],"209":[6,17,6,51],"217":[6,17,6,51],"225":[7,19,7,26],"233":[7,27,7,54],"241":[7,19,7,55],"249":[7,19,7,55],"257":[7,19,7,55],"265":[8,15,8,22],"273":[8,23,8,45],"281":[8,15,8,46],"289":[8,15,8,46],"297":[8,15,8,46],"305":[12,1,12,2],"313":[12,13,12,18],"321":[12,27,12,31],"329":[12,39,12,43],"337":[12,53,12,60],"345":[12,3,12,62],"353":[14,20,14,31],"361":[14,32,14,36],"369":[14,20,14,37],"377":[14,20,14,37],"385":[14,20,14,37],"393":[15,20,15,28],"401":[15,29,15,37],"409":[15,20,15,38],"417":[15,20,15,38],"425":[15,20,15,38],"433":[16,20,16,28],"441":[16,20,16,32],"449":[16,20,16,32],"457":[16,20,16,32],"465":[17,16,17,24],"473":[17,28,17,38],"481":[18,23,18,33],"489":[18,34,18,39],"497":[18,23,18,40],"505":[18,42,18,50],"513":[18,18,18,51],"521":[18,18,18,51],"529":[18,7,18,52],"537":[19,18,19,27],"545":[19,28,19,36],"553":[19,28,19,40],"561":[19,18,19,41],"569":[19,18,19,41],"577":[19,7,19,42],"585":[21,13,21,20],"593":[21,21,21,29],"601":[22,11,22,19],"609":[22,25,22,33],"617":[22,35,22,40],"625":[22,11,22,41],"627":[22,11,22,24],"633":[22,46,22,51],"641":[22,60,22,67],"649":[22,60,22,74],"651":[22,60,22,72],"657":[22,60,22,74],"665":[22,53,22,75],"673":[21,31,23,6],"681":[21,31,23,6],"689":[21,31,23,6],"697":[21,31,23,6],"705":[23,8,23,17],"713":[23,19,23,24],"721":[23,26,23,30],"729":[21,13,23,31],"737":[21,13,23,39],"745":[21,12,23,39],"753":[21,5,23,40],"761":[13,15,24,4],"769":[13,15,24,4],"777":[13,15,24,4],"785":[13,15,24,4],"793":[13,15,24,4],"801":[13,15,24,4],"809":[13,15,24,4],"817":[13,15,24,4],"825":[12,64,25,2],"833":[12,1,25,3],"841":[12,1,25,4],"849":[1,1,26,1],"857":[1,1,26,1],"865":[1,1,26,1],"873":[1,1,26,1],"881":[1,1,26,1],"889":[1,1,26,1],"897":[1,1,26,1],"905":[1,1,26,1],"913":[17,5,20,6],"921":[22,7,22,75],"929":[21,31,23,6],"937":[21,31,23,6],"945":[13,15,24,4],"953":[13,15,24,4],"961":[1,1,26,1],"969":[1,1,26,1],"nBranches":4,"originalCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/esnext.set.is-subset-of.js","instrumentedCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/esnext.set.is-subset-of_jalangi_.js","code":"'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar getBuiltIn = require('../internals/get-built-in');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar getIterator = require('../internals/get-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.isSubsetOf` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSubsetOf\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  isSubsetOf: function isSubsetOf(iterable) {\n    var iterator = getIterator(this);\n    var otherSet = anObject(iterable);\n    var hasCheck = otherSet.has;\n    if (typeof hasCheck != 'function') {\n      otherSet = new (getBuiltIn('Set'))(iterable);\n      hasCheck = aFunction(otherSet.has);\n    }\n    return !iterate(iterator, function (value) {\n      if (hasCheck.call(otherSet, value) === false) return iterate.stop();\n    }, undefined, false, true).stopped;\n  }\n});\n"};
jalangiLabel1333:
    while (true) {
        try {
            J$.Se(849, '/home/blake/corejs_tests/node_modules/core-js/modules/esnext.set.is-subset-of_jalangi_.js', '/home/blake/corejs_tests/node_modules/core-js/modules/esnext.set.is-subset-of.js');
            J$.N(857, '$', $, 0);
            J$.N(865, 'IS_PURE', IS_PURE, 0);
            J$.N(873, 'getBuiltIn', getBuiltIn, 0);
            J$.N(881, 'anObject', anObject, 0);
            J$.N(889, 'aFunction', aFunction, 0);
            J$.N(897, 'getIterator', getIterator, 0);
            J$.N(905, 'iterate', iterate, 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var $ = J$.X1(57, J$.W(49, '$', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../internals/export', 21, false)), $, 3));
            var IS_PURE = J$.X1(97, J$.W(89, 'IS_PURE', J$.F(81, J$.R(65, 'require', require, 2), 0)(J$.T(73, '../internals/is-pure', 21, false)), IS_PURE, 3));
            var getBuiltIn = J$.X1(137, J$.W(129, 'getBuiltIn', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, '../internals/get-built-in', 21, false)), getBuiltIn, 3));
            var anObject = J$.X1(177, J$.W(169, 'anObject', J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, '../internals/an-object', 21, false)), anObject, 3));
            var aFunction = J$.X1(217, J$.W(209, 'aFunction', J$.F(201, J$.R(185, 'require', require, 2), 0)(J$.T(193, '../internals/a-function', 21, false)), aFunction, 3));
            var getIterator = J$.X1(257, J$.W(249, 'getIterator', J$.F(241, J$.R(225, 'require', require, 2), 0)(J$.T(233, '../internals/get-iterator', 21, false)), getIterator, 3));
            var iterate = J$.X1(297, J$.W(289, 'iterate', J$.F(281, J$.R(265, 'require', require, 2), 0)(J$.T(273, '../internals/iterate', 21, false)), iterate, 3));
            J$.X1(841, J$.F(833, J$.R(305, '$', $, 1), 0)(J$.T(345, {
                target: J$.T(313, 'Set', 21, false),
                proto: J$.T(321, true, 23, false),
                real: J$.T(329, true, 23, false),
                forced: J$.R(337, 'IS_PURE', IS_PURE, 1)
            }, 11, false), J$.T(825, {
                isSubsetOf: J$.T(817, function isSubsetOf(iterable) {
                    jalangiLabel1332:
                        while (true) {
                            try {
                                J$.Fe(761, arguments.callee, this, arguments);
                                arguments = J$.N(769, 'arguments', arguments, 4);
                                isSubsetOf = J$.N(777, 'isSubsetOf', isSubsetOf, 0);
                                iterable = J$.N(785, 'iterable', iterable, 4);
                                J$.N(793, 'iterator', iterator, 0);
                                J$.N(801, 'otherSet', otherSet, 0);
                                J$.N(809, 'hasCheck', hasCheck, 0);
                                var iterator = J$.X1(385, J$.W(377, 'iterator', J$.F(369, J$.R(353, 'getIterator', getIterator, 1), 0)(J$.R(361, 'this', this, 0)), iterator, 1));
                                var otherSet = J$.X1(425, J$.W(417, 'otherSet', J$.F(409, J$.R(393, 'anObject', anObject, 1), 0)(J$.R(401, 'iterable', iterable, 0)), otherSet, 1));
                                var hasCheck = J$.X1(457, J$.W(449, 'hasCheck', J$.G(441, J$.R(433, 'otherSet', otherSet, 0), 'has', 0), hasCheck, 1));
                                if (J$.X1(913, J$.C(8, J$.B(18, '!=', J$.U(10, 'typeof', J$.R(465, 'hasCheck', hasCheck, 0)), J$.T(473, 'function', 21, false), 0)))) {
                                    J$.X1(529, otherSet = J$.W(521, 'otherSet', J$.F(513, J$.F(497, J$.R(481, 'getBuiltIn', getBuiltIn, 1), 0)(J$.T(489, 'Set', 21, false)), 1)(J$.R(505, 'iterable', iterable, 0)), otherSet, 0));
                                    J$.X1(577, hasCheck = J$.W(569, 'hasCheck', J$.F(561, J$.R(537, 'aFunction', aFunction, 1), 0)(J$.G(553, J$.R(545, 'otherSet', otherSet, 0), 'has', 0)), hasCheck, 0));
                                }
                                return J$.X1(753, J$.Rt(745, J$.U(34, '!', J$.G(737, J$.F(729, J$.R(585, 'iterate', iterate, 1), 0)(J$.R(593, 'iterator', iterator, 0), J$.T(697, function (value) {
                                    jalangiLabel1331:
                                        while (true) {
                                            try {
                                                J$.Fe(673, arguments.callee, this, arguments);
                                                arguments = J$.N(681, 'arguments', arguments, 4);
                                                value = J$.N(689, 'value', value, 4);
                                                if (J$.X1(921, J$.C(16, J$.B(26, '===', J$.M(625, J$.R(601, 'hasCheck', hasCheck, 0), 'call', 0)(J$.R(609, 'otherSet', otherSet, 0), J$.R(617, 'value', value, 0)), J$.T(633, false, 23, false), 0))))
                                                    return J$.X1(665, J$.Rt(657, J$.M(649, J$.R(641, 'iterate', iterate, 1), 'stop', 0)()));
                                            } catch (J$e) {
                                                J$.Ex(929, J$e);
                                            } finally {
                                                if (J$.Fr(937))
                                                    continue jalangiLabel1331;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 673), J$.T(705, undefined, 24, false), J$.T(713, false, 23, false), J$.T(721, true, 23, false)), 'stopped', 0))));
                            } catch (J$e) {
                                J$.Ex(945, J$e);
                            } finally {
                                if (J$.Fr(953))
                                    continue jalangiLabel1332;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 761)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(961, J$e);
        } finally {
            if (J$.Sr(969)) {
                J$.L();
                continue jalangiLabel1333;
            } else {
                J$.L();
                break jalangiLabel1333;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
