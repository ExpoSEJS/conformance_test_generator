{"9":[1,1,1,13],"17":[1,1,1,14],"25":[2,9,2,16],"33":[2,17,2,38],"41":[2,9,2,39],"49":[2,9,2,39],"57":[2,9,2,39],"65":[3,15,3,22],"73":[3,23,3,45],"81":[3,15,3,46],"89":[3,15,3,46],"97":[3,15,3,46],"105":[4,18,4,25],"113":[4,26,4,53],"121":[4,18,4,54],"129":[4,18,4,54],"137":[4,18,4,54],"145":[5,16,5,23],"153":[5,24,5,48],"161":[5,16,5,49],"169":[5,16,5,49],"177":[5,16,5,49],"185":[6,17,6,24],"193":[6,25,6,50],"201":[6,17,6,51],"209":[6,17,6,51],"217":[6,17,6,51],"225":[7,26,7,33],"233":[7,34,7,68],"241":[7,26,7,69],"249":[7,26,7,69],"257":[7,26,7,69],"265":[8,15,8,22],"273":[8,23,8,45],"281":[8,15,8,46],"289":[8,15,8,46],"297":[8,15,8,46],"305":[12,1,12,2],"313":[12,13,12,18],"321":[12,27,12,31],"329":[12,39,12,43],"337":[12,53,12,60],"345":[12,3,12,62],"353":[14,15,14,23],"361":[14,24,14,28],"369":[14,15,14,29],"377":[14,15,14,29],"385":[14,15,14,29],"393":[15,23,15,41],"401":[15,42,15,45],"409":[15,47,15,57],"417":[15,58,15,63],"425":[15,47,15,64],"433":[15,23,15,65],"441":[15,67,15,70],"449":[15,18,15,71],"457":[15,18,15,71],"465":[15,18,15,71],"473":[16,5,16,12],"481":[16,13,16,21],"489":[16,23,16,32],"497":[16,33,16,39],"505":[16,33,16,43],"513":[16,23,16,44],"521":[16,46,16,52],"529":[16,5,16,53],"537":[16,5,16,54],"545":[17,12,17,18],"553":[17,12,17,18],"561":[17,5,17,19],"569":[13,10,18,4],"577":[13,10,18,4],"585":[13,10,18,4],"593":[13,10,18,4],"601":[13,10,18,4],"609":[13,10,18,4],"617":[13,10,18,4],"625":[12,64,19,2],"633":[12,1,19,3],"641":[12,1,19,4],"649":[1,1,20,1],"657":[1,1,20,1],"665":[1,1,20,1],"673":[1,1,20,1],"681":[1,1,20,1],"689":[1,1,20,1],"697":[1,1,20,1],"705":[1,1,20,1],"713":[13,10,18,4],"721":[13,10,18,4],"729":[1,1,20,1],"737":[1,1,20,1],"nBranches":0,"originalCodeFileName":"/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/modules/esnext.set.union.js","instrumentedCodeFileName":"/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/modules/esnext.set.union_jalangi_.js","code":"'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar getBuiltIn = require('../internals/get-built-in');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar speciesConstructor = require('../internals/species-constructor');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.union` method\n// https://github.com/tc39/proposal-set-methods\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  union: function union(iterable) {\n    var set = anObject(this);\n    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))(set);\n    iterate(iterable, aFunction(newSet.add), newSet);\n    return newSet;\n  }\n});\n"}