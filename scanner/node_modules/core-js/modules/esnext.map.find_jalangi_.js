J$.iids = {"8":[15,42,15,62],"9":[1,1,1,13],"10":[15,42,15,62],"16":[17,11,17,41],"17":[1,1,1,14],"25":[2,9,2,16],"33":[2,17,2,38],"41":[2,9,2,39],"49":[2,9,2,39],"57":[2,9,2,39],"65":[3,15,3,22],"73":[3,23,3,45],"81":[3,15,3,46],"89":[3,15,3,46],"97":[3,15,3,46],"105":[4,16,4,23],"113":[4,24,4,48],"121":[4,16,4,49],"129":[4,16,4,49],"137":[4,16,4,49],"145":[5,12,5,19],"153":[5,20,5,47],"161":[5,12,5,48],"169":[5,12,5,48],"177":[5,12,5,48],"185":[6,22,6,29],"193":[6,30,6,61],"201":[6,22,6,62],"209":[6,22,6,62],"217":[6,22,6,62],"225":[7,15,7,22],"233":[7,23,7,45],"241":[7,15,7,46],"249":[7,15,7,46],"257":[7,15,7,46],"265":[11,1,11,2],"273":[11,13,11,18],"281":[11,27,11,31],"289":[11,39,11,43],"297":[11,53,11,60],"305":[11,3,11,62],"313":[13,15,13,23],"321":[13,24,13,28],"329":[13,15,13,29],"337":[13,15,13,29],"345":[13,15,13,29],"353":[14,20,14,34],"361":[14,35,14,38],"369":[14,20,14,39],"377":[14,20,14,39],"385":[14,20,14,39],"393":[15,25,15,29],"401":[15,30,15,40],"409":[15,42,15,51],"417":[15,42,15,58],"425":[15,61,15,62],"433":[15,65,15,74],"441":[15,75,15,76],"449":[15,65,15,77],"457":[15,80,15,89],"465":[15,91,15,92],"473":[15,25,15,93],"481":[15,25,15,93],"489":[15,25,15,93],"497":[16,12,16,19],"505":[16,20,16,28],"513":[17,11,17,24],"521":[17,25,17,30],"529":[17,32,17,35],"537":[17,37,17,40],"545":[17,11,17,41],"553":[17,50,17,57],"561":[17,63,17,68],"569":[17,50,17,69],"571":[17,50,17,62],"577":[17,50,17,69],"585":[17,43,17,70],"593":[16,30,18,6],"601":[16,30,18,6],"609":[16,30,18,6],"617":[16,30,18,6],"625":[16,30,18,6],"633":[18,8,18,17],"641":[18,19,18,23],"649":[18,25,18,29],"657":[16,12,18,30],"665":[16,12,18,37],"673":[16,12,18,37],"681":[16,5,18,38],"689":[12,9,19,4],"697":[12,9,19,4],"705":[12,9,19,4],"713":[12,9,19,4],"721":[12,9,19,4],"729":[12,9,19,4],"737":[12,9,19,4],"745":[12,9,19,4],"753":[11,64,20,2],"761":[11,1,20,3],"769":[11,1,20,4],"777":[1,1,21,1],"785":[1,1,21,1],"793":[1,1,21,1],"801":[1,1,21,1],"809":[1,1,21,1],"817":[1,1,21,1],"825":[1,1,21,1],"833":[15,42,15,89],"841":[17,7,17,70],"849":[16,30,18,6],"857":[16,30,18,6],"865":[12,9,19,4],"873":[12,9,19,4],"881":[1,1,21,1],"889":[1,1,21,1],"nBranches":4,"originalCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/esnext.map.find.js","instrumentedCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/esnext.map.find_jalangi_.js","code":"'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar bind = require('../internals/bind-context');\nvar getMapIterator = require('../internals/get-map-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Map.prototype.find` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  find: function find(callbackfn /* , thisArg */) {\n    var map = anObject(this);\n    var iterator = getMapIterator(map);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n    return iterate(iterator, function (key, value) {\n      if (boundFunction(value, key, map)) return iterate.stop(value);\n    }, undefined, true, true).result;\n  }\n});\n"};
jalangiLabel1162:
    while (true) {
        try {
            J$.Se(777, '/home/blake/corejs_tests/node_modules/core-js/modules/esnext.map.find_jalangi_.js', '/home/blake/corejs_tests/node_modules/core-js/modules/esnext.map.find.js');
            J$.N(785, '$', $, 0);
            J$.N(793, 'IS_PURE', IS_PURE, 0);
            J$.N(801, 'anObject', anObject, 0);
            J$.N(809, 'bind', bind, 0);
            J$.N(817, 'getMapIterator', getMapIterator, 0);
            J$.N(825, 'iterate', iterate, 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var $ = J$.X1(57, J$.W(49, '$', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../internals/export', 21, false)), $, 3));
            var IS_PURE = J$.X1(97, J$.W(89, 'IS_PURE', J$.F(81, J$.R(65, 'require', require, 2), 0)(J$.T(73, '../internals/is-pure', 21, false)), IS_PURE, 3));
            var anObject = J$.X1(137, J$.W(129, 'anObject', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, '../internals/an-object', 21, false)), anObject, 3));
            var bind = J$.X1(177, J$.W(169, 'bind', J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, '../internals/bind-context', 21, false)), bind, 3));
            var getMapIterator = J$.X1(217, J$.W(209, 'getMapIterator', J$.F(201, J$.R(185, 'require', require, 2), 0)(J$.T(193, '../internals/get-map-iterator', 21, false)), getMapIterator, 3));
            var iterate = J$.X1(257, J$.W(249, 'iterate', J$.F(241, J$.R(225, 'require', require, 2), 0)(J$.T(233, '../internals/iterate', 21, false)), iterate, 3));
            J$.X1(769, J$.F(761, J$.R(265, '$', $, 1), 0)(J$.T(305, {
                target: J$.T(273, 'Map', 21, false),
                proto: J$.T(281, true, 23, false),
                real: J$.T(289, true, 23, false),
                forced: J$.R(297, 'IS_PURE', IS_PURE, 1)
            }, 11, false), J$.T(753, {
                find: J$.T(745, function find(callbackfn) {
                    jalangiLabel1161:
                        while (true) {
                            try {
                                J$.Fe(689, arguments.callee, this, arguments);
                                arguments = J$.N(697, 'arguments', arguments, 4);
                                find = J$.N(705, 'find', find, 0);
                                callbackfn = J$.N(713, 'callbackfn', callbackfn, 4);
                                J$.N(721, 'map', map, 0);
                                J$.N(729, 'iterator', iterator, 0);
                                J$.N(737, 'boundFunction', boundFunction, 0);
                                var map = J$.X1(345, J$.W(337, 'map', J$.F(329, J$.R(313, 'anObject', anObject, 1), 0)(J$.R(321, 'this', this, 0)), map, 1));
                                var iterator = J$.X1(385, J$.W(377, 'iterator', J$.F(369, J$.R(353, 'getMapIterator', getMapIterator, 1), 0)(J$.R(361, 'map', map, 0)), iterator, 1));
                                var boundFunction = J$.X1(489, J$.W(481, 'boundFunction', J$.F(473, J$.R(393, 'bind', bind, 1), 0)(J$.R(401, 'callbackfn', callbackfn, 0), J$.X1(833, J$.C(8, J$.B(10, '>', J$.G(417, J$.R(409, 'arguments', arguments, 2), 'length', 0), J$.T(425, 1, 22, false), 0))) ? J$.G(449, J$.R(433, 'arguments', arguments, 2), J$.T(441, 1, 22, false), 4) : J$.T(457, undefined, 24, false), J$.T(465, 3, 22, false)), boundFunction, 1));
                                return J$.X1(681, J$.Rt(673, J$.G(665, J$.F(657, J$.R(497, 'iterate', iterate, 1), 0)(J$.R(505, 'iterator', iterator, 0), J$.T(625, function (key, value) {
                                    jalangiLabel1160:
                                        while (true) {
                                            try {
                                                J$.Fe(593, arguments.callee, this, arguments);
                                                arguments = J$.N(601, 'arguments', arguments, 4);
                                                key = J$.N(609, 'key', key, 4);
                                                value = J$.N(617, 'value', value, 4);
                                                if (J$.X1(841, J$.C(16, J$.F(545, J$.R(513, 'boundFunction', boundFunction, 0), 0)(J$.R(521, 'value', value, 0), J$.R(529, 'key', key, 0), J$.R(537, 'map', map, 0)))))
                                                    return J$.X1(585, J$.Rt(577, J$.M(569, J$.R(553, 'iterate', iterate, 1), 'stop', 0)(J$.R(561, 'value', value, 0))));
                                            } catch (J$e) {
                                                J$.Ex(849, J$e);
                                            } finally {
                                                if (J$.Fr(857))
                                                    continue jalangiLabel1160;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 593), J$.T(633, undefined, 24, false), J$.T(641, true, 23, false), J$.T(649, true, 23, false)), 'result', 0)));
                            } catch (J$e) {
                                J$.Ex(865, J$e);
                            } finally {
                                if (J$.Fr(873))
                                    continue jalangiLabel1161;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 689)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(881, J$e);
        } finally {
            if (J$.Sr(889)) {
                J$.L();
                continue jalangiLabel1162;
            } else {
                J$.L();
                break jalangiLabel1162;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
