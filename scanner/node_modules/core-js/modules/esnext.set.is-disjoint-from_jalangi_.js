J$.iids = {"8":[15,11,15,45],"9":[1,1,1,13],"10":[15,11,15,45],"17":[1,1,1,14],"18":[14,12,16,15],"25":[2,9,2,16],"33":[2,17,2,38],"41":[2,9,2,39],"49":[2,9,2,39],"57":[2,9,2,39],"65":[3,15,3,22],"73":[3,23,3,45],"81":[3,15,3,46],"89":[3,15,3,46],"97":[3,15,3,46],"105":[4,16,4,23],"113":[4,24,4,48],"121":[4,16,4,49],"129":[4,16,4,49],"137":[4,16,4,49],"145":[5,17,5,24],"153":[5,25,5,50],"161":[5,17,5,51],"169":[5,17,5,51],"177":[5,17,5,51],"185":[6,15,6,22],"193":[6,23,6,45],"201":[6,15,6,46],"209":[6,15,6,46],"217":[6,15,6,46],"225":[10,1,10,2],"233":[10,13,10,18],"241":[10,27,10,31],"249":[10,39,10,43],"257":[10,53,10,60],"265":[10,3,10,62],"273":[12,15,12,23],"281":[12,24,12,28],"289":[12,15,12,29],"297":[12,15,12,29],"305":[12,15,12,29],"313":[13,20,13,29],"321":[13,30,13,33],"329":[13,30,13,37],"337":[13,20,13,38],"345":[13,20,13,38],"353":[13,20,13,38],"361":[14,13,14,20],"369":[14,21,14,29],"377":[15,11,15,19],"385":[15,25,15,28],"393":[15,30,15,35],"401":[15,11,15,36],"403":[15,11,15,24],"409":[15,41,15,45],"417":[15,54,15,61],"425":[15,54,15,68],"427":[15,54,15,66],"433":[15,54,15,68],"441":[15,47,15,69],"449":[14,31,16,6],"457":[14,31,16,6],"465":[14,31,16,6],"473":[14,31,16,6],"481":[14,13,16,7],"489":[14,13,16,15],"497":[14,12,16,15],"505":[14,5,16,16],"513":[11,19,17,4],"521":[11,19,17,4],"529":[11,19,17,4],"537":[11,19,17,4],"545":[11,19,17,4],"553":[11,19,17,4],"561":[11,19,17,4],"569":[10,64,18,2],"577":[10,1,18,3],"585":[10,1,18,4],"593":[1,1,19,1],"601":[1,1,19,1],"609":[1,1,19,1],"617":[1,1,19,1],"625":[1,1,19,1],"633":[1,1,19,1],"641":[15,7,15,69],"649":[14,31,16,6],"657":[14,31,16,6],"665":[11,19,17,4],"673":[11,19,17,4],"681":[1,1,19,1],"689":[1,1,19,1],"nBranches":2,"originalCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/esnext.set.is-disjoint-from.js","instrumentedCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/esnext.set.is-disjoint-from_jalangi_.js","code":"'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.isDisjointFrom` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isDisjointFrom\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  isDisjointFrom: function isDisjointFrom(iterable) {\n    var set = anObject(this);\n    var hasCheck = aFunction(set.has);\n    return !iterate(iterable, function (value) {\n      if (hasCheck.call(set, value) === true) return iterate.stop();\n    }).stopped;\n  }\n});\n"};
jalangiLabel1330:
    while (true) {
        try {
            J$.Se(593, '/home/blake/corejs_tests/node_modules/core-js/modules/esnext.set.is-disjoint-from_jalangi_.js', '/home/blake/corejs_tests/node_modules/core-js/modules/esnext.set.is-disjoint-from.js');
            J$.N(601, '$', $, 0);
            J$.N(609, 'IS_PURE', IS_PURE, 0);
            J$.N(617, 'anObject', anObject, 0);
            J$.N(625, 'aFunction', aFunction, 0);
            J$.N(633, 'iterate', iterate, 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var $ = J$.X1(57, J$.W(49, '$', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../internals/export', 21, false)), $, 3));
            var IS_PURE = J$.X1(97, J$.W(89, 'IS_PURE', J$.F(81, J$.R(65, 'require', require, 2), 0)(J$.T(73, '../internals/is-pure', 21, false)), IS_PURE, 3));
            var anObject = J$.X1(137, J$.W(129, 'anObject', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, '../internals/an-object', 21, false)), anObject, 3));
            var aFunction = J$.X1(177, J$.W(169, 'aFunction', J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, '../internals/a-function', 21, false)), aFunction, 3));
            var iterate = J$.X1(217, J$.W(209, 'iterate', J$.F(201, J$.R(185, 'require', require, 2), 0)(J$.T(193, '../internals/iterate', 21, false)), iterate, 3));
            J$.X1(585, J$.F(577, J$.R(225, '$', $, 1), 0)(J$.T(265, {
                target: J$.T(233, 'Set', 21, false),
                proto: J$.T(241, true, 23, false),
                real: J$.T(249, true, 23, false),
                forced: J$.R(257, 'IS_PURE', IS_PURE, 1)
            }, 11, false), J$.T(569, {
                isDisjointFrom: J$.T(561, function isDisjointFrom(iterable) {
                    jalangiLabel1329:
                        while (true) {
                            try {
                                J$.Fe(513, arguments.callee, this, arguments);
                                arguments = J$.N(521, 'arguments', arguments, 4);
                                isDisjointFrom = J$.N(529, 'isDisjointFrom', isDisjointFrom, 0);
                                iterable = J$.N(537, 'iterable', iterable, 4);
                                J$.N(545, 'set', set, 0);
                                J$.N(553, 'hasCheck', hasCheck, 0);
                                var set = J$.X1(305, J$.W(297, 'set', J$.F(289, J$.R(273, 'anObject', anObject, 1), 0)(J$.R(281, 'this', this, 0)), set, 1));
                                var hasCheck = J$.X1(353, J$.W(345, 'hasCheck', J$.F(337, J$.R(313, 'aFunction', aFunction, 1), 0)(J$.G(329, J$.R(321, 'set', set, 0), 'has', 0)), hasCheck, 1));
                                return J$.X1(505, J$.Rt(497, J$.U(18, '!', J$.G(489, J$.F(481, J$.R(361, 'iterate', iterate, 1), 0)(J$.R(369, 'iterable', iterable, 0), J$.T(473, function (value) {
                                    jalangiLabel1328:
                                        while (true) {
                                            try {
                                                J$.Fe(449, arguments.callee, this, arguments);
                                                arguments = J$.N(457, 'arguments', arguments, 4);
                                                value = J$.N(465, 'value', value, 4);
                                                if (J$.X1(641, J$.C(8, J$.B(10, '===', J$.M(401, J$.R(377, 'hasCheck', hasCheck, 0), 'call', 0)(J$.R(385, 'set', set, 0), J$.R(393, 'value', value, 0)), J$.T(409, true, 23, false), 0))))
                                                    return J$.X1(441, J$.Rt(433, J$.M(425, J$.R(417, 'iterate', iterate, 1), 'stop', 0)()));
                                            } catch (J$e) {
                                                J$.Ex(649, J$e);
                                            } finally {
                                                if (J$.Fr(657))
                                                    continue jalangiLabel1328;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 449)), 'stopped', 0))));
                            } catch (J$e) {
                                J$.Ex(665, J$e);
                            } finally {
                                if (J$.Fr(673))
                                    continue jalangiLabel1329;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 513)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(681, J$e);
        } finally {
            if (J$.Sr(689)) {
                J$.L();
                continue jalangiLabel1330;
            } else {
                J$.L();
                break jalangiLabel1330;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
