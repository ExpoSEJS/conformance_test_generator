{"8":[12,21,12,41],"9":[1,9,1,16],"10":[12,21,12,41],"17":[1,17,1,38],"25":[1,9,1,39],"33":[1,9,1,39],"41":[1,9,1,39],"49":[2,29,2,36],"57":[2,37,2,68],"65":[2,29,2,69],"73":[2,29,2,69],"81":[2,29,2,69],"89":[3,16,3,23],"97":[3,24,3,48],"105":[3,16,3,49],"113":[3,16,3,49],"121":[3,16,3,49],"129":[5,30,5,51],"137":[5,30,5,55],"145":[5,30,5,55],"153":[5,30,5,55],"161":[6,21,6,42],"169":[6,21,6,48],"177":[6,21,6,48],"185":[6,21,6,48],"193":[10,1,10,2],"201":[10,13,10,22],"209":[10,30,10,34],"217":[10,3,10,36],"225":[12,21,12,30],"233":[12,21,12,37],"241":[12,40,12,41],"249":[12,44,12,53],"257":[12,56,12,69],"265":[12,70,12,79],"273":[12,80,12,81],"281":[12,70,12,82],"289":[12,56,12,83],"297":[12,21,12,83],"305":[12,21,12,83],"313":[13,12,13,34],"321":[13,35,13,46],"329":[13,48,13,56],"337":[13,57,13,63],"345":[13,48,13,64],"353":[13,66,13,75],"361":[13,12,13,76],"369":[13,12,13,76],"377":[13,5,13,77],"385":[11,19,14,4],"393":[11,19,14,4],"401":[11,19,14,4],"409":[11,19,14,4],"417":[11,19,14,4],"425":[11,19,14,4],"433":[11,19,14,4],"441":[10,38,15,2],"449":[10,1,15,3],"457":[10,1,15,4],"465":[1,1,16,1],"473":[1,1,16,1],"481":[1,1,16,1],"489":[1,1,16,1],"497":[1,1,16,1],"505":[1,1,16,1],"513":[12,21,12,83],"521":[11,19,14,4],"529":[11,19,14,4],"537":[1,1,16,1],"545":[1,1,16,1],"nBranches":2,"originalCodeFileName":"/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/modules/esnext.reflect.has-own-metadata.js","instrumentedCodeFileName":"/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/modules/esnext.reflect.has-own-metadata_jalangi_.js","code":"var $ = require('../internals/export');\nvar ReflectMetadataModule = require('../internals/reflect-metadata');\nvar anObject = require('../internals/an-object');\n\nvar ordinaryHasOwnMetadata = ReflectMetadataModule.has;\nvar toMetadataKey = ReflectMetadataModule.toKey;\n\n// `Reflect.hasOwnMetadata` method\n// https://github.com/rbuckton/reflect-metadata\n$({ target: 'Reflect', stat: true }, {\n  hasOwnMetadata: function hasOwnMetadata(metadataKey, target /* , targetKey */) {\n    var targetKey = arguments.length < 3 ? undefined : toMetadataKey(arguments[2]);\n    return ordinaryHasOwnMetadata(metadataKey, anObject(target), targetKey);\n  }\n});\n"}