J$.iids = {"8":[12,41,12,61],"9":[1,1,1,13],"10":[12,41,12,61],"17":[1,1,1,14],"25":[2,27,2,34],"33":[2,35,2,72],"41":[2,27,2,73],"49":[2,27,2,73],"57":[2,27,2,73],"65":[3,12,3,19],"73":[3,20,3,50],"81":[3,12,3,51],"89":[3,12,3,55],"97":[3,12,3,55],"105":[3,12,3,55],"113":[4,26,4,33],"121":[4,34,4,68],"129":[4,26,4,69],"137":[4,26,4,69],"145":[4,26,4,69],"153":[6,19,6,38],"161":[6,19,6,50],"169":[6,19,6,50],"177":[6,19,6,50],"185":[7,30,7,49],"193":[7,30,7,72],"201":[7,30,7,72],"209":[7,30,7,72],"217":[11,1,11,20],"225":[11,33,11,38],"233":[12,10,12,14],"241":[12,15,12,26],"249":[12,27,12,31],"257":[12,15,12,32],"265":[12,34,12,39],"273":[12,41,12,50],"281":[12,41,12,57],"289":[12,60,12,61],"297":[12,64,12,73],"305":[12,74,12,75],"313":[12,64,12,76],"321":[12,79,12,88],"329":[13,17,13,39],"337":[13,40,13,58],"345":[13,59,13,60],"353":[13,62,13,63],"361":[13,62,13,75],"369":[13,40,13,76],"377":[13,17,13,77],"385":[13,79,13,85],"393":[13,12,13,86],"401":[13,12,13,86],"409":[13,5,13,87],"417":[12,90,14,4],"425":[12,90,14,4],"433":[12,90,14,4],"441":[12,90,14,4],"449":[12,90,14,4],"457":[12,10,14,5],"465":[12,10,14,5],"473":[12,3,14,6],"481":[11,40,15,2],"489":[11,40,15,2],"497":[11,40,15,2],"505":[11,40,15,2],"513":[11,40,15,2],"521":[11,1,15,3],"523":[11,1,11,32],"529":[11,1,15,4],"537":[1,1,16,1],"545":[1,1,16,1],"553":[1,1,16,1],"561":[1,1,16,1],"569":[1,1,16,1],"577":[1,1,16,1],"585":[12,41,12,88],"593":[12,90,14,4],"601":[12,90,14,4],"609":[11,40,15,2],"617":[11,40,15,2],"625":[1,1,16,1],"633":[1,1,16,1],"nBranches":2,"originalCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/es.typed-array.map.js","instrumentedCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/es.typed-array.map_jalangi_.js","code":"'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $map = require('../internals/array-iteration').map;\nvar speciesConstructor = require('../internals/species-constructor');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;\n\n// `%TypedArray%.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.map\nArrayBufferViewCore.exportProto('map', function map(mapfn /* , thisArg */) {\n  return $map(aTypedArray(this), mapfn, arguments.length > 1 ? arguments[1] : undefined, function (O, length) {\n    return new (aTypedArrayConstructor(speciesConstructor(O, O.constructor)))(length);\n  });\n});\n"};
jalangiLabel942:
    while (true) {
        try {
            J$.Se(537, '/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/es.typed-array.map_jalangi_.js', '/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/es.typed-array.map.js');
            J$.N(545, 'ArrayBufferViewCore', ArrayBufferViewCore, 0);
            J$.N(553, '$map', $map, 0);
            J$.N(561, 'speciesConstructor', speciesConstructor, 0);
            J$.N(569, 'aTypedArray', aTypedArray, 0);
            J$.N(577, 'aTypedArrayConstructor', aTypedArrayConstructor, 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var ArrayBufferViewCore = J$.X1(57, J$.W(49, 'ArrayBufferViewCore', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../internals/array-buffer-view-core', 21, false)), ArrayBufferViewCore, 3));
            var $map = J$.X1(105, J$.W(97, '$map', J$.G(89, J$.F(81, J$.R(65, 'require', require, 2), 0)(J$.T(73, '../internals/array-iteration', 21, false)), 'map', 0), $map, 3));
            var speciesConstructor = J$.X1(145, J$.W(137, 'speciesConstructor', J$.F(129, J$.R(113, 'require', require, 2), 0)(J$.T(121, '../internals/species-constructor', 21, false)), speciesConstructor, 3));
            var aTypedArray = J$.X1(177, J$.W(169, 'aTypedArray', J$.G(161, J$.R(153, 'ArrayBufferViewCore', ArrayBufferViewCore, 1), 'aTypedArray', 0), aTypedArray, 3));
            var aTypedArrayConstructor = J$.X1(209, J$.W(201, 'aTypedArrayConstructor', J$.G(193, J$.R(185, 'ArrayBufferViewCore', ArrayBufferViewCore, 1), 'aTypedArrayConstructor', 0), aTypedArrayConstructor, 3));
            J$.X1(529, J$.M(521, J$.R(217, 'ArrayBufferViewCore', ArrayBufferViewCore, 1), 'exportProto', 0)(J$.T(225, 'map', 21, false), J$.T(513, function map(mapfn) {
                jalangiLabel941:
                    while (true) {
                        try {
                            J$.Fe(481, arguments.callee, this, arguments);
                            arguments = J$.N(489, 'arguments', arguments, 4);
                            map = J$.N(497, 'map', map, 0);
                            mapfn = J$.N(505, 'mapfn', mapfn, 4);
                            return J$.X1(473, J$.Rt(465, J$.F(457, J$.R(233, '$map', $map, 1), 0)(J$.F(257, J$.R(241, 'aTypedArray', aTypedArray, 1), 0)(J$.R(249, 'this', this, 0)), J$.R(265, 'mapfn', mapfn, 0), J$.X1(585, J$.C(8, J$.B(10, '>', J$.G(281, J$.R(273, 'arguments', arguments, 2), 'length', 0), J$.T(289, 1, 22, false), 0))) ? J$.G(313, J$.R(297, 'arguments', arguments, 2), J$.T(305, 1, 22, false), 4) : J$.T(321, undefined, 24, false), J$.T(449, function (O, length) {
                                jalangiLabel940:
                                    while (true) {
                                        try {
                                            J$.Fe(417, arguments.callee, this, arguments);
                                            arguments = J$.N(425, 'arguments', arguments, 4);
                                            O = J$.N(433, 'O', O, 4);
                                            length = J$.N(441, 'length', length, 4);
                                            return J$.X1(409, J$.Rt(401, J$.F(393, J$.F(377, J$.R(329, 'aTypedArrayConstructor', aTypedArrayConstructor, 1), 0)(J$.F(369, J$.R(337, 'speciesConstructor', speciesConstructor, 1), 0)(J$.R(345, 'O', O, 0), J$.G(361, J$.R(353, 'O', O, 0), 'constructor', 0))), 1)(J$.R(385, 'length', length, 0))));
                                        } catch (J$e) {
                                            J$.Ex(593, J$e);
                                        } finally {
                                            if (J$.Fr(601))
                                                continue jalangiLabel940;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 417))));
                        } catch (J$e) {
                            J$.Ex(609, J$e);
                        } finally {
                            if (J$.Fr(617))
                                continue jalangiLabel941;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 481)));
        } catch (J$e) {
            J$.Ex(625, J$e);
        } finally {
            if (J$.Sr(633)) {
                J$.L();
                continue jalangiLabel942;
            } else {
                J$.L();
                break jalangiLabel942;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
