{"8":[11,38,11,58],"9":[1,1,1,13],"10":[9,43,9,82],"17":[1,1,1,14],"18":[11,38,11,58],"25":[2,9,2,16],"33":[2,17,2,38],"41":[2,9,2,39],"49":[2,9,2,39],"57":[2,9,2,39],"65":[3,15,3,22],"73":[3,23,3,53],"81":[3,15,3,54],"89":[3,15,3,61],"97":[3,15,3,61],"105":[3,15,3,61],"113":[4,36,4,43],"121":[4,44,4,91],"129":[4,36,4,92],"137":[4,36,4,92],"145":[4,36,4,92],"153":[9,1,9,2],"161":[9,13,9,20],"169":[9,29,9,33],"177":[9,44,9,72],"185":[9,73,9,81],"193":[9,44,9,82],"201":[9,3,9,84],"209":[11,12,11,19],"217":[11,20,11,24],"225":[11,26,11,36],"233":[11,38,11,47],"241":[11,38,11,54],"249":[11,57,11,58],"257":[11,61,11,70],"265":[11,71,11,72],"273":[11,61,11,73],"281":[11,76,11,85],"289":[11,12,11,86],"297":[11,12,11,86],"305":[11,5,11,87],"313":[10,11,12,4],"321":[10,11,12,4],"329":[10,11,12,4],"337":[10,11,12,4],"345":[10,11,12,4],"353":[9,86,13,2],"361":[9,1,13,3],"369":[9,1,13,4],"377":[1,1,14,1],"385":[1,1,14,1],"393":[1,1,14,1],"401":[1,1,14,1],"409":[11,38,11,85],"417":[10,11,12,4],"425":[10,11,12,4],"433":[1,1,14,1],"441":[1,1,14,1],"nBranches":2,"originalCodeFileName":"/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/modules/es.array.filter.js","instrumentedCodeFileName":"/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/modules/es.array.filter_jalangi_.js","code":"'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\n// `Array.prototype.filter` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !arrayMethodHasSpeciesSupport('filter') }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"}