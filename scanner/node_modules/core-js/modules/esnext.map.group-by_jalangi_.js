J$.iids = {"8":[17,11,17,40],"9":[1,1,1,13],"10":[17,11,17,40],"17":[1,1,1,14],"25":[2,9,2,16],"33":[2,17,2,38],"41":[2,9,2,39],"49":[2,9,2,39],"57":[2,9,2,39],"65":[3,15,3,22],"73":[3,23,3,45],"81":[3,15,3,46],"89":[3,15,3,46],"97":[3,15,3,46],"105":[4,17,4,24],"113":[4,25,4,50],"121":[4,17,4,51],"129":[4,17,4,51],"137":[4,17,4,51],"145":[8,1,8,2],"153":[8,13,8,18],"161":[8,26,8,30],"169":[8,3,8,32],"177":[10,22,10,26],"185":[10,18,10,28],"193":[10,18,10,28],"201":[10,18,10,28],"209":[11,5,11,14],"217":[11,15,11,28],"225":[11,5,11,29],"233":[11,5,11,30],"241":[12,15,12,24],"249":[12,25,12,31],"257":[12,25,12,35],"265":[12,15,12,36],"273":[12,15,12,36],"281":[12,15,12,36],"289":[13,15,13,24],"297":[13,25,13,31],"305":[13,25,13,35],"313":[13,15,13,36],"321":[13,15,13,36],"329":[13,15,13,36],"337":[14,15,14,24],"345":[14,25,14,31],"353":[14,25,14,35],"361":[14,15,14,36],"369":[14,15,14,36],"377":[14,15,14,36],"385":[15,5,15,12],"393":[15,13,15,21],"401":[16,24,16,37],"409":[16,38,16,45],"417":[16,24,16,46],"425":[16,24,16,46],"433":[16,24,16,46],"441":[17,12,17,15],"449":[17,21,17,27],"457":[17,29,17,39],"465":[17,12,17,40],"467":[17,12,17,20],"473":[17,42,17,45],"481":[17,51,17,57],"489":[17,59,17,69],"497":[17,72,17,79],"505":[17,71,17,80],"513":[17,42,17,81],"515":[17,42,17,50],"521":[17,42,17,82],"529":[18,12,18,15],"537":[18,21,18,27],"545":[18,29,18,39],"553":[18,12,18,40],"555":[18,12,18,20],"561":[18,46,18,53],"569":[18,12,18,54],"571":[18,12,18,45],"577":[18,12,18,55],"585":[15,23,19,6],"593":[15,23,19,6],"601":[15,23,19,6],"609":[15,23,19,6],"617":[15,23,19,6],"625":[15,5,19,7],"633":[15,5,19,8],"641":[20,12,20,18],"649":[20,12,20,18],"657":[20,5,20,19],"665":[9,12,21,4],"673":[9,12,21,4],"681":[9,12,21,4],"689":[9,12,21,4],"697":[9,12,21,4],"705":[9,12,21,4],"713":[9,12,21,4],"721":[9,12,21,4],"729":[9,12,21,4],"737":[9,12,21,4],"745":[8,34,22,2],"753":[8,1,22,3],"761":[8,1,22,4],"769":[1,1,23,1],"777":[1,1,23,1],"785":[1,1,23,1],"793":[1,1,23,1],"801":[17,7,18,55],"809":[15,23,19,6],"817":[15,23,19,6],"825":[9,12,21,4],"833":[9,12,21,4],"841":[1,1,23,1],"849":[1,1,23,1],"nBranches":2,"originalCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/esnext.map.group-by.js","instrumentedCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/esnext.map.group-by_jalangi_.js","code":"'use strict';\nvar $ = require('../internals/export');\nvar iterate = require('../internals/iterate');\nvar aFunction = require('../internals/a-function');\n\n// `Map.groupBy` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', stat: true }, {\n  groupBy: function groupBy(iterable, keyDerivative) {\n    var newMap = new this();\n    aFunction(keyDerivative);\n    var has = aFunction(newMap.has);\n    var get = aFunction(newMap.get);\n    var set = aFunction(newMap.set);\n    iterate(iterable, function (element) {\n      var derivedKey = keyDerivative(element);\n      if (!has.call(newMap, derivedKey)) set.call(newMap, derivedKey, [element]);\n      else get.call(newMap, derivedKey).push(element);\n    });\n    return newMap;\n  }\n});\n"};
jalangiLabel1144:
    while (true) {
        try {
            J$.Se(769, '/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/esnext.map.group-by_jalangi_.js', '/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/esnext.map.group-by.js');
            J$.N(777, '$', $, 0);
            J$.N(785, 'iterate', iterate, 0);
            J$.N(793, 'aFunction', aFunction, 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var $ = J$.X1(57, J$.W(49, '$', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../internals/export', 21, false)), $, 3));
            var iterate = J$.X1(97, J$.W(89, 'iterate', J$.F(81, J$.R(65, 'require', require, 2), 0)(J$.T(73, '../internals/iterate', 21, false)), iterate, 3));
            var aFunction = J$.X1(137, J$.W(129, 'aFunction', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, '../internals/a-function', 21, false)), aFunction, 3));
            J$.X1(761, J$.F(753, J$.R(145, '$', $, 1), 0)(J$.T(169, {
                target: J$.T(153, 'Map', 21, false),
                stat: J$.T(161, true, 23, false)
            }, 11, false), J$.T(745, {
                groupBy: J$.T(737, function groupBy(iterable, keyDerivative) {
                    jalangiLabel1143:
                        while (true) {
                            try {
                                J$.Fe(665, arguments.callee, this, arguments);
                                arguments = J$.N(673, 'arguments', arguments, 4);
                                groupBy = J$.N(681, 'groupBy', groupBy, 0);
                                iterable = J$.N(689, 'iterable', iterable, 4);
                                keyDerivative = J$.N(697, 'keyDerivative', keyDerivative, 4);
                                J$.N(705, 'newMap', newMap, 0);
                                J$.N(713, 'has', has, 0);
                                J$.N(721, 'get', get, 0);
                                J$.N(729, 'set', set, 0);
                                var newMap = J$.X1(201, J$.W(193, 'newMap', J$.F(185, J$.R(177, 'this', this, 0), 1)(), newMap, 1));
                                J$.X1(233, J$.F(225, J$.R(209, 'aFunction', aFunction, 1), 0)(J$.R(217, 'keyDerivative', keyDerivative, 0)));
                                var has = J$.X1(281, J$.W(273, 'has', J$.F(265, J$.R(241, 'aFunction', aFunction, 1), 0)(J$.G(257, J$.R(249, 'newMap', newMap, 0), 'has', 0)), has, 1));
                                var get = J$.X1(329, J$.W(321, 'get', J$.F(313, J$.R(289, 'aFunction', aFunction, 1), 0)(J$.G(305, J$.R(297, 'newMap', newMap, 0), 'get', 0)), get, 1));
                                var set = J$.X1(377, J$.W(369, 'set', J$.F(361, J$.R(337, 'aFunction', aFunction, 1), 0)(J$.G(353, J$.R(345, 'newMap', newMap, 0), 'set', 0)), set, 1));
                                J$.X1(633, J$.F(625, J$.R(385, 'iterate', iterate, 1), 0)(J$.R(393, 'iterable', iterable, 0), J$.T(617, function (element) {
                                    jalangiLabel1142:
                                        while (true) {
                                            try {
                                                J$.Fe(585, arguments.callee, this, arguments);
                                                arguments = J$.N(593, 'arguments', arguments, 4);
                                                element = J$.N(601, 'element', element, 4);
                                                J$.N(609, 'derivedKey', derivedKey, 0);
                                                var derivedKey = J$.X1(433, J$.W(425, 'derivedKey', J$.F(417, J$.R(401, 'keyDerivative', keyDerivative, 0), 0)(J$.R(409, 'element', element, 0)), derivedKey, 1));
                                                if (J$.X1(801, J$.C(8, J$.U(10, '!', J$.M(465, J$.R(441, 'has', has, 0), 'call', 0)(J$.R(449, 'newMap', newMap, 0), J$.R(457, 'derivedKey', derivedKey, 0))))))
                                                    J$.X1(521, J$.M(513, J$.R(473, 'set', set, 0), 'call', 0)(J$.R(481, 'newMap', newMap, 0), J$.R(489, 'derivedKey', derivedKey, 0), J$.T(505, [J$.R(497, 'element', element, 0)], 10, false)));
                                                else
                                                    J$.X1(577, J$.M(569, J$.M(553, J$.R(529, 'get', get, 0), 'call', 0)(J$.R(537, 'newMap', newMap, 0), J$.R(545, 'derivedKey', derivedKey, 0)), 'push', 0)(J$.R(561, 'element', element, 0)));
                                            } catch (J$e) {
                                                J$.Ex(809, J$e);
                                            } finally {
                                                if (J$.Fr(817))
                                                    continue jalangiLabel1142;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 585)));
                                return J$.X1(657, J$.Rt(649, J$.R(641, 'newMap', newMap, 0)));
                            } catch (J$e) {
                                J$.Ex(825, J$e);
                            } finally {
                                if (J$.Fr(833))
                                    continue jalangiLabel1143;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 665)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(841, J$e);
        } finally {
            if (J$.Sr(849)) {
                J$.L();
                continue jalangiLabel1144;
            } else {
                J$.L();
                break jalangiLabel1144;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
