J$.iids = {"9":[1,9,1,16],"17":[1,17,1,38],"25":[1,9,1,39],"33":[1,9,1,39],"41":[1,9,1,39],"49":[2,29,2,36],"57":[2,37,2,68],"65":[2,29,2,69],"73":[2,29,2,69],"81":[2,29,2,69],"89":[3,16,3,23],"97":[3,24,3,48],"105":[3,16,3,49],"113":[3,16,3,49],"121":[3,16,3,49],"129":[5,21,5,42],"137":[5,21,5,48],"145":[5,21,5,48],"153":[5,21,5,48],"161":[6,33,6,54],"169":[6,33,6,58],"177":[6,33,6,58],"185":[6,33,6,58],"193":[10,1,10,2],"201":[10,13,10,22],"209":[10,30,10,34],"217":[10,3,10,36],"225":[13,7,13,32],"233":[13,33,13,44],"241":[13,46,13,59],"249":[13,61,13,69],"257":[13,70,13,76],"265":[13,61,13,77],"273":[13,79,13,92],"281":[13,93,13,96],"289":[13,79,13,97],"297":[13,7,13,98],"305":[13,7,13,99],"313":[12,12,14,6],"321":[12,12,14,6],"329":[12,12,14,6],"337":[12,12,14,6],"345":[12,12,14,6],"353":[12,12,14,6],"361":[12,12,14,6],"369":[12,5,14,7],"377":[11,13,15,4],"385":[11,13,15,4],"393":[11,13,15,4],"401":[11,13,15,4],"409":[11,13,15,4],"417":[11,13,15,4],"425":[10,38,16,2],"433":[10,1,16,3],"441":[10,1,16,4],"449":[1,1,17,1],"457":[1,1,17,1],"465":[1,1,17,1],"473":[1,1,17,1],"481":[1,1,17,1],"489":[1,1,17,1],"497":[12,12,14,6],"505":[12,12,14,6],"513":[11,13,15,4],"521":[11,13,15,4],"529":[1,1,17,1],"537":[1,1,17,1],"nBranches":0,"originalCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/esnext.reflect.metadata.js","instrumentedCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/esnext.reflect.metadata_jalangi_.js","code":"var $ = require('../internals/export');\nvar ReflectMetadataModule = require('../internals/reflect-metadata');\nvar anObject = require('../internals/an-object');\n\nvar toMetadataKey = ReflectMetadataModule.toKey;\nvar ordinaryDefineOwnMetadata = ReflectMetadataModule.set;\n\n// `Reflect.metadata` method\n// https://github.com/rbuckton/reflect-metadata\n$({ target: 'Reflect', stat: true }, {\n  metadata: function metadata(metadataKey, metadataValue) {\n    return function decorator(target, key) {\n      ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetadataKey(key));\n    };\n  }\n});\n"};
jalangiLabel1036:
    while (true) {
        try {
            J$.Se(449, '/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/esnext.reflect.metadata_jalangi_.js', '/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/esnext.reflect.metadata.js');
            J$.N(457, '$', $, 0);
            J$.N(465, 'ReflectMetadataModule', ReflectMetadataModule, 0);
            J$.N(473, 'anObject', anObject, 0);
            J$.N(481, 'toMetadataKey', toMetadataKey, 0);
            J$.N(489, 'ordinaryDefineOwnMetadata', ordinaryDefineOwnMetadata, 0);
            var $ = J$.X1(41, J$.W(33, '$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../internals/export', 21, false)), $, 3));
            var ReflectMetadataModule = J$.X1(81, J$.W(73, 'ReflectMetadataModule', J$.F(65, J$.R(49, 'require', require, 2), 0)(J$.T(57, '../internals/reflect-metadata', 21, false)), ReflectMetadataModule, 3));
            var anObject = J$.X1(121, J$.W(113, 'anObject', J$.F(105, J$.R(89, 'require', require, 2), 0)(J$.T(97, '../internals/an-object', 21, false)), anObject, 3));
            var toMetadataKey = J$.X1(153, J$.W(145, 'toMetadataKey', J$.G(137, J$.R(129, 'ReflectMetadataModule', ReflectMetadataModule, 1), 'toKey', 0), toMetadataKey, 3));
            var ordinaryDefineOwnMetadata = J$.X1(185, J$.W(177, 'ordinaryDefineOwnMetadata', J$.G(169, J$.R(161, 'ReflectMetadataModule', ReflectMetadataModule, 1), 'set', 0), ordinaryDefineOwnMetadata, 3));
            J$.X1(441, J$.F(433, J$.R(193, '$', $, 1), 0)(J$.T(217, {
                target: J$.T(201, 'Reflect', 21, false),
                stat: J$.T(209, true, 23, false)
            }, 11, false), J$.T(425, {
                metadata: J$.T(417, function metadata(metadataKey, metadataValue) {
                    jalangiLabel1035:
                        while (true) {
                            try {
                                J$.Fe(377, arguments.callee, this, arguments);
                                arguments = J$.N(385, 'arguments', arguments, 4);
                                metadata = J$.N(393, 'metadata', metadata, 0);
                                metadataKey = J$.N(401, 'metadataKey', metadataKey, 4);
                                metadataValue = J$.N(409, 'metadataValue', metadataValue, 4);
                                return J$.X1(369, J$.Rt(361, J$.T(353, function decorator(target, key) {
                                    jalangiLabel1034:
                                        while (true) {
                                            try {
                                                J$.Fe(313, arguments.callee, this, arguments);
                                                arguments = J$.N(321, 'arguments', arguments, 4);
                                                decorator = J$.N(329, 'decorator', decorator, 0);
                                                target = J$.N(337, 'target', target, 4);
                                                key = J$.N(345, 'key', key, 4);
                                                J$.X1(305, J$.F(297, J$.R(225, 'ordinaryDefineOwnMetadata', ordinaryDefineOwnMetadata, 1), 0)(J$.R(233, 'metadataKey', metadataKey, 0), J$.R(241, 'metadataValue', metadataValue, 0), J$.F(265, J$.R(249, 'anObject', anObject, 1), 0)(J$.R(257, 'target', target, 0)), J$.F(289, J$.R(273, 'toMetadataKey', toMetadataKey, 1), 0)(J$.R(281, 'key', key, 0))));
                                            } catch (J$e) {
                                                J$.Ex(497, J$e);
                                            } finally {
                                                if (J$.Fr(505))
                                                    continue jalangiLabel1034;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 313)));
                            } catch (J$e) {
                                J$.Ex(513, J$e);
                            } finally {
                                if (J$.Fr(521))
                                    continue jalangiLabel1035;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 377)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(529, J$e);
        } finally {
            if (J$.Sr(537)) {
                J$.L();
                continue jalangiLabel1036;
            } else {
                J$.L();
                break jalangiLabel1036;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
