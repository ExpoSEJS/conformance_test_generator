{"8":[19,11,19,36],"9":[1,1,1,13],"17":[1,1,1,14],"25":[2,9,2,16],"33":[2,17,2,38],"41":[2,9,2,39],"49":[2,9,2,39],"57":[2,9,2,39],"65":[3,15,3,22],"73":[3,23,3,45],"81":[3,15,3,46],"89":[3,15,3,46],"97":[3,15,3,46],"105":[4,18,4,25],"113":[4,26,4,53],"121":[4,18,4,54],"129":[4,18,4,54],"137":[4,18,4,54],"145":[5,16,5,23],"153":[5,24,5,48],"161":[5,16,5,49],"169":[5,16,5,49],"177":[5,16,5,49],"185":[6,17,6,24],"193":[6,25,6,50],"201":[6,17,6,51],"209":[6,17,6,51],"217":[6,17,6,51],"225":[7,26,7,33],"233":[7,34,7,68],"241":[7,26,7,69],"249":[7,26,7,69],"257":[7,26,7,69],"265":[8,15,8,22],"273":[8,23,8,45],"281":[8,15,8,46],"289":[8,15,8,46],"297":[8,15,8,46],"305":[12,1,12,2],"313":[12,13,12,18],"321":[12,27,12,31],"329":[12,39,12,43],"337":[12,53,12,60],"345":[12,3,12,62],"353":[14,15,14,23],"361":[14,24,14,28],"369":[14,15,14,29],"377":[14,15,14,29],"385":[14,15,14,29],"393":[15,23,15,41],"401":[15,42,15,45],"409":[15,47,15,57],"417":[15,58,15,63],"425":[15,47,15,64],"433":[15,23,15,65],"441":[15,18,15,68],"449":[15,18,15,68],"457":[15,18,15,68],"465":[16,20,16,29],"473":[16,30,16,33],"481":[16,30,16,37],"489":[16,20,16,38],"497":[16,20,16,38],"505":[16,20,16,38],"513":[17,17,17,26],"521":[17,27,17,33],"529":[17,27,17,37],"537":[17,17,17,38],"545":[17,17,17,38],"553":[17,17,17,38],"561":[18,5,18,12],"569":[18,13,18,21],"577":[19,11,19,19],"585":[19,25,19,28],"593":[19,30,19,35],"601":[19,11,19,36],"603":[19,11,19,24],"609":[19,38,19,43],"617":[19,49,19,55],"625":[19,57,19,62],"633":[19,38,19,63],"635":[19,38,19,48],"641":[19,38,19,64],"649":[18,23,20,6],"657":[18,23,20,6],"665":[18,23,20,6],"673":[18,23,20,6],"681":[18,5,20,7],"689":[18,5,20,8],"697":[21,12,21,18],"705":[21,12,21,18],"713":[21,5,21,19],"721":[13,17,22,4],"729":[13,17,22,4],"737":[13,17,22,4],"745":[13,17,22,4],"753":[13,17,22,4],"761":[13,17,22,4],"769":[13,17,22,4],"777":[13,17,22,4],"785":[13,17,22,4],"793":[12,64,23,2],"801":[12,1,23,3],"809":[12,1,23,4],"817":[1,1,24,1],"825":[1,1,24,1],"833":[1,1,24,1],"841":[1,1,24,1],"849":[1,1,24,1],"857":[1,1,24,1],"865":[1,1,24,1],"873":[1,1,24,1],"881":[19,7,19,64],"889":[18,23,20,6],"897":[18,23,20,6],"905":[13,17,22,4],"913":[13,17,22,4],"921":[1,1,24,1],"929":[1,1,24,1],"nBranches":2,"originalCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/esnext.set.intersection.js","instrumentedCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/esnext.set.intersection_jalangi_.js","code":"'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar getBuiltIn = require('../internals/get-built-in');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar speciesConstructor = require('../internals/species-constructor');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.intersection` method\n// https://github.com/tc39/proposal-set-methods\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  intersection: function intersection(iterable) {\n    var set = anObject(this);\n    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))();\n    var hasCheck = aFunction(set.has);\n    var adder = aFunction(newSet.add);\n    iterate(iterable, function (value) {\n      if (hasCheck.call(set, value)) adder.call(newSet, value);\n    });\n    return newSet;\n  }\n});\n"}