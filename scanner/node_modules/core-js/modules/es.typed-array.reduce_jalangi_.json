{"8":[10,67,10,87],"9":[1,1,1,13],"10":[10,67,10,87],"17":[1,1,1,14],"25":[2,27,2,34],"33":[2,35,2,72],"41":[2,27,2,73],"49":[2,27,2,73],"57":[2,27,2,73],"65":[3,15,3,22],"73":[3,23,3,50],"81":[3,15,3,51],"89":[3,15,3,56],"97":[3,15,3,56],"105":[3,15,3,56],"113":[5,19,5,38],"121":[5,19,5,50],"129":[5,19,5,50],"137":[5,19,5,50],"145":[9,1,9,20],"153":[9,33,9,41],"161":[10,10,10,17],"169":[10,18,10,29],"177":[10,30,10,34],"185":[10,18,10,35],"193":[10,37,10,47],"201":[10,49,10,58],"209":[10,49,10,65],"217":[10,67,10,76],"225":[10,67,10,83],"233":[10,86,10,87],"241":[10,90,10,99],"249":[10,100,10,101],"257":[10,90,10,102],"265":[10,105,10,114],"273":[10,10,10,115],"281":[10,10,10,115],"289":[10,3,10,116],"297":[9,43,11,2],"305":[9,43,11,2],"313":[9,43,11,2],"321":[9,43,11,2],"329":[9,43,11,2],"337":[9,1,11,3],"339":[9,1,9,32],"345":[9,1,11,4],"353":[1,1,12,1],"361":[1,1,12,1],"369":[1,1,12,1],"377":[1,1,12,1],"385":[10,67,10,114],"393":[9,43,11,2],"401":[9,43,11,2],"409":[1,1,12,1],"417":[1,1,12,1],"nBranches":2,"originalCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/es.typed-array.reduce.js","instrumentedCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/es.typed-array.reduce_jalangi_.js","code":"'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $reduce = require('../internals/array-reduce').left;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\n\n// `%TypedArray%.prototype.reduce` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.reduce\nArrayBufferViewCore.exportProto('reduce', function reduce(callbackfn /* , initialValue */) {\n  return $reduce(aTypedArray(this), callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n});\n"}