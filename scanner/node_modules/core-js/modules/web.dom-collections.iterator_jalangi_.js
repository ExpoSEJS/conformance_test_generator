J$.iids = {"8":[13,29,13,63],"9":[1,14,1,21],"10":[16,9,16,54],"16":[16,9,16,54],"17":[1,22,1,43],"18":[21,9,21,44],"24":[21,9,21,44],"25":[1,14,1,44],"26":[24,11,24,81],"32":[24,11,24,81],"33":[1,14,1,44],"40":[22,9,22,38],"41":[1,14,1,44],"48":[14,7,14,26],"49":[2,20,2,27],"57":[2,28,2,56],"65":[2,20,2,57],"73":[2,20,2,57],"81":[2,20,2,57],"89":[3,28,3,35],"97":[3,36,3,66],"105":[3,28,3,67],"113":[3,28,3,67],"121":[3,28,3,67],"129":[4,12,4,19],"137":[4,20,4,39],"145":[4,12,4,40],"153":[4,12,4,40],"161":[4,12,4,40],"169":[5,23,5,30],"177":[5,31,5,63],"185":[5,23,5,64],"193":[5,23,5,64],"201":[5,23,5,64],"209":[7,16,7,31],"217":[7,32,7,42],"225":[7,16,7,43],"233":[7,16,7,43],"241":[7,16,7,43],"249":[8,21,8,36],"257":[8,37,8,50],"265":[8,21,8,51],"273":[8,21,8,51],"281":[8,21,8,51],"289":[9,19,9,39],"297":[9,19,9,46],"305":[9,19,9,46],"313":[9,19,9,46],"321":[11,29,11,41],"329":[12,20,12,26],"337":[12,27,12,42],"345":[12,20,12,43],"353":[12,20,12,43],"361":[12,20,12,43],"369":[13,29,13,39],"377":[13,43,13,53],"385":[13,43,13,63],"393":[13,29,13,63],"401":[13,29,13,63],"409":[14,7,14,26],"417":[16,9,16,28],"425":[16,29,16,37],"433":[16,9,16,38],"441":[16,43,16,54],"449":[17,7,17,11],"457":[17,12,17,31],"465":[17,33,17,41],"473":[17,43,17,54],"481":[17,7,17,55],"489":[17,7,17,56],"497":[19,7,19,26],"505":[19,27,19,35],"513":[19,39,19,50],"521":[19,7,19,50],"529":[19,7,19,51],"537":[18,7,20,6],"545":[21,10,21,29],"553":[21,30,21,43],"561":[21,10,21,44],"569":[21,46,21,50],"577":[21,51,21,70],"585":[21,72,21,85],"593":[21,87,21,102],"601":[21,46,21,103],"609":[21,46,21,104],"617":[22,9,22,21],"625":[22,22,22,37],"633":[22,9,22,38],"641":[22,64,22,84],"649":[24,11,24,30],"657":[24,31,24,42],"665":[24,11,24,43],"673":[24,48,24,68],"681":[24,69,24,80],"689":[24,48,24,81],"697":[25,9,25,13],"705":[25,14,25,33],"713":[25,35,25,46],"721":[25,48,25,68],"729":[25,69,25,80],"737":[25,48,25,81],"745":[25,9,25,82],"753":[25,9,25,83],"761":[27,9,27,28],"769":[27,29,27,40],"777":[27,44,27,64],"785":[27,65,27,76],"793":[27,44,27,77],"801":[27,9,27,77],"809":[27,9,27,78],"817":[26,9,28,8],"825":[22,64,22,84],"833":[22,40,29,6],"841":[22,40,29,6],"849":[11,29,11,41],"857":[11,1,31,2],"865":[11,1,31,2],"873":[1,1,32,1],"881":[1,1,32,1],"889":[1,1,32,1],"897":[1,1,32,1],"905":[1,1,32,1],"913":[1,1,32,1],"921":[1,1,32,1],"929":[1,1,32,1],"937":[1,1,32,1],"945":[1,1,32,1],"953":[1,1,32,1],"961":[1,1,32,1],"969":[1,1,32,1],"977":[16,5,20,6],"985":[21,5,21,104],"993":[24,7,28,8],"1001":[22,5,29,6],"1009":[14,3,30,4],"1017":[1,1,32,1],"1025":[1,1,32,1],"nBranches":12,"originalCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/web.dom-collections.iterator.js","instrumentedCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/web.dom-collections.iterator_jalangi_.js","code":"var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar hide = require('../internals/hide');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      hide(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) hide(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        hide(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n}\n"};
jalangiLabel1363:
    while (true) {
        try {
            J$.Se(873, '/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/web.dom-collections.iterator_jalangi_.js', '/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/web.dom-collections.iterator.js');
            J$.N(881, 'global', global, 0);
            J$.N(889, 'DOMIterables', DOMIterables, 0);
            J$.N(897, 'ArrayIteratorMethods', ArrayIteratorMethods, 0);
            J$.N(905, 'hide', hide, 0);
            J$.N(913, 'wellKnownSymbol', wellKnownSymbol, 0);
            J$.N(921, 'ITERATOR', ITERATOR, 0);
            J$.N(929, 'TO_STRING_TAG', TO_STRING_TAG, 0);
            J$.N(937, 'ArrayValues', ArrayValues, 0);
            J$.N(945, 'COLLECTION_NAME', COLLECTION_NAME, 0);
            J$.N(953, 'Collection', Collection, 0);
            J$.N(961, 'CollectionPrototype', CollectionPrototype, 0);
            J$.N(969, 'METHOD_NAME', METHOD_NAME, 0);
            var global = J$.X1(41, J$.W(33, 'global', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../internals/global', 21, false)), global, 3));
            var DOMIterables = J$.X1(81, J$.W(73, 'DOMIterables', J$.F(65, J$.R(49, 'require', require, 2), 0)(J$.T(57, '../internals/dom-iterables', 21, false)), DOMIterables, 3));
            var ArrayIteratorMethods = J$.X1(121, J$.W(113, 'ArrayIteratorMethods', J$.F(105, J$.R(89, 'require', require, 2), 0)(J$.T(97, '../modules/es.array.iterator', 21, false)), ArrayIteratorMethods, 3));
            var hide = J$.X1(161, J$.W(153, 'hide', J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, '../internals/hide', 21, false)), hide, 3));
            var wellKnownSymbol = J$.X1(201, J$.W(193, 'wellKnownSymbol', J$.F(185, J$.R(169, 'require', require, 2), 0)(J$.T(177, '../internals/well-known-symbol', 21, false)), wellKnownSymbol, 3));
            var ITERATOR = J$.X1(241, J$.W(233, 'ITERATOR', J$.F(225, J$.R(209, 'wellKnownSymbol', wellKnownSymbol, 1), 0)(J$.T(217, 'iterator', 21, false)), ITERATOR, 3));
            var TO_STRING_TAG = J$.X1(281, J$.W(273, 'TO_STRING_TAG', J$.F(265, J$.R(249, 'wellKnownSymbol', wellKnownSymbol, 1), 0)(J$.T(257, 'toStringTag', 21, false)), TO_STRING_TAG, 3));
            var ArrayValues = J$.X1(313, J$.W(305, 'ArrayValues', J$.G(297, J$.R(289, 'ArrayIteratorMethods', ArrayIteratorMethods, 1), 'values', 0), ArrayValues, 3));
            for (J$._tm_p in J$.H(849, J$.R(321, 'DOMIterables', DOMIterables, 1))) {
                var COLLECTION_NAME = J$.X1(865, J$.W(857, 'COLLECTION_NAME', J$._tm_p, COLLECTION_NAME, 3));
                {
                    {
                        var Collection = J$.X1(361, J$.W(353, 'Collection', J$.G(345, J$.R(329, 'global', global, 1), J$.R(337, 'COLLECTION_NAME', COLLECTION_NAME, 1), 4), Collection, 3));
                        var CollectionPrototype = J$.X1(401, J$.W(393, 'CollectionPrototype', J$.C(8, J$.R(369, 'Collection', Collection, 1)) ? J$.G(385, J$.R(377, 'Collection', Collection, 1), 'prototype', 0) : J$._(), CollectionPrototype, 3));
                        if (J$.X1(1009, J$.C(48, J$.R(409, 'CollectionPrototype', CollectionPrototype, 1)))) {
                            if (J$.X1(977, J$.C(16, J$.B(10, '!==', J$.G(433, J$.R(417, 'CollectionPrototype', CollectionPrototype, 1), J$.R(425, 'ITERATOR', ITERATOR, 1), 4), J$.R(441, 'ArrayValues', ArrayValues, 1), 0))))
                                try {
                                J$.X1(489, J$.F(481, J$.R(449, 'hide', hide, 1), 0)(J$.R(457, 'CollectionPrototype', CollectionPrototype, 1), J$.R(465, 'ITERATOR', ITERATOR, 1), J$.R(473, 'ArrayValues', ArrayValues, 1)));
                            } catch (error) {
                                error = J$.N(537, 'error', error, 1);
                                J$.X1(529, J$.P(521, J$.R(497, 'CollectionPrototype', CollectionPrototype, 1), J$.R(505, 'ITERATOR', ITERATOR, 1), J$.R(513, 'ArrayValues', ArrayValues, 1), 2));
                            }
                            if (J$.X1(985, J$.C(24, J$.U(18, '!', J$.G(561, J$.R(545, 'CollectionPrototype', CollectionPrototype, 1), J$.R(553, 'TO_STRING_TAG', TO_STRING_TAG, 1), 4)))))
                                J$.X1(609, J$.F(601, J$.R(569, 'hide', hide, 1), 0)(J$.R(577, 'CollectionPrototype', CollectionPrototype, 1), J$.R(585, 'TO_STRING_TAG', TO_STRING_TAG, 1), J$.R(593, 'COLLECTION_NAME', COLLECTION_NAME, 1)));
                            if (J$.X1(1001, J$.C(40, J$.G(633, J$.R(617, 'DOMIterables', DOMIterables, 1), J$.R(625, 'COLLECTION_NAME', COLLECTION_NAME, 1), 4))))
                                for (J$._tm_p in J$.H(825, J$.R(641, 'ArrayIteratorMethods', ArrayIteratorMethods, 1))) {
                                var METHOD_NAME = J$.X1(841, J$.W(833, 'METHOD_NAME', J$._tm_p, METHOD_NAME, 3));
                                {
                                    {
                                        if (J$.X1(993, J$.C(32, J$.B(26, '!==', J$.G(665, J$.R(649, 'CollectionPrototype', CollectionPrototype, 1), J$.R(657, 'METHOD_NAME', METHOD_NAME, 1), 4), J$.G(689, J$.R(673, 'ArrayIteratorMethods', ArrayIteratorMethods, 1), J$.R(681, 'METHOD_NAME', METHOD_NAME, 1), 4), 0))))
                                            try {
                                            J$.X1(753, J$.F(745, J$.R(697, 'hide', hide, 1), 0)(J$.R(705, 'CollectionPrototype', CollectionPrototype, 1), J$.R(713, 'METHOD_NAME', METHOD_NAME, 1), J$.G(737, J$.R(721, 'ArrayIteratorMethods', ArrayIteratorMethods, 1), J$.R(729, 'METHOD_NAME', METHOD_NAME, 1), 4)));
                                        } catch (error) {
                                            error = J$.N(817, 'error', error, 1);
                                            J$.X1(809, J$.P(801, J$.R(761, 'CollectionPrototype', CollectionPrototype, 1), J$.R(769, 'METHOD_NAME', METHOD_NAME, 1), J$.G(793, J$.R(777, 'ArrayIteratorMethods', ArrayIteratorMethods, 1), J$.R(785, 'METHOD_NAME', METHOD_NAME, 1), 4), 2));
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        } catch (J$e) {
            J$.Ex(1017, J$e);
        } finally {
            if (J$.Sr(1025)) {
                J$.L();
                continue jalangiLabel1363;
            } else {
                J$.L();
                break jalangiLabel1363;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
