{"8":[16,12,16,32],"9":[1,1,1,13],"10":[16,12,16,32],"17":[1,1,1,14],"18":[17,25,17,28],"25":[2,9,2,16],"33":[2,17,2,38],"34":[17,25,17,28],"41":[2,9,2,39],"49":[2,9,2,39],"57":[2,9,2,39],"65":[3,15,3,22],"73":[3,23,3,45],"81":[3,15,3,46],"89":[3,15,3,46],"97":[3,15,3,46],"105":[4,16,4,23],"113":[4,24,4,48],"121":[4,16,4,49],"129":[4,16,4,49],"137":[4,16,4,49],"145":[5,17,5,24],"153":[5,25,5,50],"161":[5,17,5,51],"169":[5,17,5,51],"177":[5,17,5,51],"185":[6,15,6,22],"193":[6,23,6,45],"201":[6,15,6,46],"209":[6,15,6,46],"217":[6,15,6,46],"225":[10,1,10,2],"233":[10,13,10,18],"241":[10,27,10,31],"249":[10,39,10,43],"257":[10,53,10,60],"265":[10,3,10,62],"273":[13,15,13,23],"281":[13,24,13,28],"289":[13,15,13,29],"297":[13,15,13,29],"305":[13,15,13,29],"313":[14,18,14,27],"321":[14,28,14,31],"329":[14,28,14,35],"337":[14,18,14,36],"345":[14,18,14,36],"353":[14,18,14,36],"361":[15,13,15,14],"369":[15,13,15,14],"377":[15,13,15,14],"385":[16,12,16,13],"393":[16,16,16,25],"401":[16,16,16,32],"409":[17,7,17,14],"417":[17,15,17,24],"433":[17,25,17,26],"441":[17,25,17,28],"457":[17,15,17,29],"465":[17,31,17,37],"473":[17,39,17,42],"481":[17,44,17,48],"489":[17,7,17,49],"497":[17,7,17,50],"505":[19,12,19,15],"513":[19,12,19,15],"521":[19,5,19,16],"529":[12,10,20,4],"537":[12,10,20,4],"545":[12,10,20,4],"553":[12,10,20,4],"561":[12,10,20,4],"569":[12,10,20,4],"577":[12,10,20,4],"585":[12,10,20,4],"593":[10,64,21,2],"601":[10,1,21,3],"609":[10,1,21,4],"617":[1,1,22,1],"625":[1,1,22,1],"633":[1,1,22,1],"641":[1,1,22,1],"649":[1,1,22,1],"657":[1,1,22,1],"665":[16,5,18,6],"673":[12,10,20,4],"681":[12,10,20,4],"689":[1,1,22,1],"697":[1,1,22,1],"nBranches":2,"originalCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/esnext.map.merge.js","instrumentedCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/esnext.map.merge_jalangi_.js","code":"'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar iterate = require('../internals/iterate');\n\n// `Map.prototype.merge` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  // eslint-disable-next-line no-unused-vars\n  merge: function merge(iterable /* ...iterbles */) {\n    var map = anObject(this);\n    var setter = aFunction(map.set);\n    var i = 0;\n    while (i < arguments.length) {\n      iterate(arguments[i++], setter, map, true);\n    }\n    return map;\n  }\n});\n"}