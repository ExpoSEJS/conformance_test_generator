J$.iids = {"8":[16,12,16,32],"9":[1,1,1,13],"10":[16,12,16,32],"17":[1,1,1,14],"18":[17,25,17,28],"25":[2,9,2,16],"33":[2,17,2,38],"34":[17,25,17,28],"41":[2,9,2,39],"49":[2,9,2,39],"57":[2,9,2,39],"65":[3,15,3,22],"73":[3,23,3,45],"81":[3,15,3,46],"89":[3,15,3,46],"97":[3,15,3,46],"105":[4,16,4,23],"113":[4,24,4,48],"121":[4,16,4,49],"129":[4,16,4,49],"137":[4,16,4,49],"145":[5,17,5,24],"153":[5,25,5,50],"161":[5,17,5,51],"169":[5,17,5,51],"177":[5,17,5,51],"185":[6,15,6,22],"193":[6,23,6,45],"201":[6,15,6,46],"209":[6,15,6,46],"217":[6,15,6,46],"225":[10,1,10,2],"233":[10,13,10,18],"241":[10,27,10,31],"249":[10,39,10,43],"257":[10,53,10,60],"265":[10,3,10,62],"273":[13,15,13,23],"281":[13,24,13,28],"289":[13,15,13,29],"297":[13,15,13,29],"305":[13,15,13,29],"313":[14,18,14,27],"321":[14,28,14,31],"329":[14,28,14,35],"337":[14,18,14,36],"345":[14,18,14,36],"353":[14,18,14,36],"361":[15,13,15,14],"369":[15,13,15,14],"377":[15,13,15,14],"385":[16,12,16,13],"393":[16,16,16,25],"401":[16,16,16,32],"409":[17,7,17,14],"417":[17,15,17,24],"433":[17,25,17,26],"441":[17,25,17,28],"457":[17,15,17,29],"465":[17,31,17,37],"473":[17,39,17,42],"481":[17,44,17,48],"489":[17,7,17,49],"497":[17,7,17,50],"505":[19,12,19,15],"513":[19,12,19,15],"521":[19,5,19,16],"529":[12,10,20,4],"537":[12,10,20,4],"545":[12,10,20,4],"553":[12,10,20,4],"561":[12,10,20,4],"569":[12,10,20,4],"577":[12,10,20,4],"585":[12,10,20,4],"593":[10,64,21,2],"601":[10,1,21,3],"609":[10,1,21,4],"617":[1,1,22,1],"625":[1,1,22,1],"633":[1,1,22,1],"641":[1,1,22,1],"649":[1,1,22,1],"657":[1,1,22,1],"665":[16,5,18,6],"673":[12,10,20,4],"681":[12,10,20,4],"689":[1,1,22,1],"697":[1,1,22,1],"nBranches":2,"originalCodeFileName":"/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/modules/esnext.map.merge.js","instrumentedCodeFileName":"/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/modules/esnext.map.merge_jalangi_.js","code":"'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar iterate = require('../internals/iterate');\n\n// `Map.prototype.merge` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  // eslint-disable-next-line no-unused-vars\n  merge: function merge(iterable /* ...iterbles */) {\n    var map = anObject(this);\n    var setter = aFunction(map.set);\n    var i = 0;\n    while (i < arguments.length) {\n      iterate(arguments[i++], setter, map, true);\n    }\n    return map;\n  }\n});\n"};
jalangiLabel1181:
    while (true) {
        try {
            J$.Se(617, '/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/modules/esnext.map.merge_jalangi_.js', '/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/modules/esnext.map.merge.js');
            J$.N(625, '$', $, 0);
            J$.N(633, 'IS_PURE', IS_PURE, 0);
            J$.N(641, 'anObject', anObject, 0);
            J$.N(649, 'aFunction', aFunction, 0);
            J$.N(657, 'iterate', iterate, 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var $ = J$.X1(57, J$.W(49, '$', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../internals/export', 21, false)), $, 3));
            var IS_PURE = J$.X1(97, J$.W(89, 'IS_PURE', J$.F(81, J$.R(65, 'require', require, 2), 0)(J$.T(73, '../internals/is-pure', 21, false)), IS_PURE, 3));
            var anObject = J$.X1(137, J$.W(129, 'anObject', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, '../internals/an-object', 21, false)), anObject, 3));
            var aFunction = J$.X1(177, J$.W(169, 'aFunction', J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, '../internals/a-function', 21, false)), aFunction, 3));
            var iterate = J$.X1(217, J$.W(209, 'iterate', J$.F(201, J$.R(185, 'require', require, 2), 0)(J$.T(193, '../internals/iterate', 21, false)), iterate, 3));
            J$.X1(609, J$.F(601, J$.R(225, '$', $, 1), 0)(J$.T(265, {
                target: J$.T(233, 'Map', 21, false),
                proto: J$.T(241, true, 23, false),
                real: J$.T(249, true, 23, false),
                forced: J$.R(257, 'IS_PURE', IS_PURE, 1)
            }, 11, false), J$.T(593, {
                merge: J$.T(585, function merge(iterable) {
                    jalangiLabel1180:
                        while (true) {
                            try {
                                J$.Fe(529, arguments.callee, this, arguments);
                                arguments = J$.N(537, 'arguments', arguments, 4);
                                merge = J$.N(545, 'merge', merge, 0);
                                iterable = J$.N(553, 'iterable', iterable, 4);
                                J$.N(561, 'map', map, 0);
                                J$.N(569, 'setter', setter, 0);
                                J$.N(577, 'i', i, 0);
                                var map = J$.X1(305, J$.W(297, 'map', J$.F(289, J$.R(273, 'anObject', anObject, 1), 0)(J$.R(281, 'this', this, 0)), map, 1));
                                var setter = J$.X1(353, J$.W(345, 'setter', J$.F(337, J$.R(313, 'aFunction', aFunction, 1), 0)(J$.G(329, J$.R(321, 'map', map, 0), 'set', 0)), setter, 1));
                                var i = J$.X1(377, J$.W(369, 'i', J$.T(361, 0, 22, false), i, 1));
                                while (J$.X1(665, J$.C(8, J$.B(10, '<', J$.R(385, 'i', i, 0), J$.G(401, J$.R(393, 'arguments', arguments, 2), 'length', 0), 0)))) {
                                    J$.X1(497, J$.F(489, J$.R(409, 'iterate', iterate, 1), 0)(J$.G(457, J$.R(417, 'arguments', arguments, 2), J$.B(34, '-', i = J$.W(441, 'i', J$.B(26, '+', J$.U(18, '+', J$.R(433, 'i', i, 0)), J$.T(425, 1, 22, false), 0), i, 0), J$.T(449, 1, 22, false), 0), 4), J$.R(465, 'setter', setter, 0), J$.R(473, 'map', map, 0), J$.T(481, true, 23, false)));
                                }
                                return J$.X1(521, J$.Rt(513, J$.R(505, 'map', map, 0)));
                            } catch (J$e) {
                                J$.Ex(673, J$e);
                            } finally {
                                if (J$.Fr(681))
                                    continue jalangiLabel1180;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 529)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(689, J$e);
        } finally {
            if (J$.Sr(697)) {
                J$.L();
                continue jalangiLabel1181;
            } else {
                J$.L();
                break jalangiLabel1181;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
