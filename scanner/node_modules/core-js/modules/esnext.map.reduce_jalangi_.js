J$.iids = {"8":[20,11,20,20],"9":[1,1,1,13],"10":[17,9,17,29],"16":[17,9,17,29],"17":[1,1,1,14],"25":[2,9,2,16],"33":[2,17,2,38],"41":[2,9,2,39],"49":[2,9,2,39],"57":[2,9,2,39],"65":[3,15,3,22],"73":[3,23,3,45],"81":[3,15,3,46],"89":[3,15,3,46],"97":[3,15,3,46],"105":[4,16,4,23],"113":[4,24,4,48],"121":[4,16,4,49],"129":[4,16,4,49],"137":[4,16,4,49],"145":[5,17,5,24],"153":[5,25,5,50],"161":[5,17,5,51],"169":[5,17,5,51],"177":[5,17,5,51],"185":[6,22,6,29],"193":[6,30,6,61],"201":[6,22,6,62],"209":[6,22,6,62],"217":[6,22,6,62],"225":[7,15,7,22],"233":[7,23,7,45],"241":[7,15,7,46],"249":[7,15,7,46],"257":[7,15,7,46],"265":[11,1,11,2],"273":[11,13,11,18],"281":[11,27,11,31],"289":[11,39,11,43],"297":[11,53,11,60],"305":[11,3,11,62],"313":[13,15,13,23],"321":[13,24,13,28],"329":[13,15,13,29],"337":[13,15,13,29],"345":[13,15,13,29],"353":[14,20,14,34],"361":[14,35,14,38],"369":[14,20,14,39],"377":[14,20,14,39],"385":[14,20,14,39],"393":[16,5,16,14],"401":[16,15,16,25],"409":[16,5,16,26],"417":[16,5,16,27],"425":[17,9,17,18],"433":[17,9,17,25],"441":[17,28,17,29],"449":[17,45,17,54],"457":[17,55,17,56],"465":[17,45,17,57],"473":[17,45,17,57],"481":[17,31,17,58],"489":[19,14,19,22],"497":[19,14,19,29],"499":[19,14,19,27],"505":[19,14,19,29],"513":[19,7,19,30],"521":[20,11,20,15],"529":[20,11,20,20],"537":[20,28,20,37],"545":[20,38,20,81],"553":[20,28,20,82],"561":[20,28,20,82],"569":[20,22,20,83],"577":[21,21,21,25],"585":[21,21,21,31],"593":[21,32,21,33],"601":[21,21,21,34],"609":[21,21,21,34],"617":[21,7,21,35],"625":[23,5,23,12],"633":[23,13,23,21],"641":[24,21,24,31],"649":[24,32,24,43],"657":[24,45,24,50],"665":[24,52,24,55],"673":[24,57,24,60],"681":[24,21,24,61],"689":[24,21,24,61],"697":[24,7,24,62],"705":[23,23,25,6],"713":[23,23,25,6],"721":[23,23,25,6],"729":[23,23,25,6],"737":[23,23,25,6],"745":[25,8,25,17],"753":[25,19,25,23],"761":[25,25,25,29],"769":[23,5,25,30],"777":[23,5,25,31],"785":[26,12,26,23],"793":[26,12,26,23],"801":[26,5,26,24],"809":[12,11,27,4],"817":[12,11,27,4],"825":[12,11,27,4],"833":[12,11,27,4],"841":[12,11,27,4],"849":[12,11,27,4],"857":[12,11,27,4],"865":[12,11,27,4],"873":[12,11,27,4],"881":[11,64,28,2],"889":[11,1,28,3],"897":[11,1,28,4],"905":[1,1,29,1],"913":[1,1,29,1],"921":[1,1,29,1],"929":[1,1,29,1],"937":[1,1,29,1],"945":[1,1,29,1],"953":[1,1,29,1],"961":[20,7,20,83],"969":[17,5,22,6],"977":[23,23,25,6],"985":[23,23,25,6],"993":[12,11,27,4],"1001":[12,11,27,4],"1009":[1,1,29,1],"1017":[1,1,29,1],"nBranches":4,"originalCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/esnext.map.reduce.js","instrumentedCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/modules/esnext.map.reduce_jalangi_.js","code":"'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar getMapIterator = require('../internals/get-map-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Map.prototype.reduce` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    var map = anObject(this);\n    var iterator = getMapIterator(map);\n    var accumulator, step;\n    aFunction(callbackfn);\n    if (arguments.length > 1) accumulator = arguments[1];\n    else {\n      step = iterator.next();\n      if (step.done) throw TypeError('Reduce of empty map with no initial value');\n      accumulator = step.value[1];\n    }\n    iterate(iterator, function (key, value) {\n      accumulator = callbackfn(accumulator, value, key, map);\n    }, undefined, true, true);\n    return accumulator;\n  }\n});\n"};
jalangiLabel1184:
    while (true) {
        try {
            J$.Se(905, '/home/blake/corejs_tests/node_modules/core-js/modules/esnext.map.reduce_jalangi_.js', '/home/blake/corejs_tests/node_modules/core-js/modules/esnext.map.reduce.js');
            J$.N(913, '$', $, 0);
            J$.N(921, 'IS_PURE', IS_PURE, 0);
            J$.N(929, 'anObject', anObject, 0);
            J$.N(937, 'aFunction', aFunction, 0);
            J$.N(945, 'getMapIterator', getMapIterator, 0);
            J$.N(953, 'iterate', iterate, 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var $ = J$.X1(57, J$.W(49, '$', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../internals/export', 21, false)), $, 3));
            var IS_PURE = J$.X1(97, J$.W(89, 'IS_PURE', J$.F(81, J$.R(65, 'require', require, 2), 0)(J$.T(73, '../internals/is-pure', 21, false)), IS_PURE, 3));
            var anObject = J$.X1(137, J$.W(129, 'anObject', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, '../internals/an-object', 21, false)), anObject, 3));
            var aFunction = J$.X1(177, J$.W(169, 'aFunction', J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, '../internals/a-function', 21, false)), aFunction, 3));
            var getMapIterator = J$.X1(217, J$.W(209, 'getMapIterator', J$.F(201, J$.R(185, 'require', require, 2), 0)(J$.T(193, '../internals/get-map-iterator', 21, false)), getMapIterator, 3));
            var iterate = J$.X1(257, J$.W(249, 'iterate', J$.F(241, J$.R(225, 'require', require, 2), 0)(J$.T(233, '../internals/iterate', 21, false)), iterate, 3));
            J$.X1(897, J$.F(889, J$.R(265, '$', $, 1), 0)(J$.T(305, {
                target: J$.T(273, 'Map', 21, false),
                proto: J$.T(281, true, 23, false),
                real: J$.T(289, true, 23, false),
                forced: J$.R(297, 'IS_PURE', IS_PURE, 1)
            }, 11, false), J$.T(881, {
                reduce: J$.T(873, function reduce(callbackfn) {
                    jalangiLabel1183:
                        while (true) {
                            try {
                                J$.Fe(809, arguments.callee, this, arguments);
                                arguments = J$.N(817, 'arguments', arguments, 4);
                                reduce = J$.N(825, 'reduce', reduce, 0);
                                callbackfn = J$.N(833, 'callbackfn', callbackfn, 4);
                                J$.N(841, 'map', map, 0);
                                J$.N(849, 'iterator', iterator, 0);
                                J$.N(857, 'accumulator', accumulator, 0);
                                J$.N(865, 'step', step, 0);
                                var map = J$.X1(345, J$.W(337, 'map', J$.F(329, J$.R(313, 'anObject', anObject, 1), 0)(J$.R(321, 'this', this, 0)), map, 1));
                                var iterator = J$.X1(385, J$.W(377, 'iterator', J$.F(369, J$.R(353, 'getMapIterator', getMapIterator, 1), 0)(J$.R(361, 'map', map, 0)), iterator, 1));
                                var accumulator, step;
                                J$.X1(417, J$.F(409, J$.R(393, 'aFunction', aFunction, 1), 0)(J$.R(401, 'callbackfn', callbackfn, 0)));
                                if (J$.X1(969, J$.C(16, J$.B(10, '>', J$.G(433, J$.R(425, 'arguments', arguments, 2), 'length', 0), J$.T(441, 1, 22, false), 0))))
                                    J$.X1(481, accumulator = J$.W(473, 'accumulator', J$.G(465, J$.R(449, 'arguments', arguments, 2), J$.T(457, 1, 22, false), 4), accumulator, 0));
                                else {
                                    J$.X1(513, step = J$.W(505, 'step', J$.M(497, J$.R(489, 'iterator', iterator, 0), 'next', 0)(), step, 0));
                                    if (J$.X1(961, J$.C(8, J$.G(529, J$.R(521, 'step', step, 0), 'done', 0))))
                                        throw J$.X1(569, J$.Th(561, J$.F(553, J$.R(537, 'TypeError', TypeError, 2), 0)(J$.T(545, 'Reduce of empty map with no initial value', 21, false))));
                                    J$.X1(617, accumulator = J$.W(609, 'accumulator', J$.G(601, J$.G(585, J$.R(577, 'step', step, 0), 'value', 0), J$.T(593, 1, 22, false), 4), accumulator, 0));
                                }
                                J$.X1(777, J$.F(769, J$.R(625, 'iterate', iterate, 1), 0)(J$.R(633, 'iterator', iterator, 0), J$.T(737, function (key, value) {
                                    jalangiLabel1182:
                                        while (true) {
                                            try {
                                                J$.Fe(705, arguments.callee, this, arguments);
                                                arguments = J$.N(713, 'arguments', arguments, 4);
                                                key = J$.N(721, 'key', key, 4);
                                                value = J$.N(729, 'value', value, 4);
                                                J$.X1(697, accumulator = J$.W(689, 'accumulator', J$.F(681, J$.R(641, 'callbackfn', callbackfn, 0), 0)(J$.R(649, 'accumulator', accumulator, 0), J$.R(657, 'value', value, 0), J$.R(665, 'key', key, 0), J$.R(673, 'map', map, 0)), accumulator, 0));
                                            } catch (J$e) {
                                                J$.Ex(977, J$e);
                                            } finally {
                                                if (J$.Fr(985))
                                                    continue jalangiLabel1182;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 705), J$.T(745, undefined, 24, false), J$.T(753, true, 23, false), J$.T(761, true, 23, false)));
                                return J$.X1(801, J$.Rt(793, J$.R(785, 'accumulator', accumulator, 0)));
                            } catch (J$e) {
                                J$.Ex(993, J$e);
                            } finally {
                                if (J$.Fr(1001))
                                    continue jalangiLabel1183;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 809)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(1009, J$e);
        } finally {
            if (J$.Sr(1017)) {
                J$.L();
                continue jalangiLabel1184;
            } else {
                J$.L();
                break jalangiLabel1184;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
