J$.iids = {"8":[22,14,22,50],"9":[1,1,1,13],"10":[22,36,22,50],"16":[22,14,22,67],"17":[1,1,1,14],"18":[28,12,28,35],"24":[28,12,28,35],"25":[2,9,2,16],"33":[2,17,2,38],"41":[2,9,2,39],"49":[2,9,2,39],"57":[2,9,2,39],"65":[3,17,3,24],"73":[3,25,3,50],"81":[3,17,3,51],"89":[3,17,3,51],"97":[3,17,3,51],"105":[4,16,4,23],"113":[4,24,4,48],"121":[4,16,4,49],"129":[4,16,4,49],"137":[4,16,4,49],"145":[5,13,5,20],"153":[5,21,5,41],"161":[5,13,5,42],"169":[5,13,5,42],"177":[5,13,5,42],"185":[6,25,6,32],"193":[6,33,6,67],"201":[6,25,6,68],"209":[6,25,6,68],"217":[6,25,6,68],"225":[8,18,8,20],"233":[8,18,8,25],"241":[8,18,8,25],"249":[8,18,8,25],"257":[9,13,9,14],"265":[9,16,9,17],"273":[9,19,9,20],"281":[9,12,9,21],"289":[9,12,9,21],"297":[9,12,9,21],"305":[12,26,12,31],"313":[13,3,13,7],"321":[13,13,13,22],"329":[13,3,13,23],"331":[13,3,13,12],"337":[13,3,13,24],"345":[12,32,14,2],"353":[12,32,14,2],"361":[12,32,14,2],"369":[12,26,14,3],"377":[12,26,14,3],"385":[12,26,14,3],"393":[16,21,16,26],"401":[17,3,17,7],"409":[17,13,17,17],"417":[17,3,17,18],"419":[17,3,17,12],"425":[17,3,17,19],"433":[16,27,18,2],"441":[16,27,18,2],"449":[16,27,18,2],"457":[16,21,18,3],"465":[16,21,18,3],"473":[16,21,18,3],"481":[20,21,20,38],"489":[20,39,20,45],"497":[20,21,20,46],"505":[20,21,20,46],"513":[20,21,20,46],"521":[22,14,22,32],"529":[22,37,22,50],"537":[22,54,22,67],"545":[22,14,22,67],"553":[22,14,22,67],"561":[26,1,26,2],"569":[26,13,26,20],"577":[26,29,26,33],"585":[26,43,26,49],"593":[26,3,26,51],"601":[28,12,28,21],"609":[28,26,28,35],"617":[29,9,29,19],"625":[29,25,29,33],"633":[29,34,29,38],"641":[29,25,29,39],"649":[29,9,29,40],"651":[29,9,29,24],"657":[30,9,30,19],"665":[30,25,30,33],"673":[30,34,30,38],"681":[30,25,30,39],"689":[30,41,30,50],"697":[30,51,30,60],"705":[30,41,30,61],"713":[30,9,30,62],"715":[30,9,30,24],"721":[28,12,30,62],"729":[28,5,30,63],"737":[27,9,31,4],"745":[27,9,31,4],"753":[27,9,31,4],"761":[27,9,31,4],"769":[27,9,31,4],"777":[26,53,32,2],"785":[26,1,32,3],"793":[26,1,32,4],"801":[1,1,33,1],"809":[1,1,33,1],"817":[1,1,33,1],"825":[1,1,33,1],"833":[1,1,33,1],"841":[1,1,33,1],"849":[1,1,33,1],"857":[1,1,33,1],"865":[1,1,33,1],"873":[1,1,33,1],"881":[1,1,33,1],"889":[1,1,33,1],"897":[12,32,14,2],"905":[12,32,14,2],"913":[16,27,18,2],"921":[16,27,18,2],"929":[28,12,30,62],"937":[27,9,31,4],"945":[27,9,31,4],"953":[1,1,33,1],"961":[1,1,33,1],"nBranches":6,"originalCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/es.array.sort.js","instrumentedCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/es.array.sort_jalangi_.js","code":"'use strict';\nvar $ = require('../internals/export');\nvar aFunction = require('../internals/a-function');\nvar toObject = require('../internals/to-object');\nvar fails = require('../internals/fails');\nvar sloppyArrayMethod = require('../internals/sloppy-array-method');\n\nvar nativeSort = [].sort;\nvar test = [1, 2, 3];\n\n// IE8-\nvar FAILS_ON_UNDEFINED = fails(function () {\n  test.sort(undefined);\n});\n// V8 bug\nvar FAILS_ON_NULL = fails(function () {\n  test.sort(null);\n});\n// Old WebKit\nvar SLOPPY_METHOD = sloppyArrayMethod('sort');\n\nvar FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || SLOPPY_METHOD;\n\n// `Array.prototype.sort` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.sort\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? nativeSort.call(toObject(this))\n      : nativeSort.call(toObject(this), aFunction(comparefn));\n  }\n});\n"};
jalangiLabel391:
    while (true) {
        try {
            J$.Se(801, '/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/es.array.sort_jalangi_.js', '/home/blake/PhD/corejs/scanner/node_modules/core-js/modules/es.array.sort.js');
            J$.N(809, '$', $, 0);
            J$.N(817, 'aFunction', aFunction, 0);
            J$.N(825, 'toObject', toObject, 0);
            J$.N(833, 'fails', fails, 0);
            J$.N(841, 'sloppyArrayMethod', sloppyArrayMethod, 0);
            J$.N(849, 'nativeSort', nativeSort, 0);
            J$.N(857, 'test', test, 0);
            J$.N(865, 'FAILS_ON_UNDEFINED', FAILS_ON_UNDEFINED, 0);
            J$.N(873, 'FAILS_ON_NULL', FAILS_ON_NULL, 0);
            J$.N(881, 'SLOPPY_METHOD', SLOPPY_METHOD, 0);
            J$.N(889, 'FORCED', FORCED, 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var $ = J$.X1(57, J$.W(49, '$', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../internals/export', 21, false)), $, 3));
            var aFunction = J$.X1(97, J$.W(89, 'aFunction', J$.F(81, J$.R(65, 'require', require, 2), 0)(J$.T(73, '../internals/a-function', 21, false)), aFunction, 3));
            var toObject = J$.X1(137, J$.W(129, 'toObject', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, '../internals/to-object', 21, false)), toObject, 3));
            var fails = J$.X1(177, J$.W(169, 'fails', J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, '../internals/fails', 21, false)), fails, 3));
            var sloppyArrayMethod = J$.X1(217, J$.W(209, 'sloppyArrayMethod', J$.F(201, J$.R(185, 'require', require, 2), 0)(J$.T(193, '../internals/sloppy-array-method', 21, false)), sloppyArrayMethod, 3));
            var nativeSort = J$.X1(249, J$.W(241, 'nativeSort', J$.G(233, J$.T(225, [], 10, false), 'sort', 0), nativeSort, 3));
            var test = J$.X1(297, J$.W(289, 'test', J$.T(281, [
                J$.T(257, 1, 22, false),
                J$.T(265, 2, 22, false),
                J$.T(273, 3, 22, false)
            ], 10, false), test, 3));
            var FAILS_ON_UNDEFINED = J$.X1(385, J$.W(377, 'FAILS_ON_UNDEFINED', J$.F(369, J$.R(305, 'fails', fails, 1), 0)(J$.T(361, function () {
                jalangiLabel388:
                    while (true) {
                        try {
                            J$.Fe(345, arguments.callee, this, arguments);
                            arguments = J$.N(353, 'arguments', arguments, 4);
                            J$.X1(337, J$.M(329, J$.R(313, 'test', test, 1), 'sort', 0)(J$.T(321, undefined, 24, false)));
                        } catch (J$e) {
                            J$.Ex(897, J$e);
                        } finally {
                            if (J$.Fr(905))
                                continue jalangiLabel388;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 345)), FAILS_ON_UNDEFINED, 3));
            var FAILS_ON_NULL = J$.X1(473, J$.W(465, 'FAILS_ON_NULL', J$.F(457, J$.R(393, 'fails', fails, 1), 0)(J$.T(449, function () {
                jalangiLabel389:
                    while (true) {
                        try {
                            J$.Fe(433, arguments.callee, this, arguments);
                            arguments = J$.N(441, 'arguments', arguments, 4);
                            J$.X1(425, J$.M(417, J$.R(401, 'test', test, 1), 'sort', 0)(J$.T(409, null, 25, false)));
                        } catch (J$e) {
                            J$.Ex(913, J$e);
                        } finally {
                            if (J$.Fr(921))
                                continue jalangiLabel389;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 433)), FAILS_ON_NULL, 3));
            var SLOPPY_METHOD = J$.X1(513, J$.W(505, 'SLOPPY_METHOD', J$.F(497, J$.R(481, 'sloppyArrayMethod', sloppyArrayMethod, 1), 0)(J$.T(489, 'sort', 21, false)), SLOPPY_METHOD, 3));
            var FORCED = J$.X1(553, J$.W(545, 'FORCED', J$.C(16, J$.C(8, J$.R(521, 'FAILS_ON_UNDEFINED', FAILS_ON_UNDEFINED, 1)) ? J$._() : J$.U(10, '!', J$.R(529, 'FAILS_ON_NULL', FAILS_ON_NULL, 1))) ? J$._() : J$.R(537, 'SLOPPY_METHOD', SLOPPY_METHOD, 1), FORCED, 3));
            J$.X1(793, J$.F(785, J$.R(561, '$', $, 1), 0)(J$.T(593, {
                target: J$.T(569, 'Array', 21, false),
                proto: J$.T(577, true, 23, false),
                forced: J$.R(585, 'FORCED', FORCED, 1)
            }, 11, false), J$.T(777, {
                sort: J$.T(769, function sort(comparefn) {
                    jalangiLabel390:
                        while (true) {
                            try {
                                J$.Fe(737, arguments.callee, this, arguments);
                                arguments = J$.N(745, 'arguments', arguments, 4);
                                sort = J$.N(753, 'sort', sort, 0);
                                comparefn = J$.N(761, 'comparefn', comparefn, 4);
                                return J$.X1(729, J$.Rt(721, J$.X1(929, J$.C(24, J$.B(18, '===', J$.R(601, 'comparefn', comparefn, 0), J$.T(609, undefined, 24, false), 0))) ? J$.M(649, J$.R(617, 'nativeSort', nativeSort, 1), 'call', 0)(J$.F(641, J$.R(625, 'toObject', toObject, 1), 0)(J$.R(633, 'this', this, 0))) : J$.M(713, J$.R(657, 'nativeSort', nativeSort, 1), 'call', 0)(J$.F(681, J$.R(665, 'toObject', toObject, 1), 0)(J$.R(673, 'this', this, 0)), J$.F(705, J$.R(689, 'aFunction', aFunction, 1), 0)(J$.R(697, 'comparefn', comparefn, 0)))));
                            } catch (J$e) {
                                J$.Ex(937, J$e);
                            } finally {
                                if (J$.Fr(945))
                                    continue jalangiLabel390;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 737)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(953, J$e);
        } finally {
            if (J$.Sr(961)) {
                J$.L();
                continue jalangiLabel391;
            } else {
                J$.L();
                break jalangiLabel391;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
