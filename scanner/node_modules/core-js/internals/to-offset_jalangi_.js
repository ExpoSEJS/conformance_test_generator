J$.iids = {"8":[5,7,5,35],"9":[1,17,1,24],"10":[5,7,5,17],"16":[5,7,5,35],"17":[1,25,1,50],"18":[5,21,5,35],"25":[1,17,1,51],"33":[1,17,1,51],"41":[1,17,1,51],"49":[3,1,3,7],"57":[4,16,4,25],"65":[4,26,4,28],"73":[4,16,4,29],"81":[4,16,4,29],"89":[4,16,4,29],"97":[5,7,5,13],"105":[5,16,5,17],"113":[5,21,5,27],"121":[5,30,5,35],"129":[5,43,5,53],"137":[5,54,5,68],"145":[5,43,5,69],"153":[5,43,5,69],"161":[5,37,5,70],"169":[6,10,6,16],"177":[6,10,6,16],"185":[6,3,6,17],"193":[3,18,7,2],"201":[3,18,7,2],"209":[3,18,7,2],"217":[3,18,7,2],"225":[3,18,7,2],"233":[3,18,7,2],"241":[3,1,7,2],"249":[3,1,7,3],"257":[1,1,8,1],"265":[1,1,8,1],"273":[5,3,5,70],"281":[3,18,7,2],"289":[3,18,7,2],"297":[1,1,8,1],"305":[1,1,8,1],"nBranches":4,"originalCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/internals/to-offset.js","instrumentedCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/internals/to-offset_jalangi_.js","code":"var toInteger = require('../internals/to-integer');\n\nmodule.exports = function (it, BYTES) {\n  var offset = toInteger(it);\n  if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset');\n  return offset;\n};\n"};
jalangiLabel884:
    while (true) {
        try {
            J$.Se(257, '/home/blake/corejs_tests/node_modules/core-js/internals/to-offset_jalangi_.js', '/home/blake/corejs_tests/node_modules/core-js/internals/to-offset.js');
            J$.N(265, 'toInteger', toInteger, 0);
            var toInteger = J$.X1(41, J$.W(33, 'toInteger', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../internals/to-integer', 21, false)), toInteger, 3));
            J$.X1(249, J$.P(241, J$.R(49, 'module', module, 2), 'exports', J$.T(233, function (it, BYTES) {
                jalangiLabel883:
                    while (true) {
                        try {
                            J$.Fe(193, arguments.callee, this, arguments);
                            arguments = J$.N(201, 'arguments', arguments, 4);
                            it = J$.N(209, 'it', it, 4);
                            BYTES = J$.N(217, 'BYTES', BYTES, 4);
                            J$.N(225, 'offset', offset, 0);
                            var offset = J$.X1(89, J$.W(81, 'offset', J$.F(73, J$.R(57, 'toInteger', toInteger, 1), 0)(J$.R(65, 'it', it, 0)), offset, 1));
                            if (J$.X1(273, J$.C(16, J$.C(8, J$.B(10, '<', J$.R(97, 'offset', offset, 0), J$.T(105, 0, 22, false), 0)) ? J$._() : J$.B(18, '%', J$.R(113, 'offset', offset, 0), J$.R(121, 'BYTES', BYTES, 0), 0))))
                                throw J$.X1(161, J$.Th(153, J$.F(145, J$.R(129, 'RangeError', RangeError, 2), 0)(J$.T(137, 'Wrong offset', 21, false))));
                            return J$.X1(185, J$.Rt(177, J$.R(169, 'offset', offset, 0)));
                        } catch (J$e) {
                            J$.Ex(281, J$e);
                        } finally {
                            if (J$.Fr(289))
                                continue jalangiLabel883;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 193), 0));
        } catch (J$e) {
            J$.Ex(297, J$e);
        } finally {
            if (J$.Sr(305)) {
                J$.L();
                continue jalangiLabel884;
            } else {
                J$.L();
                break jalangiLabel884;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
