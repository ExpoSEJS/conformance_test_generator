J$.iids = {"8":[7,18,13,3],"9":[1,1,1,13],"10":[12,3,12,21],"17":[1,1,1,14],"18":[7,29,13,3],"25":[2,15,2,22],"33":[2,23,2,45],"41":[2,15,2,46],"49":[2,15,2,46],"57":[2,15,2,46],"65":[3,14,3,21],"73":[3,22,3,43],"81":[3,14,3,44],"89":[3,14,3,44],"97":[3,14,3,44],"105":[4,13,4,20],"113":[4,21,4,41],"121":[4,13,4,42],"129":[4,13,4,42],"137":[4,13,4,42],"145":[7,1,7,7],"153":[7,18,7,25],"161":[7,30,7,35],"169":[8,13,8,17],"177":[8,13,8,26],"179":[8,13,8,24],"185":[8,13,8,26],"193":[8,13,8,26],"201":[11,3,11,19],"209":[11,25,11,29],"217":[11,31,11,34],"225":[11,36,11,63],"233":[11,36,11,63],"241":[11,36,11,63],"249":[11,3,11,64],"251":[11,3,11,24],"257":[11,3,11,65],"265":[12,10,12,16],"273":[12,17,12,20],"281":[12,3,12,22],"289":[7,36,13,2],"297":[7,36,13,2],"305":[7,36,13,2],"313":[7,36,13,2],"321":[7,30,13,3],"329":[7,1,13,3],"337":[7,1,13,4],"345":[1,1,14,1],"353":[1,1,14,1],"361":[1,1,14,1],"369":[1,1,14,1],"377":[11,36,11,63],"385":[11,36,11,63],"393":[7,36,13,2],"401":[7,36,13,2],"409":[1,1,14,1],"417":[1,1,14,1],"nBranches":2,"originalCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/internals/forced-object-prototype-accessors-methods.js","instrumentedCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/internals/forced-object-prototype-accessors-methods_jalangi_.js","code":"'use strict';\nvar IS_PURE = require('../internals/is-pure');\nvar global = require('../internals/global');\nvar fails = require('../internals/fails');\n\n// Forced replacement object prototype accessors methods\nmodule.exports = IS_PURE || !fails(function () {\n  var key = Math.random();\n  // In FF throws only define methods\n  // eslint-disable-next-line no-undef, no-useless-call\n  __defineSetter__.call(null, key, function () { /* empty */ });\n  delete global[key];\n});\n"};
jalangiLabel292:
    while (true) {
        try {
            J$.Se(345, '/home/blake/PhD/corejs/scanner/node_modules/core-js/internals/forced-object-prototype-accessors-methods_jalangi_.js', '/home/blake/PhD/corejs/scanner/node_modules/core-js/internals/forced-object-prototype-accessors-methods.js');
            J$.N(353, 'IS_PURE', IS_PURE, 0);
            J$.N(361, 'global', global, 0);
            J$.N(369, 'fails', fails, 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var IS_PURE = J$.X1(57, J$.W(49, 'IS_PURE', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../internals/is-pure', 21, false)), IS_PURE, 3));
            var global = J$.X1(97, J$.W(89, 'global', J$.F(81, J$.R(65, 'require', require, 2), 0)(J$.T(73, '../internals/global', 21, false)), global, 3));
            var fails = J$.X1(137, J$.W(129, 'fails', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, '../internals/fails', 21, false)), fails, 3));
            J$.X1(337, J$.P(329, J$.R(145, 'module', module, 2), 'exports', J$.C(8, J$.R(153, 'IS_PURE', IS_PURE, 1)) ? J$._() : J$.U(18, '!', J$.F(321, J$.R(161, 'fails', fails, 1), 0)(J$.T(313, function () {
                jalangiLabel291:
                    while (true) {
                        try {
                            J$.Fe(289, arguments.callee, this, arguments);
                            arguments = J$.N(297, 'arguments', arguments, 4);
                            J$.N(305, 'key', key, 0);
                            var key = J$.X1(193, J$.W(185, 'key', J$.M(177, J$.R(169, 'Math', Math, 2), 'random', 0)(), key, 1));
                            J$.X1(257, J$.M(249, J$.R(201, '__defineSetter__', __defineSetter__, 2), 'call', 0)(J$.T(209, null, 25, false), J$.R(217, 'key', key, 0), J$.T(241, function () {
                                jalangiLabel290:
                                    while (true) {
                                        try {
                                            J$.Fe(225, arguments.callee, this, arguments);
                                            arguments = J$.N(233, 'arguments', arguments, 4);
                                        } catch (J$e) {
                                            J$.Ex(377, J$e);
                                        } finally {
                                            if (J$.Fr(385))
                                                continue jalangiLabel290;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 225)));
                            J$.X1(281, J$.B(10, 'delete', J$.R(265, 'global', global, 1), J$.R(273, 'key', key, 0), 4));
                        } catch (J$e) {
                            J$.Ex(393, J$e);
                        } finally {
                            if (J$.Fr(401))
                                continue jalangiLabel291;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 289))), 0));
        } catch (J$e) {
            J$.Ex(409, J$e);
        } finally {
            if (J$.Sr(417)) {
                J$.L();
                continue jalangiLabel292;
            } else {
                J$.L();
                break jalangiLabel292;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
