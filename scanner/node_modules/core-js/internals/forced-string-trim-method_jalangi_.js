J$.iids = {"8":[10,12,10,69],"9":[1,13,1,20],"10":[10,13,10,40],"16":[10,12,10,118],"17":[1,21,1,41],"18":[10,12,10,40],"25":[1,13,1,42],"26":[10,44,10,69],"33":[1,13,1,42],"34":[10,73,10,118],"41":[1,13,1,42],"49":[2,19,2,26],"57":[2,27,2,53],"65":[2,19,2,54],"73":[2,19,2,54],"81":[2,19,2,54],"89":[4,11,4,31],"97":[4,11,4,31],"105":[4,11,4,31],"113":[8,1,8,7],"121":[9,10,9,15],"129":[10,14,10,25],"137":[10,26,10,37],"145":[10,14,10,40],"147":[10,14,10,38],"153":[10,44,10,47],"161":[10,48,10,59],"169":[10,44,10,62],"171":[10,44,10,60],"177":[10,66,10,69],"185":[10,73,10,84],"193":[10,85,10,96],"201":[10,73,10,97],"209":[10,73,10,102],"217":[10,107,10,118],"225":[10,12,10,118],"233":[10,5,10,119],"241":[9,16,11,4],"249":[9,16,11,4],"257":[9,16,11,4],"265":[9,10,11,5],"273":[9,10,11,5],"281":[9,3,11,6],"289":[8,18,12,2],"297":[8,18,12,2],"305":[8,18,12,2],"313":[8,18,12,2],"321":[8,1,12,2],"329":[8,1,12,3],"337":[1,1,13,1],"345":[1,1,13,1],"353":[1,1,13,1],"361":[1,1,13,1],"369":[9,16,11,4],"377":[9,16,11,4],"385":[8,18,12,2],"393":[8,18,12,2],"401":[1,1,13,1],"409":[1,1,13,1],"nBranches":4,"originalCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/internals/forced-string-trim-method.js","instrumentedCodeFileName":"/home/blake/corejs_tests/node_modules/core-js/internals/forced-string-trim-method_jalangi_.js","code":"var fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n"};
jalangiLabel512:
    while (true) {
        try {
            J$.Se(337, '/home/blake/corejs_tests/node_modules/core-js/internals/forced-string-trim-method_jalangi_.js', '/home/blake/corejs_tests/node_modules/core-js/internals/forced-string-trim-method.js');
            J$.N(345, 'fails', fails, 0);
            J$.N(353, 'whitespaces', whitespaces, 0);
            J$.N(361, 'non', non, 0);
            var fails = J$.X1(41, J$.W(33, 'fails', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../internals/fails', 21, false)), fails, 3));
            var whitespaces = J$.X1(81, J$.W(73, 'whitespaces', J$.F(65, J$.R(49, 'require', require, 2), 0)(J$.T(57, '../internals/whitespaces', 21, false)), whitespaces, 3));
            var non = J$.X1(105, J$.W(97, 'non', J$.T(89, '\u200B\u0085\u180E', 21, false), non, 3));
            J$.X1(329, J$.P(321, J$.R(113, 'module', module, 2), 'exports', J$.T(313, function (METHOD_NAME) {
                jalangiLabel511:
                    while (true) {
                        try {
                            J$.Fe(289, arguments.callee, this, arguments);
                            arguments = J$.N(297, 'arguments', arguments, 4);
                            METHOD_NAME = J$.N(305, 'METHOD_NAME', METHOD_NAME, 4);
                            return J$.X1(281, J$.Rt(273, J$.F(265, J$.R(121, 'fails', fails, 1), 0)(J$.T(257, function () {
                                jalangiLabel510:
                                    while (true) {
                                        try {
                                            J$.Fe(241, arguments.callee, this, arguments);
                                            arguments = J$.N(249, 'arguments', arguments, 4);
                                            return J$.X1(233, J$.Rt(225, J$.C(16, J$.C(8, J$.U(18, '!', J$.U(10, '!', J$.M(145, J$.R(129, 'whitespaces', whitespaces, 1), J$.R(137, 'METHOD_NAME', METHOD_NAME, 0), 1)()))) ? J$._() : J$.B(26, '!=', J$.M(169, J$.R(153, 'non', non, 1), J$.R(161, 'METHOD_NAME', METHOD_NAME, 0), 1)(), J$.R(177, 'non', non, 1), 0)) ? J$._() : J$.B(34, '!==', J$.G(209, J$.G(201, J$.R(185, 'whitespaces', whitespaces, 1), J$.R(193, 'METHOD_NAME', METHOD_NAME, 0), 4), 'name', 0), J$.R(217, 'METHOD_NAME', METHOD_NAME, 0), 0)));
                                        } catch (J$e) {
                                            J$.Ex(369, J$e);
                                        } finally {
                                            if (J$.Fr(377))
                                                continue jalangiLabel510;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 241))));
                        } catch (J$e) {
                            J$.Ex(385, J$e);
                        } finally {
                            if (J$.Fr(393))
                                continue jalangiLabel511;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 289), 0));
        } catch (J$e) {
            J$.Ex(401, J$e);
        } finally {
            if (J$.Sr(409)) {
                J$.L();
                continue jalangiLabel512;
            } else {
                J$.L();
                break jalangiLabel512;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
