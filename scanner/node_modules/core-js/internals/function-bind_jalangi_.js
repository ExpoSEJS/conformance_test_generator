J$.iids = {"8":[10,32,10,46],"9":[1,1,1,13],"10":[9,9,9,32],"16":[9,7,9,33],"17":[1,1,1,14],"18":[9,7,9,33],"24":[23,12,23,41],"25":[2,17,2,24],"26":[10,32,10,46],"32":[25,7,25,29],"33":[2,25,2,50],"34":[10,48,10,51],"40":[18,18,27,2],"41":[2,17,2,51],"49":[2,17,2,51],"50":[10,48,10,51],"57":[2,17,2,51],"58":[10,63,10,71],"65":[3,16,3,23],"66":[10,63,10,77],"73":[3,24,3,48],"74":[12,45,12,77],"81":[3,16,3,49],"82":[12,45,12,83],"89":[3,16,3,49],"90":[23,12,23,41],"97":[3,16,3,49],"105":[5,13,5,15],"113":[5,13,5,21],"121":[5,13,5,21],"129":[5,13,5,21],"137":[6,17,6,19],"145":[6,17,6,19],"153":[6,17,6,19],"161":[9,9,9,19],"169":[9,23,9,32],"177":[10,21,10,23],"185":[10,29,10,30],"193":[10,21,10,23],"201":[10,21,10,23],"209":[10,29,10,30],"217":[10,29,10,30],"225":[10,32,10,33],"233":[10,36,10,46],"249":[10,48,10,49],"257":[10,48,10,51],"273":[10,53,10,57],"281":[10,58,10,59],"289":[10,63,10,67],"297":[10,70,10,71],"305":[10,74,10,77],"313":[10,53,10,77],"321":[10,53,10,78],"329":[12,5,12,14],"337":[12,15,12,25],"345":[12,29,12,37],"353":[12,38,12,43],"361":[12,45,12,60],"369":[12,63,12,67],"377":[12,73,12,76],"385":[12,63,12,77],"387":[12,63,12,72],"393":[12,80,12,83],"401":[12,29,12,84],"409":[12,5,12,84],"417":[12,5,12,85],"425":[13,12,13,21],"433":[13,22,13,32],"441":[13,34,13,35],"449":[13,37,13,41],"457":[13,12,13,42],"459":[13,12,13,33],"465":[13,12,13,42],"473":[13,5,13,43],"481":[8,17,14,2],"489":[8,17,14,2],"497":[8,17,14,2],"505":[8,17,14,2],"513":[8,17,14,2],"521":[8,17,14,2],"529":[8,17,14,2],"537":[8,17,14,2],"545":[8,17,14,2],"553":[8,17,14,2],"561":[18,1,18,7],"569":[18,18,18,26],"577":[18,18,18,31],"585":[19,12,19,21],"593":[19,22,19,26],"601":[19,12,19,27],"609":[19,12,19,27],"617":[19,12,19,27],"625":[20,18,20,23],"633":[20,29,20,38],"641":[20,40,20,41],"649":[20,18,20,42],"651":[20,18,20,28],"657":[20,18,20,42],"665":[20,18,20,42],"673":[22,16,22,24],"681":[22,32,22,37],"689":[22,43,22,52],"697":[22,32,22,53],"699":[22,32,22,42],"705":[22,16,22,54],"707":[22,16,22,31],"713":[22,16,22,54],"721":[22,16,22,54],"729":[23,12,23,16],"737":[23,28,23,41],"745":[23,44,23,53],"753":[23,54,23,56],"761":[23,58,23,62],"769":[23,58,23,69],"777":[23,71,23,75],"785":[23,44,23,76],"793":[23,79,23,81],"801":[23,88,23,92],"809":[23,94,23,98],"817":[23,79,23,99],"819":[23,79,23,87],"825":[23,12,23,99],"833":[23,5,23,100],"841":[21,23,24,4],"849":[21,23,24,4],"857":[21,23,24,4],"865":[21,23,24,4],"873":[21,23,24,4],"881":[21,23,24,4],"889":[21,23,24,4],"897":[25,7,25,15],"905":[25,16,25,18],"913":[25,16,25,28],"921":[25,7,25,29],"929":[25,31,25,44],"937":[25,57,25,59],"945":[25,57,25,69],"953":[25,31,25,69],"961":[25,31,25,70],"969":[26,10,26,23],"977":[26,10,26,23],"985":[26,3,26,24],"993":[18,35,27,2],"1001":[18,35,27,2],"1009":[18,35,27,2],"1017":[18,35,27,2],"1025":[18,35,27,2],"1033":[18,35,27,2],"1041":[18,35,27,2],"1049":[18,35,27,2],"1057":[18,1,27,2],"1065":[18,1,27,3],"1073":[1,1,28,1],"1081":[1,1,28,1],"1089":[1,1,28,1],"1097":[1,1,28,1],"1105":[1,1,28,1],"1113":[1,1,28,1],"1121":[10,5,10,78],"1129":[10,5,10,78],"1137":[9,3,13,4],"1145":[8,17,14,2],"1153":[8,17,14,2],"1161":[23,12,23,99],"1169":[21,23,24,4],"1177":[21,23,24,4],"1185":[25,3,25,70],"1193":[18,35,27,2],"1201":[18,35,27,2],"1209":[1,1,28,1],"1217":[1,1,28,1],"nBranches":10,"originalCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/internals/function-bind.js","instrumentedCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/internals/function-bind_jalangi_.js","code":"'use strict';\nvar aFunction = require('../internals/a-function');\nvar isObject = require('../internals/is-object');\n\nvar slice = [].slice;\nvar factories = {};\n\nvar construct = function (C, argsLength, args) {\n  if (!(argsLength in factories)) {\n    for (var list = [], i = 0; i < argsLength; i++) list[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func\n    factories[argsLength] = Function('C,a', 'return new C(' + list.join(',') + ')');\n  } return factories[argsLength](C, args);\n};\n\n// `Function.prototype.bind` method implementation\n// https://tc39.github.io/ecma262/#sec-function.prototype.bind\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = slice.call(arguments, 1);\n  var boundFunction = function bound(/* args... */) {\n    var args = partArgs.concat(slice.call(arguments));\n    return this instanceof boundFunction ? construct(fn, args.length, args) : fn.apply(that, args);\n  };\n  if (isObject(fn.prototype)) boundFunction.prototype = fn.prototype;\n  return boundFunction;\n};\n"};
jalangiLabel303:
    while (true) {
        try {
            J$.Se(1073, '/home/blake/PhD/corejs/scanner/node_modules/core-js/internals/function-bind_jalangi_.js', '/home/blake/PhD/corejs/scanner/node_modules/core-js/internals/function-bind.js');
            J$.N(1081, 'aFunction', aFunction, 0);
            J$.N(1089, 'isObject', isObject, 0);
            J$.N(1097, 'slice', slice, 0);
            J$.N(1105, 'factories', factories, 0);
            J$.N(1113, 'construct', construct, 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var aFunction = J$.X1(57, J$.W(49, 'aFunction', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, '../internals/a-function', 21, false)), aFunction, 3));
            var isObject = J$.X1(97, J$.W(89, 'isObject', J$.F(81, J$.R(65, 'require', require, 2), 0)(J$.T(73, '../internals/is-object', 21, false)), isObject, 3));
            var slice = J$.X1(129, J$.W(121, 'slice', J$.G(113, J$.T(105, [], 10, false), 'slice', 0), slice, 3));
            var factories = J$.X1(153, J$.W(145, 'factories', J$.T(137, {}, 11, false), factories, 3));
            var construct = J$.X1(553, J$.W(545, 'construct', J$.T(537, function (C, argsLength, args) {
                jalangiLabel300:
                    while (true) {
                        try {
                            J$.Fe(481, arguments.callee, this, arguments);
                            arguments = J$.N(489, 'arguments', arguments, 4);
                            C = J$.N(497, 'C', C, 4);
                            argsLength = J$.N(505, 'argsLength', argsLength, 4);
                            args = J$.N(513, 'args', args, 4);
                            J$.N(521, 'list', list, 0);
                            J$.N(529, 'i', i, 0);
                            if (J$.X1(1137, J$.C(16, J$.U(18, '!', J$.B(10, 'in', J$.R(161, 'argsLength', argsLength, 0), J$.R(169, 'factories', factories, 1), 0))))) {
                                for (var list = J$.X1(201, J$.W(193, 'list', J$.T(177, [], 10, false), list, 1)), i = J$.X1(217, J$.W(209, 'i', J$.T(185, 0, 22, false), i, 1)); J$.X1(1121, J$.C(8, J$.B(26, '<', J$.R(225, 'i', i, 0), J$.R(233, 'argsLength', argsLength, 0), 0))); J$.X1(1129, J$.B(50, '-', i = J$.W(257, 'i', J$.B(42, '+', J$.U(34, '+', J$.R(249, 'i', i, 0)), J$.T(241, 1, 22, false), 0), i, 0), J$.T(265, 1, 22, false), 0)))
                                    J$.X1(321, J$.P(313, J$.R(273, 'list', list, 0), J$.R(281, 'i', i, 0), J$.B(66, '+', J$.B(58, '+', J$.T(289, 'a[', 21, false), J$.R(297, 'i', i, 0), 0), J$.T(305, ']', 21, false), 0), 2));
                                J$.X1(417, J$.P(409, J$.R(329, 'factories', factories, 1), J$.R(337, 'argsLength', argsLength, 0), J$.F(401, J$.R(345, 'Function', Function, 2), 0)(J$.T(353, 'C,a', 21, false), J$.B(82, '+', J$.B(74, '+', J$.T(361, 'return new C(', 21, false), J$.M(385, J$.R(369, 'list', list, 0), 'join', 0)(J$.T(377, ',', 21, false)), 0), J$.T(393, ')', 21, false), 0)), 2));
                            }
                            return J$.X1(473, J$.Rt(465, J$.M(457, J$.R(425, 'factories', factories, 1), J$.R(433, 'argsLength', argsLength, 0), 1)(J$.R(441, 'C', C, 0), J$.R(449, 'args', args, 0))));
                        } catch (J$e) {
                            J$.Ex(1145, J$e);
                        } finally {
                            if (J$.Fr(1153))
                                continue jalangiLabel300;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 481), construct, 3));
            J$.X1(1065, J$.P(1057, J$.R(561, 'module', module, 2), 'exports', J$.C(40, J$.G(577, J$.R(569, 'Function', Function, 2), 'bind', 0)) ? J$._() : J$.T(1049, function bind(that) {
                jalangiLabel302:
                    while (true) {
                        try {
                            J$.Fe(993, arguments.callee, this, arguments);
                            arguments = J$.N(1001, 'arguments', arguments, 4);
                            bind = J$.N(1009, 'bind', bind, 0);
                            that = J$.N(1017, 'that', that, 4);
                            J$.N(1025, 'fn', fn, 0);
                            J$.N(1033, 'partArgs', partArgs, 0);
                            J$.N(1041, 'boundFunction', boundFunction, 0);
                            var fn = J$.X1(617, J$.W(609, 'fn', J$.F(601, J$.R(585, 'aFunction', aFunction, 1), 0)(J$.R(593, 'this', this, 0)), fn, 1));
                            var partArgs = J$.X1(665, J$.W(657, 'partArgs', J$.M(649, J$.R(625, 'slice', slice, 1), 'call', 0)(J$.R(633, 'arguments', arguments, 2), J$.T(641, 1, 22, false)), partArgs, 1));
                            var boundFunction = J$.X1(889, J$.W(881, 'boundFunction', J$.T(873, function bound() {
                                jalangiLabel301:
                                    while (true) {
                                        try {
                                            J$.Fe(841, arguments.callee, this, arguments);
                                            arguments = J$.N(849, 'arguments', arguments, 4);
                                            bound = J$.N(857, 'bound', bound, 0);
                                            J$.N(865, 'args', args, 0);
                                            var args = J$.X1(721, J$.W(713, 'args', J$.M(705, J$.R(673, 'partArgs', partArgs, 0), 'concat', 0)(J$.M(697, J$.R(681, 'slice', slice, 1), 'call', 0)(J$.R(689, 'arguments', arguments, 2))), args, 1));
                                            return J$.X1(833, J$.Rt(825, J$.X1(1161, J$.C(24, J$.B(90, 'instanceof', J$.R(729, 'this', this, 0), J$.R(737, 'boundFunction', boundFunction, 0), 0))) ? J$.F(785, J$.R(745, 'construct', construct, 1), 0)(J$.R(753, 'fn', fn, 0), J$.G(769, J$.R(761, 'args', args, 0), 'length', 0), J$.R(777, 'args', args, 0)) : J$.M(817, J$.R(793, 'fn', fn, 0), 'apply', 0)(J$.R(801, 'that', that, 0), J$.R(809, 'args', args, 0))));
                                        } catch (J$e) {
                                            J$.Ex(1169, J$e);
                                        } finally {
                                            if (J$.Fr(1177))
                                                continue jalangiLabel301;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 841), boundFunction, 1));
                            if (J$.X1(1185, J$.C(32, J$.F(921, J$.R(897, 'isObject', isObject, 1), 0)(J$.G(913, J$.R(905, 'fn', fn, 0), 'prototype', 0)))))
                                J$.X1(961, J$.P(953, J$.R(929, 'boundFunction', boundFunction, 0), 'prototype', J$.G(945, J$.R(937, 'fn', fn, 0), 'prototype', 0), 0));
                            return J$.X1(985, J$.Rt(977, J$.R(969, 'boundFunction', boundFunction, 0)));
                        } catch (J$e) {
                            J$.Ex(1193, J$e);
                        } finally {
                            if (J$.Fr(1201))
                                continue jalangiLabel302;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 993), 0));
        } catch (J$e) {
            J$.Ex(1209, J$e);
        } finally {
            if (J$.Sr(1217)) {
                J$.L();
                continue jalangiLabel303;
            } else {
                J$.L();
                break jalangiLabel303;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
