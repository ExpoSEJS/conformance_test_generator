{"8":[13,10,13,56],"9":[1,14,1,21],"10":[6,35,6,53],"16":[13,10,13,56],"17":[1,22,1,43],"18":[6,14,6,54],"24":[10,18,10,24],"25":[1,14,1,44],"26":[6,59,6,68],"33":[1,14,1,44],"34":[6,14,6,68],"41":[1,14,1,44],"42":[13,10,13,22],"49":[2,12,2,19],"50":[13,26,13,56],"57":[2,20,2,46],"58":[13,59,13,61],"65":[2,12,2,47],"73":[2,12,2,52],"81":[2,12,2,52],"89":[2,12,2,52],"97":[3,19,3,26],"105":[3,27,3,53],"113":[3,19,3,54],"121":[3,19,3,54],"129":[3,19,3,54],"137":[5,24,5,30],"145":[5,24,5,41],"153":[5,24,5,41],"161":[5,24,5,41],"169":[6,14,6,15],"177":[6,18,6,34],"185":[6,35,6,46],"193":[6,49,6,53],"201":[6,18,6,54],"209":[6,60,6,68],"217":[6,14,6,68],"225":[6,14,6,68],"233":[10,1,10,7],"241":[10,18,10,24],"249":[11,23,11,27],"257":[11,28,11,34],"265":[11,35,11,41],"273":[11,28,11,42],"281":[11,23,11,43],"289":[11,23,11,43],"297":[11,23,11,43],"305":[12,16,12,32],"313":[12,33,12,46],"321":[12,16,12,47],"329":[12,16,12,47],"337":[12,16,12,47],"345":[13,10,13,16],"353":[13,21,13,22],"361":[13,26,13,39],"369":[13,47,13,48],"377":[13,26,13,49],"379":[13,26,13,46],"385":[13,53,13,56],"393":[13,60,13,61],"401":[13,64,13,70],"409":[13,10,13,70],"417":[13,3,13,71],"425":[10,27,14,2],"433":[10,27,14,2],"441":[10,27,14,2],"449":[10,27,14,2],"457":[10,27,14,2],"465":[10,27,14,2],"473":[10,27,14,2],"481":[14,5,14,21],"489":[10,1,14,21],"497":[10,1,14,22],"505":[1,1,15,1],"513":[1,1,15,1],"521":[1,1,15,1],"529":[1,1,15,1],"537":[1,1,15,1],"545":[1,1,15,1],"553":[13,10,13,70],"561":[10,27,14,2],"569":[10,27,14,2],"577":[10,18,14,21],"585":[1,1,15,1],"593":[1,1,15,1],"nBranches":6,"originalCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/internals/parse-float.js","instrumentedCodeFileName":"/home/blake/PhD/corejs/scanner/node_modules/core-js/internals/parse-float_jalangi_.js","code":"var global = require('../internals/global');\nvar trim = require('../internals/string-trim').trim;\nvar whitespaces = require('../internals/whitespaces');\n\nvar nativeParseFloat = global.parseFloat;\nvar FORCED = 1 / nativeParseFloat(whitespaces + '-0') !== -Infinity;\n\n// `parseFloat` method\n// https://tc39.github.io/ecma262/#sec-parsefloat-string\nmodule.exports = FORCED ? function parseFloat(string) {\n  var trimmedString = trim(String(string));\n  var result = nativeParseFloat(trimmedString);\n  return result === 0 && trimmedString.charAt(0) == '-' ? -0 : result;\n} : nativeParseFloat;\n"}