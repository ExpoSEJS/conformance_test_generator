J$.iids = {"8":[7,7,7,23],"9":[1,17,1,24],"10":[7,7,7,23],"16":[10,7,10,24],"17":[1,25,1,50],"18":[10,7,10,24],"25":[1,17,1,51],"33":[1,17,1,51],"41":[1,17,1,51],"49":[2,16,2,23],"57":[2,24,2,48],"65":[2,16,2,49],"73":[2,16,2,49],"81":[2,16,2,49],"89":[6,1,6,7],"97":[7,7,7,9],"105":[7,14,7,23],"113":[7,32,7,33],"121":[7,32,7,33],"129":[7,25,7,34],"137":[8,16,8,25],"145":[8,26,8,28],"153":[8,16,8,29],"161":[8,16,8,29],"169":[8,16,8,29],"177":[9,16,9,24],"185":[9,25,9,31],"193":[9,16,9,32],"201":[9,16,9,32],"209":[9,16,9,32],"217":[10,7,10,13],"225":[10,18,10,24],"233":[10,32,10,42],"241":[10,43,10,66],"249":[10,32,10,67],"257":[10,32,10,67],"265":[10,26,10,68],"273":[11,10,11,16],"281":[11,10,11,16],"289":[11,3,11,17],"297":[6,18,12,2],"305":[6,18,12,2],"313":[6,18,12,2],"321":[6,18,12,2],"329":[6,18,12,2],"337":[6,18,12,2],"345":[6,1,12,2],"353":[6,1,12,3],"361":[1,1,13,1],"369":[1,1,13,1],"377":[1,1,13,1],"385":[7,3,7,34],"393":[10,3,10,68],"401":[6,18,12,2],"409":[6,18,12,2],"417":[1,1,13,1],"425":[1,1,13,1],"nBranches":4,"originalCodeFileName":"/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/internals/to-index.js","instrumentedCodeFileName":"/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/internals/to-index_jalangi_.js","code":"var toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\n\n// `ToIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-toindex\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toInteger(it);\n  var length = toLength(number);\n  if (number !== length) throw RangeError('Wrong length or index');\n  return length;\n};\n"};
jalangiLabel851:
    while (true) {
        try {
            J$.Se(361, '/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/internals/to-index_jalangi_.js', '/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/internals/to-index.js');
            J$.N(369, 'toInteger', toInteger, 0);
            J$.N(377, 'toLength', toLength, 0);
            var toInteger = J$.X1(41, J$.W(33, 'toInteger', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../internals/to-integer', 21, false)), toInteger, 3));
            var toLength = J$.X1(81, J$.W(73, 'toLength', J$.F(65, J$.R(49, 'require', require, 2), 0)(J$.T(57, '../internals/to-length', 21, false)), toLength, 3));
            J$.X1(353, J$.P(345, J$.R(89, 'module', module, 2), 'exports', J$.T(337, function (it) {
                jalangiLabel850:
                    while (true) {
                        try {
                            J$.Fe(297, arguments.callee, this, arguments);
                            arguments = J$.N(305, 'arguments', arguments, 4);
                            it = J$.N(313, 'it', it, 4);
                            J$.N(321, 'number', number, 0);
                            J$.N(329, 'length', length, 0);
                            if (J$.X1(385, J$.C(8, J$.B(10, '===', J$.R(97, 'it', it, 0), J$.T(105, undefined, 24, false), 0))))
                                return J$.X1(129, J$.Rt(121, J$.T(113, 0, 22, false)));
                            var number = J$.X1(169, J$.W(161, 'number', J$.F(153, J$.R(137, 'toInteger', toInteger, 1), 0)(J$.R(145, 'it', it, 0)), number, 1));
                            var length = J$.X1(209, J$.W(201, 'length', J$.F(193, J$.R(177, 'toLength', toLength, 1), 0)(J$.R(185, 'number', number, 0)), length, 1));
                            if (J$.X1(393, J$.C(16, J$.B(18, '!==', J$.R(217, 'number', number, 0), J$.R(225, 'length', length, 0), 0))))
                                throw J$.X1(265, J$.Th(257, J$.F(249, J$.R(233, 'RangeError', RangeError, 2), 0)(J$.T(241, 'Wrong length or index', 21, false))));
                            return J$.X1(289, J$.Rt(281, J$.R(273, 'length', length, 0)));
                        } catch (J$e) {
                            J$.Ex(401, J$e);
                        } finally {
                            if (J$.Fr(409))
                                continue jalangiLabel850;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 297), 0));
        } catch (J$e) {
            J$.Ex(417, J$e);
        } finally {
            if (J$.Sr(425)) {
                J$.L();
                continue jalangiLabel851;
            } else {
                J$.L();
                break jalangiLabel851;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
