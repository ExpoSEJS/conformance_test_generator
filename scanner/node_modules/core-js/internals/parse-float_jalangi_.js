J$.iids = {"8":[13,10,13,56],"9":[1,14,1,21],"10":[6,35,6,53],"16":[13,10,13,56],"17":[1,22,1,43],"18":[6,14,6,54],"24":[10,18,10,24],"25":[1,14,1,44],"26":[6,59,6,68],"33":[1,14,1,44],"34":[6,14,6,68],"41":[1,14,1,44],"42":[13,10,13,22],"49":[2,12,2,19],"50":[13,26,13,56],"57":[2,20,2,46],"58":[13,59,13,61],"65":[2,12,2,47],"73":[2,12,2,52],"81":[2,12,2,52],"89":[2,12,2,52],"97":[3,19,3,26],"105":[3,27,3,53],"113":[3,19,3,54],"121":[3,19,3,54],"129":[3,19,3,54],"137":[5,24,5,30],"145":[5,24,5,41],"153":[5,24,5,41],"161":[5,24,5,41],"169":[6,14,6,15],"177":[6,18,6,34],"185":[6,35,6,46],"193":[6,49,6,53],"201":[6,18,6,54],"209":[6,60,6,68],"217":[6,14,6,68],"225":[6,14,6,68],"233":[10,1,10,7],"241":[10,18,10,24],"249":[11,23,11,27],"257":[11,28,11,34],"265":[11,35,11,41],"273":[11,28,11,42],"281":[11,23,11,43],"289":[11,23,11,43],"297":[11,23,11,43],"305":[12,16,12,32],"313":[12,33,12,46],"321":[12,16,12,47],"329":[12,16,12,47],"337":[12,16,12,47],"345":[13,10,13,16],"353":[13,21,13,22],"361":[13,26,13,39],"369":[13,47,13,48],"377":[13,26,13,49],"379":[13,26,13,46],"385":[13,53,13,56],"393":[13,60,13,61],"401":[13,64,13,70],"409":[13,10,13,70],"417":[13,3,13,71],"425":[10,27,14,2],"433":[10,27,14,2],"441":[10,27,14,2],"449":[10,27,14,2],"457":[10,27,14,2],"465":[10,27,14,2],"473":[10,27,14,2],"481":[14,5,14,21],"489":[10,1,14,21],"497":[10,1,14,22],"505":[1,1,15,1],"513":[1,1,15,1],"521":[1,1,15,1],"529":[1,1,15,1],"537":[1,1,15,1],"545":[1,1,15,1],"553":[13,10,13,70],"561":[10,27,14,2],"569":[10,27,14,2],"577":[10,18,14,21],"585":[1,1,15,1],"593":[1,1,15,1],"nBranches":6,"originalCodeFileName":"/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/internals/parse-float.js","instrumentedCodeFileName":"/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/internals/parse-float_jalangi_.js","code":"var global = require('../internals/global');\nvar trim = require('../internals/string-trim').trim;\nvar whitespaces = require('../internals/whitespaces');\n\nvar nativeParseFloat = global.parseFloat;\nvar FORCED = 1 / nativeParseFloat(whitespaces + '-0') !== -Infinity;\n\n// `parseFloat` method\n// https://tc39.github.io/ecma262/#sec-parsefloat-string\nmodule.exports = FORCED ? function parseFloat(string) {\n  var trimmedString = trim(String(string));\n  var result = nativeParseFloat(trimmedString);\n  return result === 0 && trimmedString.charAt(0) == '-' ? -0 : result;\n} : nativeParseFloat;\n"};
jalangiLabel569:
    while (true) {
        try {
            J$.Se(505, '/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/internals/parse-float_jalangi_.js', '/home/blake/PhD/conformance_test_runner/scanner/node_modules/core-js/internals/parse-float.js');
            J$.N(513, 'global', global, 0);
            J$.N(521, 'trim', trim, 0);
            J$.N(529, 'whitespaces', whitespaces, 0);
            J$.N(537, 'nativeParseFloat', nativeParseFloat, 0);
            J$.N(545, 'FORCED', FORCED, 0);
            var global = J$.X1(41, J$.W(33, 'global', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, '../internals/global', 21, false)), global, 3));
            var trim = J$.X1(89, J$.W(81, 'trim', J$.G(73, J$.F(65, J$.R(49, 'require', require, 2), 0)(J$.T(57, '../internals/string-trim', 21, false)), 'trim', 0), trim, 3));
            var whitespaces = J$.X1(129, J$.W(121, 'whitespaces', J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, '../internals/whitespaces', 21, false)), whitespaces, 3));
            var nativeParseFloat = J$.X1(161, J$.W(153, 'nativeParseFloat', J$.G(145, J$.R(137, 'global', global, 1), 'parseFloat', 0), nativeParseFloat, 3));
            var FORCED = J$.X1(225, J$.W(217, 'FORCED', J$.B(34, '!==', J$.B(18, '/', J$.T(169, 1, 22, false), J$.F(201, J$.R(177, 'nativeParseFloat', nativeParseFloat, 1), 0)(J$.B(10, '+', J$.R(185, 'whitespaces', whitespaces, 1), J$.T(193, '-0', 21, false), 0)), 0), J$.U(26, '-', J$.T(209, Infinity, 22, false)), 0), FORCED, 3));
            J$.X1(497, J$.P(489, J$.R(233, 'module', module, 2), 'exports', J$.X1(577, J$.C(24, J$.R(241, 'FORCED', FORCED, 1))) ? J$.T(473, function parseFloat(string) {
                jalangiLabel568:
                    while (true) {
                        try {
                            J$.Fe(425, arguments.callee, this, arguments);
                            arguments = J$.N(433, 'arguments', arguments, 4);
                            parseFloat = J$.N(441, 'parseFloat', parseFloat, 0);
                            string = J$.N(449, 'string', string, 4);
                            J$.N(457, 'trimmedString', trimmedString, 0);
                            J$.N(465, 'result', result, 0);
                            var trimmedString = J$.X1(297, J$.W(289, 'trimmedString', J$.F(281, J$.R(249, 'trim', trim, 1), 0)(J$.F(273, J$.R(257, 'String', String, 2), 0)(J$.R(265, 'string', string, 0))), trimmedString, 1));
                            var result = J$.X1(337, J$.W(329, 'result', J$.F(321, J$.R(305, 'nativeParseFloat', nativeParseFloat, 1), 0)(J$.R(313, 'trimmedString', trimmedString, 0)), result, 1));
                            return J$.X1(417, J$.Rt(409, J$.X1(553, J$.C(16, J$.C(8, J$.B(42, '===', J$.R(345, 'result', result, 0), J$.T(353, 0, 22, false), 0)) ? J$.B(50, '==', J$.M(377, J$.R(361, 'trimmedString', trimmedString, 0), 'charAt', 0)(J$.T(369, 0, 22, false)), J$.T(385, '-', 21, false), 0) : J$._())) ? J$.U(58, '-', J$.T(393, 0, 22, false)) : J$.R(401, 'result', result, 0)));
                        } catch (J$e) {
                            J$.Ex(561, J$e);
                        } finally {
                            if (J$.Fr(569))
                                continue jalangiLabel568;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 425) : J$.R(481, 'nativeParseFloat', nativeParseFloat, 1), 0));
        } catch (J$e) {
            J$.Ex(585, J$e);
        } finally {
            if (J$.Sr(593)) {
                J$.L();
                continue jalangiLabel569;
            } else {
                J$.L();
                break jalangiLabel569;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
