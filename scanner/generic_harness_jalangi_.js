J$.iids = {"8":[12,6,12,18],"9":[1,25,1,31],"10":[12,6,12,10],"16":[12,6,12,18],"17":[1,32,1,39],"18":[12,14,12,18],"24":[38,15,38,17],"25":[1,32,1,43],"26":[13,9,13,18],"32":[39,15,39,17],"33":[1,44,1,54],"34":[13,9,13,24],"40":[37,6,37,24],"41":[1,32,1,55],"42":[35,14,35,43],"48":[43,6,43,14],"49":[1,25,1,56],"50":[35,14,35,63],"56":[52,18,52,39],"57":[1,25,1,56],"58":[35,14,35,70],"65":[1,25,1,56],"66":[35,14,35,84],"73":[2,17,2,24],"74":[35,14,35,89],"81":[2,17,2,28],"82":[35,14,35,95],"89":[2,29,2,37],"90":[35,14,35,100],"97":[2,17,2,38],"98":[35,14,35,106],"105":[2,17,2,38],"106":[35,14,35,111],"113":[2,17,2,38],"114":[35,14,35,117],"121":[3,14,3,21],"122":[35,14,35,122],"129":[3,14,3,25],"130":[37,6,37,13],"137":[3,26,3,35],"138":[37,17,37,24],"145":[3,14,3,36],"146":[37,6,37,24],"153":[3,14,3,36],"154":[40,9,40,28],"161":[3,14,3,36],"162":[40,9,40,37],"169":[4,15,4,22],"170":[40,9,40,42],"177":[4,15,4,26],"178":[40,9,40,48],"185":[4,27,4,37],"186":[40,9,40,53],"193":[4,15,4,38],"194":[40,9,40,59],"201":[4,15,4,38],"202":[40,9,40,64],"209":[4,15,4,38],"210":[43,6,43,14],"217":[7,17,7,23],"218":[44,9,44,26],"225":[7,17,7,23],"226":[44,9,44,36],"233":[7,12,7,24],"234":[44,9,44,41],"241":[7,12,7,24],"242":[44,9,44,48],"249":[8,7,8,14],"250":[52,18,52,39],"257":[8,7,8,14],"258":[52,41,52,44],"265":[8,2,8,16],"273":[9,7,9,16],"274":[52,41,52,44],"281":[9,7,9,16],"289":[9,2,9,18],"297":[10,17,10,23],"305":[10,17,10,23],"313":[10,12,10,24],"321":[10,12,10,24],"329":[12,7,12,10],"337":[12,15,12,18],"345":[13,9,13,12],"353":[13,15,13,18],"361":[13,21,13,24],"369":[13,9,13,24],"377":[13,3,13,25],"385":[16,10,16,13],"393":[16,15,16,18],"401":[16,9,16,19],"409":[16,9,16,19],"417":[16,2,16,20],"425":[6,1,17,2],"433":[6,1,17,2],"441":[6,1,17,2],"449":[6,1,17,2],"457":[24,8,24,10],"465":[24,17,24,21],"473":[24,23,24,27],"481":[24,8,24,28],"483":[24,8,24,16],"489":[24,8,24,28],"497":[24,3,24,29],"505":[26,8,26,9],"513":[26,8,26,9],"521":[26,3,26,10],"529":[25,4,27,3],"537":[30,8,30,10],"545":[30,17,30,21],"553":[30,23,30,27],"561":[30,8,30,28],"563":[30,8,30,16],"569":[30,8,30,28],"577":[30,3,30,29],"585":[32,8,32,9],"593":[32,8,32,9],"601":[32,3,32,10],"609":[31,4,33,3],"617":[35,2,35,9],"625":[35,14,35,36],"633":[35,39,35,43],"641":[35,46,35,63],"649":[35,66,35,70],"657":[35,73,35,84],"665":[35,87,35,89],"673":[35,92,35,95],"681":[35,98,35,100],"689":[35,103,35,106],"697":[35,109,35,111],"705":[35,114,35,117],"713":[35,120,35,122],"721":[35,2,35,123],"723":[35,2,35,13],"729":[35,2,35,124],"737":[37,6,37,8],"745":[37,11,37,13],"753":[37,17,37,19],"761":[37,22,37,24],"769":[38,3,38,10],"777":[38,15,38,17],"785":[38,20,38,22],"793":[38,20,38,28],"801":[38,31,38,33],"809":[38,3,38,34],"811":[38,3,38,14],"817":[38,3,38,35],"825":[39,3,39,10],"833":[39,15,39,17],"841":[39,20,39,22],"849":[39,20,39,28],"857":[39,31,39,33],"865":[39,3,39,34],"867":[39,3,39,14],"873":[39,3,39,35],"881":[40,9,40,23],"889":[40,26,40,28],"897":[40,31,40,37],"905":[40,40,40,42],"913":[40,45,40,48],"921":[40,51,40,53],"929":[40,56,40,59],"937":[40,62,40,64],"945":[40,9,40,64],"953":[40,3,40,65],"961":[43,6,43,8],"969":[43,12,43,14],"977":[44,9,44,21],"985":[44,24,44,26],"993":[44,29,44,36],"1001":[44,39,44,41],"1009":[44,44,44,48],"1017":[44,9,44,48],"1025":[44,3,44,49],"1033":[19,1,46,2],"1041":[19,1,46,2],"1049":[19,1,46,2],"1057":[19,1,46,2],"1065":[19,1,46,2],"1073":[19,1,46,2],"1081":[19,1,46,2],"1089":[19,1,46,2],"1097":[19,1,46,2],"1105":[19,1,46,2],"1113":[49,11,49,18],"1121":[49,19,49,23],"1129":[49,11,49,24],"1137":[49,11,49,24],"1145":[49,11,49,24],"1153":[50,12,50,22],"1161":[50,12,50,24],"1169":[50,12,50,24],"1177":[50,12,50,24],"1185":[51,13,51,15],"1193":[51,13,51,15],"1201":[51,13,51,15],"1209":[52,15,52,16],"1217":[52,15,52,16],"1225":[52,15,52,16],"1233":[52,18,52,19],"1241":[52,22,52,39],"1257":[52,41,52,42],"1265":[52,41,52,44],"1281":[53,3,53,7],"1289":[53,13,53,15],"1297":[53,23,53,33],"1305":[53,13,53,34],"1307":[53,13,53,22],"1313":[53,3,53,35],"1315":[53,3,53,12],"1321":[53,3,53,36],"1329":[55,2,55,9],"1337":[55,14,55,19],"1345":[55,2,55,20],"1347":[55,2,55,13],"1353":[55,2,55,21],"1361":[56,2,56,15],"1369":[56,16,56,19],"1377":[56,20,56,21],"1385":[56,16,56,22],"1393":[56,24,56,27],"1401":[56,28,56,29],"1409":[56,24,56,30],"1417":[56,32,56,34],"1425":[56,42,56,48],"1433":[56,32,56,49],"1435":[56,32,56,41],"1441":[56,51,56,55],"1449":[56,2,56,56],"1457":[56,2,56,57],"1465":[48,1,57,2],"1473":[48,1,57,2],"1481":[48,1,57,2],"1489":[48,1,57,2],"1497":[48,1,57,2],"1505":[48,1,57,2],"1513":[59,1,59,13],"1521":[59,1,59,15],"1529":[59,1,59,16],"1537":[1,1,59,16],"1545":[1,1,59,16],"1553":[1,1,59,16],"1561":[1,1,59,16],"1569":[1,1,59,16],"1577":[6,1,17,2],"1585":[1,1,59,16],"1593":[19,1,46,2],"1601":[1,1,59,16],"1609":[48,1,57,2],"1617":[1,1,59,16],"1625":[12,2,14,3],"1633":[6,1,17,2],"1641":[6,1,17,2],"1649":[38,15,38,33],"1657":[39,15,39,33],"1665":[37,2,41,3],"1673":[43,2,45,3],"1681":[19,1,46,2],"1689":[19,1,46,2],"1697":[52,2,54,3],"1705":[52,2,54,3],"1713":[48,1,57,2],"1721":[48,1,57,2],"1729":[1,1,59,16],"1737":[1,1,59,16],"nBranches":14,"originalCodeFileName":"/home/blake/corejs_tests/generic_harness.js","instrumentedCodeFileName":"/home/blake/corejs_tests/generic_harness_jalangi_.js","code":"var numberOfArguments = Number(process.env['NUM_ARGS']);\nvar importCmd = process.env['IMPORT'];\nvar fnName = process.env['FN_NAME'];\nvar fnClear = process.env['FN_CLEAR'];\n\nfunction prepareFns() {\n  var lhs = eval(fnName);\n  eval(fnClear);\n  eval(importCmd);\n  var rhs = eval(fnName);\n\n  if (!lhs || !rhs) {\n    throw lhs + ' ' + rhs;\n  }\n\n  return [rhs, lhs];\n} \n\nfunction test_identity(f1, f2, base, args) {\n\tvar e1, e2;\n\tvar v1, v2;\n\n\ttry {\n\t\tv1 = f1.apply(base, args);\n\t} catch (e) {\n\t\te1 = e;\n\t}\n\n\ttry {\n\t\tv2 = f2.apply(base, args);\n\t} catch (e) {\n\t\te2 = e;\n\t}\n\n\tconsole.log('Executing with base ' + base + ' and arguments ' + args + ' results ' + e1 + ' ' + e2 + ' ' + v1 + ' ' + v2);\n\n\tif (('' + e1) != ('' + e2)) {\n\t\tconsole.log(e1 ? e1.stack : '');\n\t\tconsole.log(e2 ? e2.stack : '');\n\t\tthrow 'Diverge Ex: ' + e1 + ' vs ' + e2 + ' ' + v1 + ' ' + v2;\n\t}\n\n\tif (v1 != v2) {\n\t\tthrow 'Diverge \\'' + v1 + '\\' \\'' +  v2 + '\\'';\n\t} \n}\n\nfunction generateTest() {\n  var S$ = require('S$');\n  var fns = prepareFns();\n  var args = [];\n  for (var i = 0; i < numberOfArguments; i++) {\n    args.push(S$.symbol('Argument'));\n  }\n  console.log('Run');\n  test_identity(fns[0], fns[1], S$.symbol('Base'), args);\n}\n\ngenerateTest();\n"};
jalangiLabel3:
    while (true) {
        try {
            J$.Se(1537, '/home/blake/corejs_tests/generic_harness_jalangi_.js', '/home/blake/corejs_tests/generic_harness.js');
            function prepareFns() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(425, arguments.callee, this, arguments);
                            arguments = J$.N(433, 'arguments', arguments, 4);
                            J$.N(441, 'lhs', lhs, 0);
                            J$.N(449, 'rhs', rhs, 0);
                            var lhs = J$.X1(241, J$.W(233, 'lhs', eval(J$.instrumentEvalCode(J$.R(217, 'fnName', fnName, 1), 225, true)), lhs, 1));
                            J$.X1(265, eval(J$.instrumentEvalCode(J$.R(249, 'fnClear', fnClear, 1), 257, true)));
                            J$.X1(289, eval(J$.instrumentEvalCode(J$.R(273, 'importCmd', importCmd, 1), 281, true)));
                            var rhs = J$.X1(321, J$.W(313, 'rhs', eval(J$.instrumentEvalCode(J$.R(297, 'fnName', fnName, 1), 305, true)), rhs, 1));
                            if (J$.X1(1625, J$.C(16, J$.C(8, J$.U(10, '!', J$.R(329, 'lhs', lhs, 0))) ? J$._() : J$.U(18, '!', J$.R(337, 'rhs', rhs, 0))))) {
                                throw J$.X1(377, J$.Th(369, J$.B(34, '+', J$.B(26, '+', J$.R(345, 'lhs', lhs, 0), J$.T(353, ' ', 21, false), 0), J$.R(361, 'rhs', rhs, 0), 0)));
                            }
                            return J$.X1(417, J$.Rt(409, J$.T(401, [
                                J$.R(385, 'rhs', rhs, 0),
                                J$.R(393, 'lhs', lhs, 0)
                            ], 10, false)));
                        } catch (J$e) {
                            J$.Ex(1633, J$e);
                        } finally {
                            if (J$.Fr(1641))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function test_identity(f1, f2, base, args) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1033, arguments.callee, this, arguments);
                            arguments = J$.N(1041, 'arguments', arguments, 4);
                            f1 = J$.N(1049, 'f1', f1, 4);
                            f2 = J$.N(1057, 'f2', f2, 4);
                            base = J$.N(1065, 'base', base, 4);
                            args = J$.N(1073, 'args', args, 4);
                            J$.N(1081, 'e1', e1, 0);
                            J$.N(1089, 'e2', e2, 0);
                            J$.N(1097, 'v1', v1, 0);
                            J$.N(1105, 'v2', v2, 0);
                            var e1, e2;
                            var v1, v2;
                            try {
                                J$.X1(497, v1 = J$.W(489, 'v1', J$.M(481, J$.R(457, 'f1', f1, 0), 'apply', 0)(J$.R(465, 'base', base, 0), J$.R(473, 'args', args, 0)), v1, 0));
                            } catch (e) {
                                e = J$.N(529, 'e', e, 1);
                                J$.X1(521, e1 = J$.W(513, 'e1', J$.R(505, 'e', e, 0), e1, 0));
                            }
                            try {
                                J$.X1(577, v2 = J$.W(569, 'v2', J$.M(561, J$.R(537, 'f2', f2, 0), 'apply', 0)(J$.R(545, 'base', base, 0), J$.R(553, 'args', args, 0)), v2, 0));
                            } catch (e) {
                                e = J$.N(609, 'e', e, 1);
                                J$.X1(601, e2 = J$.W(593, 'e2', J$.R(585, 'e', e, 0), e2, 0));
                            }
                            J$.X1(729, J$.M(721, J$.R(617, 'console', console, 2), 'log', 0)(J$.B(122, '+', J$.B(114, '+', J$.B(106, '+', J$.B(98, '+', J$.B(90, '+', J$.B(82, '+', J$.B(74, '+', J$.B(66, '+', J$.B(58, '+', J$.B(50, '+', J$.B(42, '+', J$.T(625, 'Executing with base ', 21, false), J$.R(633, 'base', base, 0), 0), J$.T(641, ' and arguments ', 21, false), 0), J$.R(649, 'args', args, 0), 0), J$.T(657, ' results ', 21, false), 0), J$.R(665, 'e1', e1, 0), 0), J$.T(673, ' ', 21, false), 0), J$.R(681, 'e2', e2, 0), 0), J$.T(689, ' ', 21, false), 0), J$.R(697, 'v1', v1, 0), 0), J$.T(705, ' ', 21, false), 0), J$.R(713, 'v2', v2, 0), 0)));
                            if (J$.X1(1665, J$.C(40, J$.B(146, '!=', J$.B(130, '+', J$.T(737, '', 21, false), J$.R(745, 'e1', e1, 0), 0), J$.B(138, '+', J$.T(753, '', 21, false), J$.R(761, 'e2', e2, 0), 0), 0)))) {
                                J$.X1(817, J$.M(809, J$.R(769, 'console', console, 2), 'log', 0)(J$.X1(1649, J$.C(24, J$.R(777, 'e1', e1, 0))) ? J$.G(793, J$.R(785, 'e1', e1, 0), 'stack', 0) : J$.T(801, '', 21, false)));
                                J$.X1(873, J$.M(865, J$.R(825, 'console', console, 2), 'log', 0)(J$.X1(1657, J$.C(32, J$.R(833, 'e2', e2, 0))) ? J$.G(849, J$.R(841, 'e2', e2, 0), 'stack', 0) : J$.T(857, '', 21, false)));
                                throw J$.X1(953, J$.Th(945, J$.B(202, '+', J$.B(194, '+', J$.B(186, '+', J$.B(178, '+', J$.B(170, '+', J$.B(162, '+', J$.B(154, '+', J$.T(881, 'Diverge Ex: ', 21, false), J$.R(889, 'e1', e1, 0), 0), J$.T(897, ' vs ', 21, false), 0), J$.R(905, 'e2', e2, 0), 0), J$.T(913, ' ', 21, false), 0), J$.R(921, 'v1', v1, 0), 0), J$.T(929, ' ', 21, false), 0), J$.R(937, 'v2', v2, 0), 0)));
                            }
                            if (J$.X1(1673, J$.C(48, J$.B(210, '!=', J$.R(961, 'v1', v1, 0), J$.R(969, 'v2', v2, 0), 0)))) {
                                throw J$.X1(1025, J$.Th(1017, J$.B(242, '+', J$.B(234, '+', J$.B(226, '+', J$.B(218, '+', J$.T(977, 'Diverge \'', 21, false), J$.R(985, 'v1', v1, 0), 0), J$.T(993, '\' \'', 21, false), 0), J$.R(1001, 'v2', v2, 0), 0), J$.T(1009, '\'', 21, false), 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(1681, J$e);
                        } finally {
                            if (J$.Fr(1689))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function generateTest() {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1465, arguments.callee, this, arguments);
                            arguments = J$.N(1473, 'arguments', arguments, 4);
                            J$.N(1481, 'S$', S$, 0);
                            J$.N(1489, 'fns', fns, 0);
                            J$.N(1497, 'args', args, 0);
                            J$.N(1505, 'i', i, 0);
                            var S$ = J$.X1(1145, J$.W(1137, 'S$', J$.F(1129, J$.R(1113, 'require', require, 2), 0)(J$.T(1121, 'S$', 21, false)), S$, 1));
                            var fns = J$.X1(1177, J$.W(1169, 'fns', J$.F(1161, J$.R(1153, 'prepareFns', prepareFns, 1), 0)(), fns, 1));
                            var args = J$.X1(1201, J$.W(1193, 'args', J$.T(1185, [], 10, false), args, 1));
                            for (var i = J$.X1(1225, J$.W(1217, 'i', J$.T(1209, 0, 22, false), i, 1)); J$.X1(1697, J$.C(56, J$.B(250, '<', J$.R(1233, 'i', i, 0), J$.R(1241, 'numberOfArguments', numberOfArguments, 1), 0))); J$.X1(1705, J$.B(274, '-', i = J$.W(1265, 'i', J$.B(266, '+', J$.U(258, '+', J$.R(1257, 'i', i, 0)), J$.T(1249, 1, 22, false), 0), i, 0), J$.T(1273, 1, 22, false), 0))) {
                                J$.X1(1321, J$.M(1313, J$.R(1281, 'args', args, 0), 'push', 0)(J$.M(1305, J$.R(1289, 'S$', S$, 0), 'symbol', 0)(J$.T(1297, 'Argument', 21, false))));
                            }
                            J$.X1(1353, J$.M(1345, J$.R(1329, 'console', console, 2), 'log', 0)(J$.T(1337, 'Run', 21, false)));
                            J$.X1(1457, J$.F(1449, J$.R(1361, 'test_identity', test_identity, 1), 0)(J$.G(1385, J$.R(1369, 'fns', fns, 0), J$.T(1377, 0, 22, false), 4), J$.G(1409, J$.R(1393, 'fns', fns, 0), J$.T(1401, 1, 22, false), 4), J$.M(1433, J$.R(1417, 'S$', S$, 0), 'symbol', 0)(J$.T(1425, 'Base', 21, false)), J$.R(1441, 'args', args, 0)));
                        } catch (J$e) {
                            J$.Ex(1713, J$e);
                        } finally {
                            if (J$.Fr(1721))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1545, 'numberOfArguments', numberOfArguments, 0);
            J$.N(1553, 'importCmd', importCmd, 0);
            J$.N(1561, 'fnName', fnName, 0);
            J$.N(1569, 'fnClear', fnClear, 0);
            prepareFns = J$.N(1585, 'prepareFns', J$.T(1577, prepareFns, 12, false, 425), 0);
            test_identity = J$.N(1601, 'test_identity', J$.T(1593, test_identity, 12, false, 1033), 0);
            generateTest = J$.N(1617, 'generateTest', J$.T(1609, generateTest, 12, false, 1465), 0);
            var numberOfArguments = J$.X1(65, J$.W(57, 'numberOfArguments', J$.F(49, J$.R(9, 'Number', Number, 2), 0)(J$.G(41, J$.G(25, J$.R(17, 'process', process, 2), 'env', 0), J$.T(33, 'NUM_ARGS', 21, false), 4)), numberOfArguments, 3));
            var importCmd = J$.X1(113, J$.W(105, 'importCmd', J$.G(97, J$.G(81, J$.R(73, 'process', process, 2), 'env', 0), J$.T(89, 'IMPORT', 21, false), 4), importCmd, 3));
            var fnName = J$.X1(161, J$.W(153, 'fnName', J$.G(145, J$.G(129, J$.R(121, 'process', process, 2), 'env', 0), J$.T(137, 'FN_NAME', 21, false), 4), fnName, 3));
            var fnClear = J$.X1(209, J$.W(201, 'fnClear', J$.G(193, J$.G(177, J$.R(169, 'process', process, 2), 'env', 0), J$.T(185, 'FN_CLEAR', 21, false), 4), fnClear, 3));
            J$.X1(1529, J$.F(1521, J$.R(1513, 'generateTest', generateTest, 1), 0)());
        } catch (J$e) {
            J$.Ex(1729, J$e);
        } finally {
            if (J$.Sr(1737)) {
                J$.L();
                continue jalangiLabel3;
            } else {
                J$.L();
                break jalangiLabel3;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
