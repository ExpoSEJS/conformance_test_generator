J$.iids = {"8":[1,5,1,17],"9":[1,6,1,12],"10":[1,5,1,17],"16":[24,21,24,23],"17":[1,6,1,17],"18":[10,17,10,46],"24":[25,21,25,23],"25":[2,5,2,11],"26":[10,17,10,66],"32":[23,9,23,27],"33":[2,19,2,26],"34":[10,17,10,73],"40":[28,9,28,17],"41":[2,27,2,31],"42":[23,9,23,16],"49":[2,19,2,32],"50":[23,20,23,27],"57":[2,5,2,32],"58":[23,9,23,27],"65":[2,5,2,33],"66":[26,15,26,34],"73":[4,1,4,6],"74":[26,15,26,43],"81":[4,25,4,33],"82":[26,15,26,48],"89":[4,1,4,33],"90":[28,9,28,17],"97":[4,1,4,34],"98":[29,15,29,32],"105":[5,16,5,23],"106":[29,15,29,42],"113":[5,16,5,27],"114":[29,15,29,47],"121":[5,16,5,31],"122":[29,15,29,54],"129":[5,16,5,31],"137":[5,11,5,32],"145":[5,11,5,32],"153":[6,16,6,23],"161":[6,16,6,27],"169":[6,16,6,31],"177":[6,16,6,31],"185":[6,11,6,32],"193":[6,11,6,32],"201":[10,5,10,12],"209":[10,17,10,39],"217":[10,42,10,46],"225":[10,49,10,66],"233":[10,69,10,73],"241":[10,5,10,74],"243":[10,5,10,16],"249":[10,5,10,75],"257":[12,14,12,16],"265":[12,23,12,27],"273":[12,29,12,33],"281":[12,14,12,34],"283":[12,14,12,22],"289":[12,14,12,34],"297":[12,9,12,35],"305":[14,14,14,15],"313":[14,14,14,15],"321":[14,9,14,16],"329":[13,7,15,6],"337":[17,14,17,16],"345":[17,23,17,27],"353":[17,29,17,33],"361":[17,14,17,34],"363":[17,14,17,22],"369":[17,14,17,34],"377":[17,9,17,35],"385":[19,14,19,15],"393":[19,14,19,15],"401":[19,9,19,16],"409":[18,7,20,6],"417":[21,10,21,14],"425":[21,25,21,27],"433":[21,10,21,28],"435":[21,10,21,24],"441":[21,10,21,28],"449":[21,5,21,29],"457":[22,10,22,14],"465":[22,25,22,27],"473":[22,10,22,28],"475":[22,10,22,24],"481":[22,10,22,28],"489":[22,5,22,29],"497":[23,9,23,11],"505":[23,14,23,16],"513":[23,20,23,22],"521":[23,25,23,27],"529":[24,9,24,16],"537":[24,21,24,23],"545":[24,26,24,28],"553":[24,26,24,34],"561":[24,37,24,39],"569":[24,9,24,40],"571":[24,9,24,20],"577":[24,9,24,41],"585":[25,9,25,16],"593":[25,21,25,23],"601":[25,26,25,28],"609":[25,26,25,34],"617":[25,37,25,39],"625":[25,9,25,40],"627":[25,9,25,20],"633":[25,9,25,41],"641":[26,15,26,29],"649":[26,32,26,34],"657":[26,37,26,43],"665":[26,46,26,48],"673":[26,15,26,48],"681":[26,9,26,49],"689":[28,9,28,11],"697":[28,15,28,17],"705":[29,15,29,27],"713":[29,30,29,32],"721":[29,35,29,42],"729":[29,45,29,47],"737":[29,50,29,54],"745":[29,15,29,54],"753":[29,9,29,55],"761":[7,1,31,2],"769":[7,1,31,2],"777":[7,1,31,2],"785":[7,1,31,2],"793":[7,1,31,2],"801":[7,1,31,2],"809":[7,1,31,2],"817":[7,1,31,2],"825":[7,1,31,2],"833":[7,1,31,2],"841":[32,1,32,14],"849":[32,15,32,18],"857":[32,20,32,23],"865":[32,25,32,31],"873":[32,25,32,36],"881":[32,48,32,54],"889":[32,25,32,55],"891":[32,25,32,47],"897":[33,5,33,11],"905":[33,5,33,16],"913":[33,28,33,42],"921":[33,5,33,43],"923":[33,5,33,27],"929":[34,5,34,11],"937":[34,5,34,16],"945":[34,28,34,39],"953":[34,5,34,40],"955":[34,5,34,27],"961":[32,57,35,2],"969":[32,1,35,3],"977":[32,1,35,4],"985":[1,1,35,4],"993":[1,1,35,4],"1001":[1,1,35,4],"1009":[7,1,31,2],"1017":[1,1,35,4],"1025":[1,1,3,2],"1033":[24,21,24,39],"1041":[25,21,25,39],"1049":[23,5,27,6],"1057":[28,5,30,6],"1065":[7,1,31,2],"1073":[7,1,31,2],"1081":[1,1,35,4],"1089":[1,1,35,4],"nBranches":10,"originalCodeFileName":"/home/blake/corejs_tests/test.js","instrumentedCodeFileName":"/home/blake/corejs_tests/test_jalangi_.js","code":"Error.stackTraceLimit = Infinity;\n\nvar lhs = eval(process.env.LHS);\nvar rhs = eval(process.env.RHS);\n\nfunction test_identity(f1, f2, base, args) {\n\tvar e1, e2;\n\tvar v1, v2;\n\n\tconsole.log('Executing with base ' + base + ' and arguments ' + args);\n\n\ttry {\n\t\tv1 = f1.apply(base, args);\n\t} catch (e) {\n\t\te1 = e;\n\t}\n\n\ttry {\n\t\tv2 = f2.apply(base, args);\n\t} catch (e) {\n\t\te2 = e;\n\t}\n\n\tv1 = JSON.stringify(v1);\n\tv2 = JSON.stringify(v2);\n\n\tif (('' + e1) != ('' + e2)) {\n\t\tconsole.log(e1 ? e1.stack : '');\n\t\tconsole.log(e2 ? e2.stack : '');\n\t\tthrow 'Diverge Ex: ' + e1 + ' vs ' + e2;\n\t}\n\n\tif (v1 != v2) {\n\t\tthrow 'Diverge \\'' + v1 + '\\' \\'' +  v2 + '\\'';\n\t} \n}\n\ntest_identity(lhs, rhs, symbolic Base, [symbolic SearchTarget, symbolic FromIndex]);\n"};
jalangiLabel1:
    while (true) {
        try {
            J$.Se(985, '/home/blake/corejs_tests/test_jalangi_.js', '/home/blake/corejs_tests/test.js');
            function test_identity(f1, f2, base, args) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(761, arguments.callee, this, arguments);
                            arguments = J$.N(769, 'arguments', arguments, 4);
                            f1 = J$.N(777, 'f1', f1, 4);
                            f2 = J$.N(785, 'f2', f2, 4);
                            base = J$.N(793, 'base', base, 4);
                            args = J$.N(801, 'args', args, 4);
                            J$.N(809, 'e1', e1, 0);
                            J$.N(817, 'e2', e2, 0);
                            J$.N(825, 'v1', v1, 0);
                            J$.N(833, 'v2', v2, 0);
                            var e1, e2;
                            var v1, v2;
                            J$.X1(249, J$.M(241, J$.R(201, 'console', console, 2), 'log', 0)(J$.B(34, '+', J$.B(26, '+', J$.B(18, '+', J$.T(209, 'Executing with base ', 21, false), J$.R(217, 'base', base, 0), 0), J$.T(225, ' and arguments ', 21, false), 0), J$.R(233, 'args', args, 0), 0)));
                            try {
                                J$.X1(297, v1 = J$.W(289, 'v1', J$.M(281, J$.R(257, 'f1', f1, 0), 'apply', 0)(J$.R(265, 'base', base, 0), J$.R(273, 'args', args, 0)), v1, 0));
                            } catch (e) {
                                e = J$.N(329, 'e', e, 1);
                                J$.X1(321, e1 = J$.W(313, 'e1', J$.R(305, 'e', e, 0), e1, 0));
                            }
                            try {
                                J$.X1(377, v2 = J$.W(369, 'v2', J$.M(361, J$.R(337, 'f2', f2, 0), 'apply', 0)(J$.R(345, 'base', base, 0), J$.R(353, 'args', args, 0)), v2, 0));
                            } catch (e) {
                                e = J$.N(409, 'e', e, 1);
                                J$.X1(401, e2 = J$.W(393, 'e2', J$.R(385, 'e', e, 0), e2, 0));
                            }
                            J$.X1(449, v1 = J$.W(441, 'v1', J$.M(433, J$.R(417, 'JSON', JSON, 2), 'stringify', 0)(J$.R(425, 'v1', v1, 0)), v1, 0));
                            J$.X1(489, v2 = J$.W(481, 'v2', J$.M(473, J$.R(457, 'JSON', JSON, 2), 'stringify', 0)(J$.R(465, 'v2', v2, 0)), v2, 0));
                            if (J$.X1(1049, J$.C(32, J$.B(58, '!=', J$.B(42, '+', J$.T(497, '', 21, false), J$.R(505, 'e1', e1, 0), 0), J$.B(50, '+', J$.T(513, '', 21, false), J$.R(521, 'e2', e2, 0), 0), 0)))) {
                                J$.X1(577, J$.M(569, J$.R(529, 'console', console, 2), 'log', 0)(J$.X1(1033, J$.C(16, J$.R(537, 'e1', e1, 0))) ? J$.G(553, J$.R(545, 'e1', e1, 0), 'stack', 0) : J$.T(561, '', 21, false)));
                                J$.X1(633, J$.M(625, J$.R(585, 'console', console, 2), 'log', 0)(J$.X1(1041, J$.C(24, J$.R(593, 'e2', e2, 0))) ? J$.G(609, J$.R(601, 'e2', e2, 0), 'stack', 0) : J$.T(617, '', 21, false)));
                                throw J$.X1(681, J$.Th(673, J$.B(82, '+', J$.B(74, '+', J$.B(66, '+', J$.T(641, 'Diverge Ex: ', 21, false), J$.R(649, 'e1', e1, 0), 0), J$.T(657, ' vs ', 21, false), 0), J$.R(665, 'e2', e2, 0), 0)));
                            }
                            if (J$.X1(1057, J$.C(40, J$.B(90, '!=', J$.R(689, 'v1', v1, 0), J$.R(697, 'v2', v2, 0), 0)))) {
                                throw J$.X1(753, J$.Th(745, J$.B(122, '+', J$.B(114, '+', J$.B(106, '+', J$.B(98, '+', J$.T(705, 'Diverge \'', 21, false), J$.R(713, 'v1', v1, 0), 0), J$.T(721, '\' \'', 21, false), 0), J$.R(729, 'v2', v2, 0), 0), J$.T(737, '\'', 21, false), 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(1065, J$e);
                        } finally {
                            if (J$.Fr(1073))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(993, 'lhs', lhs, 0);
            J$.N(1001, 'rhs', rhs, 0);
            test_identity = J$.N(1017, 'test_identity', J$.T(1009, test_identity, 12, false, 761), 0);
            if (J$.X1(1025, J$.C(8, J$.U(10, '!', J$.G(17, J$.R(9, 'Object', Object, 2), '_s$_', 0))))) {
                J$.X1(65, J$.P(57, J$.R(25, 'Object', Object, 2), '_s$_', J$.F(49, J$.R(33, 'require', require, 2), 0)(J$.T(41, 'S$', 21, false)), 0));
            }
            J$.X1(97, J$.P(89, J$.R(73, 'Error', Error, 2), 'stackTraceLimit', J$.T(81, Infinity, 22, false), 0));
            var lhs = J$.X1(145, J$.W(137, 'lhs', eval(J$.instrumentEvalCode(J$.G(121, J$.G(113, J$.R(105, 'process', process, 2), 'env', 0), 'LHS', 0), 129, true)), lhs, 3));
            var rhs = J$.X1(193, J$.W(185, 'rhs', eval(J$.instrumentEvalCode(J$.G(169, J$.G(161, J$.R(153, 'process', process, 2), 'env', 0), 'RHS', 0), 177, true)), rhs, 3));
            J$.X1(977, J$.F(969, J$.R(841, 'test_identity', test_identity, 1), 0)(J$.R(849, 'lhs', lhs, 1), J$.R(857, 'rhs', rhs, 1), J$.M(889, J$.G(873, J$.R(865, 'Object', Object, 2), '_s$_', 0), 'pureSymbol', 0)(J$.T(881, 'Base', 21, false)), J$.T(961, [
                J$.M(921, J$.G(905, J$.R(897, 'Object', Object, 2), '_s$_', 0), 'pureSymbol', 0)(J$.T(913, 'SearchTarget', 21, false)),
                J$.M(953, J$.G(937, J$.R(929, 'Object', Object, 2), '_s$_', 0), 'pureSymbol', 0)(J$.T(945, 'FromIndex', 21, false))
            ], 10, false)));
        } catch (J$e) {
            J$.Ex(1081, J$e);
        } finally {
            if (J$.Sr(1089)) {
                J$.L();
                continue jalangiLabel1;
            } else {
                J$.L();
                break jalangiLabel1;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
